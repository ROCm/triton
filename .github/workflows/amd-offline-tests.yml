name: AMD Offline Tests

on:
  workflow_dispatch:
  pull_request:
    branches: [main, triton-mlir]
  merge_group:
    branches: [main, triton-mlir]
    types: [checks_requested]
  push:
    branches: [main, triton-mlir]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions: read-all

env:
  TRITON_BUILD_WITH_CLANG_LLD: "TRUE"
  TRITON_USE_ASSERT_ENABLED_LLVM: "TRUE"
  TRITON_DISABLE_LINE_INFO: 1

jobs:
  Runner-Preparation:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      matrix-HIP: ${{ steps.set-matrix.outputs.matrix-HIP }}
    steps:
      - name: Prepare runner matrix
        id: set-matrix
        run: |
          if [ x"${{ github.repository }}" == x"ROCm/triton" ]; then
            echo '::set-output name=matrix-HIP::[["self-hosted", "rocm.gfx90a"]]'
          else
            echo '::set-output name=matrix-HIP::["ubuntu-latest"]'
          fi

  Integration-Tests-AMD:
    needs: Runner-Preparation
    if: needs.Runner-Preparation.outputs.matrix-HIP != ''
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 30
    strategy:
      matrix:
        runner: ${{fromJson(needs.Runner-Preparation.outputs.matrix-HIP)}}
    container:
      image: rocm/pytorch:rocm6.0.2_ubuntu22.04_py3.10_pytorch_2.1.2
      options: --device=/dev/kfd --device=/dev/dri --security-opt seccomp=unconfined --group-add video --user root
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Clear cache
        run: |
          rm -rf ~/.triton
          mkdir -p ~/.triton
          ls -alh ~/.triton
      - name: Update PATH
        run: |
          echo "/opt/rocm/llvm/bin" >> $GITHUB_PATH
      - name: Install pip dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install lit matplotlib pandas
      - name: Install Triton
        run: |
          echo "PATH is '$PATH'"
          pip uninstall -y triton
          cd python
          pip install -v -e .
 
      - name: Run Perf Kernels Unit Tests
        run: |
          pytest -vvv ./python/perf-kernels/flash-attention.py
      
      - name: Run Perf Kernels Benchmark
        run: |
          python ./python/perf-kernels/flash-attention.py

      - name: Run Core Tests
        run: |
            pytest -n 32 ./python/test/unit/language/test_core_amd.py

      - name: Run lit tests
        run: |
          python3 -m pip install lit
          cd python
          LIT_TEST_DIR="build/$(ls build | grep -i cmake)/test"
          if [ ! -d "${LIT_TEST_DIR}" ]; then
            echo "Could not find '${LIT_TEST_DIR}'" ; exit -1
          fi
          lit -v "${LIT_TEST_DIR}"

      - name: Run CXX unittests
        run: |
          cd python
          cd "build/$(ls build | grep -i cmake)"
          ctest
