// -----// IR Dump After Canonicalizer (canonicalize) //----- //
tt.func public @softmax_kernel_0d1d234(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32) attributes {noinline = false} {
  %cst = arith.constant dense<0xFF800000> : tensor<2xf32>
  %0 = tt.get_program_id x : i32
  %1 = arith.muli %0, %arg2 : i32
  %2 = tt.addptr %arg1, %1 : !tt.ptr<f32>, i32
  %3 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32>
  %4 = tt.splat %2 : (!tt.ptr<f32>) -> tensor<2x!tt.ptr<f32>>
  %5 = tt.addptr %4, %3 : tensor<2x!tt.ptr<f32>>, tensor<2xi32>
  %6 = tt.splat %arg4 : (i32) -> tensor<2xi32>
  %7 = arith.cmpi slt, %3, %6 : tensor<2xi32>
  %8 = tt.load %5, %7, %cst {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : tensor<2xf32>
  %9 = tt.call @max__fp32S2S__1cconstexpr_0__2cconstexpr_False_(%8) : (tensor<2xf32>) -> f32
  %10 = tt.splat %9 : (f32) -> tensor<2xf32>
  %11 = arith.subf %8, %10 : tensor<2xf32>
  %12 = math.exp %11 : tensor<2xf32>
  %13 = tt.call @sum__fp32S2S__1cconstexpr_0_(%12) : (tensor<2xf32>) -> f32
  %14 = tt.splat %13 : (f32) -> tensor<2xf32>
  %15 = arith.divf %12, %14 : tensor<2xf32>
  %16 = arith.muli %0, %arg3 : i32
  %17 = tt.addptr %arg0, %16 : !tt.ptr<f32>, i32
  %18 = tt.splat %17 : (!tt.ptr<f32>) -> tensor<2x!tt.ptr<f32>>
  %19 = tt.addptr %18, %3 : tensor<2x!tt.ptr<f32>>, tensor<2xi32>
  %20 = tt.splat %arg4 : (i32) -> tensor<2xi32>
  %21 = arith.cmpi slt, %3, %20 : tensor<2xi32>
  tt.store %19, %15, %21 {cache = 1 : i32, evict = 1 : i32} : tensor<2xf32>
  tt.return
}

// -----// IR Dump After Inliner (inline) //----- //
module {
  tt.func public @softmax_kernel_0d1d234(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32) attributes {noinline = false} {
    %cst = arith.constant dense<0xFF800000> : tensor<2xf32>
    %0 = tt.get_program_id x : i32
    %1 = arith.muli %0, %arg2 : i32
    %2 = tt.addptr %arg1, %1 : !tt.ptr<f32>, i32
    %3 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32>
    %4 = tt.splat %2 : (!tt.ptr<f32>) -> tensor<2x!tt.ptr<f32>>
    %5 = tt.addptr %4, %3 : tensor<2x!tt.ptr<f32>>, tensor<2xi32>
    %6 = tt.splat %arg4 : (i32) -> tensor<2xi32>
    %7 = arith.cmpi slt, %3, %6 : tensor<2xi32>
    %8 = tt.load %5, %7, %cst {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : tensor<2xf32>
    %9 = "tt.reduce"(%8) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32, %arg6: f32):
      %22 = arith.cmpf ogt, %arg5, %arg6 : f32
      %23 = arith.select %22, %arg5, %arg6 : f32
      tt.reduce.return %23 : f32
    }) : (tensor<2xf32>) -> f32
    %10 = tt.splat %9 : (f32) -> tensor<2xf32>
    %11 = arith.subf %8, %10 : tensor<2xf32>
    %12 = math.exp %11 : tensor<2xf32>
    %13 = "tt.reduce"(%12) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32, %arg6: f32):
      %22 = arith.addf %arg5, %arg6 : f32
      tt.reduce.return %22 : f32
    }) : (tensor<2xf32>) -> f32
    %14 = tt.splat %13 : (f32) -> tensor<2xf32>
    %15 = arith.divf %12, %14 : tensor<2xf32>
    %16 = arith.muli %0, %arg3 : i32
    %17 = tt.addptr %arg0, %16 : !tt.ptr<f32>, i32
    %18 = tt.splat %17 : (!tt.ptr<f32>) -> tensor<2x!tt.ptr<f32>>
    %19 = tt.addptr %18, %3 : tensor<2x!tt.ptr<f32>>, tensor<2xi32>
    %20 = tt.splat %arg4 : (i32) -> tensor<2xi32>
    %21 = arith.cmpi slt, %3, %20 : tensor<2xi32>
    tt.store %19, %15, %21 {cache = 1 : i32, evict = 1 : i32} : tensor<2xf32>
    tt.return
  }
}


// -----// IR Dump After CSE (cse) //----- //
module {
  tt.func public @softmax_kernel_0d1d234(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32) attributes {noinline = false} {
    %cst = arith.constant dense<0xFF800000> : tensor<2xf32>
    %0 = tt.get_program_id x : i32
    %1 = arith.muli %0, %arg2 : i32
    %2 = tt.addptr %arg1, %1 : !tt.ptr<f32>, i32
    %3 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32>
    %4 = tt.splat %2 : (!tt.ptr<f32>) -> tensor<2x!tt.ptr<f32>>
    %5 = tt.addptr %4, %3 : tensor<2x!tt.ptr<f32>>, tensor<2xi32>
    %6 = tt.splat %arg4 : (i32) -> tensor<2xi32>
    %7 = arith.cmpi slt, %3, %6 : tensor<2xi32>
    %8 = tt.load %5, %7, %cst {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : tensor<2xf32>
    %9 = "tt.reduce"(%8) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32, %arg6: f32):
      %20 = arith.cmpf ogt, %arg5, %arg6 : f32
      %21 = arith.select %20, %arg5, %arg6 : f32
      tt.reduce.return %21 : f32
    }) : (tensor<2xf32>) -> f32
    %10 = tt.splat %9 : (f32) -> tensor<2xf32>
    %11 = arith.subf %8, %10 : tensor<2xf32>
    %12 = math.exp %11 : tensor<2xf32>
    %13 = "tt.reduce"(%12) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32, %arg6: f32):
      %20 = arith.addf %arg5, %arg6 : f32
      tt.reduce.return %20 : f32
    }) : (tensor<2xf32>) -> f32
    %14 = tt.splat %13 : (f32) -> tensor<2xf32>
    %15 = arith.divf %12, %14 : tensor<2xf32>
    %16 = arith.muli %0, %arg3 : i32
    %17 = tt.addptr %arg0, %16 : !tt.ptr<f32>, i32
    %18 = tt.splat %17 : (!tt.ptr<f32>) -> tensor<2x!tt.ptr<f32>>
    %19 = tt.addptr %18, %3 : tensor<2x!tt.ptr<f32>>, tensor<2xi32>
    tt.store %19, %15, %7 {cache = 1 : i32, evict = 1 : i32} : tensor<2xf32>
    tt.return
  }
}


// -----// IR Dump After ConvertTritonToTritonGPU (convert-triton-to-tritongpu) //----- //
#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [64], warpsPerCTA = [2], order = [0]}>
module attributes {"triton_gpu.num-warps" = 2 : i32, "triton_gpu.threads-per-warp" = 64 : i32} {
  tt.func public @softmax_kernel_0d1d234(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32) attributes {noinline = false} {
    %cst = arith.constant dense<0xFF800000> : tensor<2xf32, #blocked>
    %0 = tt.get_program_id x : i32
    %1 = arith.muli %0, %arg2 : i32
    %2 = tt.addptr %arg1, %1 : !tt.ptr<f32>, i32
    %3 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #blocked>
    %4 = tt.splat %2 : (!tt.ptr<f32>) -> tensor<2x!tt.ptr<f32>, #blocked>
    %5 = tt.addptr %4, %3 : tensor<2x!tt.ptr<f32>, #blocked>, tensor<2xi32, #blocked>
    %6 = tt.splat %arg4 : (i32) -> tensor<2xi32, #blocked>
    %7 = "triton_gpu.cmpi"(%3, %6) <{predicate = 2 : i64}> : (tensor<2xi32, #blocked>, tensor<2xi32, #blocked>) -> tensor<2xi1, #blocked>
    %8 = tt.load %5, %7, %cst {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : tensor<2xf32, #blocked>
    %9 = "tt.reduce"(%8) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32, %arg6: f32):
      %20 = "triton_gpu.cmpf"(%arg5, %arg6) <{predicate = 2 : i64}> : (f32, f32) -> i1
      %21 = arith.select %20, %arg5, %arg6 : f32
      tt.reduce.return %21 : f32
    }) : (tensor<2xf32, #blocked>) -> f32
    %10 = tt.splat %9 : (f32) -> tensor<2xf32, #blocked>
    %11 = arith.subf %8, %10 : tensor<2xf32, #blocked>
    %12 = math.exp %11 : tensor<2xf32, #blocked>
    %13 = "tt.reduce"(%12) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32, %arg6: f32):
      %20 = arith.addf %arg5, %arg6 : f32
      tt.reduce.return %20 : f32
    }) : (tensor<2xf32, #blocked>) -> f32
    %14 = tt.splat %13 : (f32) -> tensor<2xf32, #blocked>
    %15 = arith.divf %12, %14 : tensor<2xf32, #blocked>
    %16 = arith.muli %0, %arg3 : i32
    %17 = tt.addptr %arg0, %16 : !tt.ptr<f32>, i32
    %18 = tt.splat %17 : (!tt.ptr<f32>) -> tensor<2x!tt.ptr<f32>, #blocked>
    %19 = tt.addptr %18, %3 : tensor<2x!tt.ptr<f32>, #blocked>, tensor<2xi32, #blocked>
    tt.store %19, %15, %7 {cache = 1 : i32, evict = 1 : i32} : tensor<2xf32, #blocked>
    tt.return
  }
}


// -----// IR Dump After TritonGPUCoalesce (tritongpu-coalesce) //----- //
#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [64], warpsPerCTA = [2], order = [0]}>
module attributes {"triton_gpu.num-warps" = 2 : i32, "triton_gpu.threads-per-warp" = 64 : i32} {
  tt.func public @softmax_kernel_0d1d234(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32) attributes {noinline = false} {
    %cst = arith.constant dense<0xFF800000> : tensor<2xf32, #blocked>
    %0 = tt.get_program_id x : i32
    %1 = arith.muli %0, %arg2 : i32
    %2 = tt.addptr %arg1, %1 : !tt.ptr<f32>, i32
    %3 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #blocked>
    %4 = tt.splat %2 : (!tt.ptr<f32>) -> tensor<2x!tt.ptr<f32>, #blocked>
    %5 = tt.addptr %4, %3 : tensor<2x!tt.ptr<f32>, #blocked>, tensor<2xi32, #blocked>
    %6 = tt.splat %arg4 : (i32) -> tensor<2xi32, #blocked>
    %7 = "triton_gpu.cmpi"(%3, %6) <{predicate = 2 : i64}> : (tensor<2xi32, #blocked>, tensor<2xi32, #blocked>) -> tensor<2xi1, #blocked>
    %8 = triton_gpu.convert_layout %5 : (tensor<2x!tt.ptr<f32>, #blocked>) -> tensor<2x!tt.ptr<f32>, #blocked>
    %9 = triton_gpu.convert_layout %7 : (tensor<2xi1, #blocked>) -> tensor<2xi1, #blocked>
    %10 = triton_gpu.convert_layout %cst : (tensor<2xf32, #blocked>) -> tensor<2xf32, #blocked>
    %11 = tt.load %8, %9, %10 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : tensor<2xf32, #blocked>
    %12 = "tt.reduce"(%11) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32, %arg6: f32):
      %26 = "triton_gpu.cmpf"(%arg5, %arg6) <{predicate = 2 : i64}> : (f32, f32) -> i1
      %27 = arith.select %26, %arg5, %arg6 : f32
      tt.reduce.return %27 : f32
    }) : (tensor<2xf32, #blocked>) -> f32
    %13 = tt.splat %12 : (f32) -> tensor<2xf32, #blocked>
    %14 = arith.subf %11, %13 : tensor<2xf32, #blocked>
    %15 = math.exp %14 : tensor<2xf32, #blocked>
    %16 = "tt.reduce"(%15) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32, %arg6: f32):
      %26 = arith.addf %arg5, %arg6 : f32
      tt.reduce.return %26 : f32
    }) : (tensor<2xf32, #blocked>) -> f32
    %17 = tt.splat %16 : (f32) -> tensor<2xf32, #blocked>
    %18 = arith.divf %15, %17 : tensor<2xf32, #blocked>
    %19 = arith.muli %0, %arg3 : i32
    %20 = tt.addptr %arg0, %19 : !tt.ptr<f32>, i32
    %21 = tt.splat %20 : (!tt.ptr<f32>) -> tensor<2x!tt.ptr<f32>, #blocked>
    %22 = tt.addptr %21, %3 : tensor<2x!tt.ptr<f32>, #blocked>, tensor<2xi32, #blocked>
    %23 = triton_gpu.convert_layout %22 : (tensor<2x!tt.ptr<f32>, #blocked>) -> tensor<2x!tt.ptr<f32>, #blocked>
    %24 = triton_gpu.convert_layout %18 : (tensor<2xf32, #blocked>) -> tensor<2xf32, #blocked>
    %25 = triton_gpu.convert_layout %7 : (tensor<2xi1, #blocked>) -> tensor<2xi1, #blocked>
    tt.store %23, %24, %25 {cache = 1 : i32, evict = 1 : i32} : tensor<2xf32, #blocked>
    tt.return
  }
}


// -----// IR Dump After TritonGPURemoveLayoutConversions (tritongpu-remove-layout-conversions) //----- //
#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [64], warpsPerCTA = [2], order = [0]}>
module attributes {"triton_gpu.num-warps" = 2 : i32, "triton_gpu.threads-per-warp" = 64 : i32} {
  tt.func public @softmax_kernel_0d1d234(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32) attributes {noinline = false} {
    %cst = arith.constant dense<0xFF800000> : tensor<2xf32, #blocked>
    %0 = tt.get_program_id x : i32
    %1 = arith.muli %0, %arg2 : i32
    %2 = tt.addptr %arg1, %1 : !tt.ptr<f32>, i32
    %3 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #blocked>
    %4 = tt.splat %2 : (!tt.ptr<f32>) -> tensor<2x!tt.ptr<f32>, #blocked>
    %5 = tt.addptr %4, %3 : tensor<2x!tt.ptr<f32>, #blocked>, tensor<2xi32, #blocked>
    %6 = tt.splat %arg4 : (i32) -> tensor<2xi32, #blocked>
    %7 = "triton_gpu.cmpi"(%3, %6) <{predicate = 2 : i64}> : (tensor<2xi32, #blocked>, tensor<2xi32, #blocked>) -> tensor<2xi1, #blocked>
    %8 = tt.load %5, %7, %cst {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : tensor<2xf32, #blocked>
    %9 = "tt.reduce"(%8) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32, %arg6: f32):
      %20 = "triton_gpu.cmpf"(%arg5, %arg6) <{predicate = 2 : i64}> : (f32, f32) -> i1
      %21 = arith.select %20, %arg5, %arg6 : f32
      tt.reduce.return %21 : f32
    }) : (tensor<2xf32, #blocked>) -> f32
    %10 = tt.splat %9 : (f32) -> tensor<2xf32, #blocked>
    %11 = arith.subf %8, %10 : tensor<2xf32, #blocked>
    %12 = math.exp %11 : tensor<2xf32, #blocked>
    %13 = "tt.reduce"(%12) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32, %arg6: f32):
      %20 = arith.addf %arg5, %arg6 : f32
      tt.reduce.return %20 : f32
    }) : (tensor<2xf32, #blocked>) -> f32
    %14 = tt.splat %13 : (f32) -> tensor<2xf32, #blocked>
    %15 = arith.divf %12, %14 : tensor<2xf32, #blocked>
    %16 = arith.muli %0, %arg3 : i32
    %17 = tt.addptr %arg0, %16 : !tt.ptr<f32>, i32
    %18 = tt.splat %17 : (!tt.ptr<f32>) -> tensor<2x!tt.ptr<f32>, #blocked>
    %19 = tt.addptr %18, %3 : tensor<2x!tt.ptr<f32>, #blocked>, tensor<2xi32, #blocked>
    tt.store %19, %15, %7 {cache = 1 : i32, evict = 1 : i32} : tensor<2xf32, #blocked>
    tt.return
  }
}


// -----// IR Dump After ConvertTritonGPUToLLVM (convert-triton-gpu-to-llvm) //----- //
module attributes {triton_gpu.externs = {library_0 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/opencl.bc", library_1 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/ocml.bc", library_2 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/ockl.bc", library_3 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_finite_only_off.bc", library_4 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_daz_opt_off.bc", library_5 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_correctly_rounded_sqrt_on.bc", library_6 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_unsafe_math_off.bc", library_7 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_wavefrontsize64_on.bc", library_8 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_abi_version_400.bc", library_9 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_isa_version_90a.bc"}, "triton_gpu.num-warps" = 2 : i32, triton_gpu.shared = 512 : i32, "triton_gpu.threads-per-warp" = 64 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8>
  llvm.func @__ocml_exp2_f32(f32) -> f32
  llvm.func @softmax_kernel_0d1d234(%arg0: !llvm.ptr<f32, 1> {tt.divisibility = 16 : i32}, %arg1: !llvm.ptr<f32, 1> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32) attributes {noinline = false, nvvm.kernel = 1 : ui1, sym_visibility = "public"} {
    %0 = rocdl.workitem.id.x : i32
    %1 = llvm.trunc %0 : i32 to i32
    %2 = llvm.mlir.constant(64 : i32) : i32
    %3 = llvm.urem %1, %2  : i32
    %4 = llvm.udiv %1, %2  : i32
    %5 = llvm.mlir.constant(1 : i32) : i32
    %6 = llvm.urem %4, %5  : i32
    %7 = llvm.mlir.constant(2 : i32) : i32
    %8 = llvm.urem %3, %7  : i32
    %9 = llvm.mlir.constant(64 : i32) : i32
    %10 = llvm.mlir.constant(1 : i32) : i32
    %11 = llvm.mul %6, %9  : i32
    %12 = llvm.add %8, %11  : i32
    %13 = llvm.mul %10, %12  : i32
    %14 = llvm.mlir.constant(0 : i32) : i32
    %15 = llvm.add %13, %14  : i32
    %16 = rocdl.workitem.id.x : i32
    %17 = llvm.trunc %16 : i32 to i32
    %18 = llvm.mlir.constant(64 : i32) : i32
    %19 = llvm.urem %17, %18  : i32
    %20 = llvm.udiv %17, %18  : i32
    %21 = llvm.mlir.constant(1 : i32) : i32
    %22 = llvm.urem %20, %21  : i32
    %23 = llvm.mlir.constant(2 : i32) : i32
    %24 = llvm.urem %19, %23  : i32
    %25 = llvm.mlir.constant(64 : i32) : i32
    %26 = llvm.mlir.constant(1 : i32) : i32
    %27 = llvm.mul %22, %25  : i32
    %28 = llvm.add %24, %27  : i32
    %29 = llvm.mul %26, %28  : i32
    %30 = llvm.mlir.constant(0 : i32) : i32
    %31 = llvm.add %29, %30  : i32
    %32 = llvm.mlir.addressof @global_smem : !llvm.ptr<array<0 x i8>, 3>
    %33 = llvm.bitcast %32 : !llvm.ptr<array<0 x i8>, 3> to !llvm.ptr<i8, 3>
    %34 = builtin.unrealized_conversion_cast %arg1 : !llvm.ptr<f32, 1> to !tt.ptr<f32>
    %35 = builtin.unrealized_conversion_cast %arg0 : !llvm.ptr<f32, 1> to !tt.ptr<f32>
    %36 = llvm.mlir.constant(0xFF800000 : f32) : f32
    %37 = llvm.bitcast %36 : f32 to f32
    %38 = llvm.mlir.undef : !llvm.struct<(f32)>
    %39 = llvm.insertvalue %37, %38[0] : !llvm.struct<(f32)> 
    %40 = rocdl.workgroup.id.x : i32
    %41 = llvm.trunc %40 : i32 to i32
    %42 = llvm.mul %41, %arg2  : i32
    %43 = llvm.getelementptr %arg1[%42] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %44 = llvm.mlir.constant(0 : index) : i32
    %45 = llvm.add %15, %44  : i32
    %46 = llvm.mlir.undef : !llvm.struct<(i32)>
    %47 = llvm.insertvalue %45, %46[0] : !llvm.struct<(i32)> 
    %48 = llvm.bitcast %43 : !llvm.ptr<f32, 1> to !llvm.ptr<f32, 1>
    %49 = llvm.mlir.undef : !llvm.struct<(ptr<f32, 1>)>
    %50 = llvm.insertvalue %48, %49[0] : !llvm.struct<(ptr<f32, 1>)> 
    %51 = llvm.extractvalue %50[0] : !llvm.struct<(ptr<f32, 1>)> 
    %52 = llvm.extractvalue %47[0] : !llvm.struct<(i32)> 
    %53 = llvm.getelementptr %51[%52] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %54 = llvm.mlir.undef : !llvm.struct<(ptr<f32, 1>)>
    %55 = llvm.insertvalue %53, %54[0] : !llvm.struct<(ptr<f32, 1>)> 
    %56 = llvm.bitcast %arg4 : i32 to i32
    %57 = llvm.mlir.undef : !llvm.struct<(i32)>
    %58 = llvm.insertvalue %56, %57[0] : !llvm.struct<(i32)> 
    %59 = llvm.extractvalue %47[0] : !llvm.struct<(i32)> 
    %60 = llvm.extractvalue %58[0] : !llvm.struct<(i32)> 
    %61 = llvm.icmp "slt" %59, %60 : i32
    %62 = llvm.mlir.undef : !llvm.struct<(i1)>
    %63 = llvm.insertvalue %61, %62[0] : !llvm.struct<(i1)> 
    %64 = llvm.extractvalue %55[0] : !llvm.struct<(ptr<f32, 1>)> 
    %65 = llvm.extractvalue %63[0] : !llvm.struct<(i1)> 
    %66 = llvm.extractvalue %39[0] : !llvm.struct<(f32)> 
    %67 = llvm.addrspacecast %64 : !llvm.ptr<f32, 1> to !llvm.ptr<i32>
    %68 = scf.if %65 -> (i32) {
      %180 = llvm.load %67 : !llvm.ptr<i32>
      scf.yield %180 : i32
    } else {
      %180 = llvm.mlir.constant(0 : i32) : i32
      %181 = llvm.bitcast %180 : i32 to i32
      %182 = llvm.mlir.undef : vector<1xf32>
      %183 = llvm.mlir.constant(0 : index) : i32
      %184 = llvm.insertelement %66, %182[%183 : i32] : vector<1xf32>
      %185 = llvm.bitcast %184 : vector<1xf32> to i32
      scf.yield %185 : i32
    }
    %69 = llvm.bitcast %68 : i32 to vector<1xf32>
    %70 = llvm.mlir.constant(0 : index) : i32
    %71 = llvm.extractelement %69[%70 : i32] : vector<1xf32>
    %72 = llvm.mlir.undef : !llvm.struct<(f32)>
    %73 = llvm.insertvalue %71, %72[0] : !llvm.struct<(f32)> 
    %74 = llvm.mlir.constant(0 : i32) : i32
    %75 = llvm.getelementptr %33[%74] : (!llvm.ptr<i8, 3>, i32) -> !llvm.ptr<i8, 3>
    %76 = llvm.bitcast %75 : !llvm.ptr<i8, 3> to !llvm.ptr<f32, 3>
    %77 = llvm.extractvalue %73[0] : !llvm.struct<(f32)> 
    %78 = rocdl.workitem.id.x : i32
    %79 = llvm.trunc %78 : i32 to i32
    %80 = llvm.mlir.constant(64 : i32) : i32
    %81 = llvm.udiv %79, %80  : i32
    %82 = llvm.urem %79, %80  : i32
    %83 = llvm.mlir.constant(0 : i32) : i32
    %84 = llvm.icmp "eq" %82, %83 : i32
    %85 = llvm.inline_asm asm_dialect = att operand_attrs = [] "ds_swizzle_b32 $0, $1, offset:1055\0A\09s_waitcnt lgkmcnt(0) ", "=v,v" %77 : (f32) -> f32
    %86 = llvm.fcmp "ogt" %77, %85 : f32
    %87 = llvm.select %86, %77, %85 : i1, f32
    %88 = llvm.mlir.constant(0 : i32) : i32
    %89 = llvm.getelementptr %76[%83] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    llvm.store %87, %89 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %90 = llvm.getelementptr %76[%79] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    %91 = llvm.load %90 : !llvm.ptr<f32, 3>
    %92 = llvm.getelementptr %76[%79] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    %93 = llvm.mlir.constant(1 : i32) : i32
    %94 = llvm.icmp "slt" %79, %93 : i32
    %95 = llvm.mlir.constant(1 : i32) : i32
    %96 = llvm.urem %82, %95  : i32
    %97 = llvm.icmp "eq" %96, %83 : i32
    %98 = llvm.and %94, %97  : i1
    llvm.store %91, %92 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %99 = llvm.load %76 : !llvm.ptr<f32, 3>
    %100 = llvm.bitcast %99 : f32 to f32
    %101 = llvm.mlir.undef : !llvm.struct<(f32)>
    %102 = llvm.insertvalue %100, %101[0] : !llvm.struct<(f32)> 
    %103 = llvm.extractvalue %73[0] : !llvm.struct<(f32)> 
    %104 = llvm.extractvalue %102[0] : !llvm.struct<(f32)> 
    %105 = llvm.fsub %103, %104  : f32
    %106 = llvm.mlir.undef : !llvm.struct<(f32)>
    %107 = llvm.insertvalue %105, %106[0] : !llvm.struct<(f32)> 
    %108 = llvm.extractvalue %107[0] : !llvm.struct<(f32)> 
    %109 = llvm.mlir.constant(1.44269502 : f32) : f32
    %110 = llvm.fmul %108, %109  : f32
    %111 = llvm.call @__ocml_exp2_f32(%110) : (f32) -> f32
    %112 = llvm.mlir.undef : !llvm.struct<(f32)>
    %113 = llvm.insertvalue %111, %112[0] : !llvm.struct<(f32)> 
    rocdl.barrier
    %114 = llvm.mlir.constant(0 : i32) : i32
    %115 = llvm.getelementptr %33[%114] : (!llvm.ptr<i8, 3>, i32) -> !llvm.ptr<i8, 3>
    %116 = llvm.bitcast %115 : !llvm.ptr<i8, 3> to !llvm.ptr<f32, 3>
    %117 = llvm.extractvalue %113[0] : !llvm.struct<(f32)> 
    %118 = rocdl.workitem.id.x : i32
    %119 = llvm.trunc %118 : i32 to i32
    %120 = llvm.mlir.constant(64 : i32) : i32
    %121 = llvm.udiv %119, %120  : i32
    %122 = llvm.urem %119, %120  : i32
    %123 = llvm.mlir.constant(0 : i32) : i32
    %124 = llvm.icmp "eq" %122, %123 : i32
    %125 = llvm.inline_asm asm_dialect = att operand_attrs = [] "ds_swizzle_b32 $0, $1, offset:1055\0A\09s_waitcnt lgkmcnt(0) ", "=v,v" %117 : (f32) -> f32
    %126 = llvm.fadd %117, %125  : f32
    %127 = llvm.mlir.constant(0 : i32) : i32
    %128 = llvm.getelementptr %116[%123] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    llvm.store %126, %128 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %129 = llvm.getelementptr %116[%119] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    %130 = llvm.load %129 : !llvm.ptr<f32, 3>
    %131 = llvm.getelementptr %116[%119] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    %132 = llvm.mlir.constant(1 : i32) : i32
    %133 = llvm.icmp "slt" %119, %132 : i32
    %134 = llvm.mlir.constant(1 : i32) : i32
    %135 = llvm.urem %122, %134  : i32
    %136 = llvm.icmp "eq" %135, %123 : i32
    %137 = llvm.and %133, %136  : i1
    llvm.store %130, %131 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %138 = llvm.load %116 : !llvm.ptr<f32, 3>
    %139 = llvm.bitcast %138 : f32 to f32
    %140 = llvm.mlir.undef : !llvm.struct<(f32)>
    %141 = llvm.insertvalue %139, %140[0] : !llvm.struct<(f32)> 
    %142 = llvm.extractvalue %113[0] : !llvm.struct<(f32)> 
    %143 = llvm.extractvalue %141[0] : !llvm.struct<(f32)> 
    %144 = llvm.fdiv %142, %143  : f32
    %145 = llvm.mlir.undef : !llvm.struct<(f32)>
    %146 = llvm.insertvalue %144, %145[0] : !llvm.struct<(f32)> 
    %147 = llvm.mul %41, %arg3  : i32
    %148 = llvm.getelementptr %arg0[%147] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %149 = llvm.bitcast %148 : !llvm.ptr<f32, 1> to !llvm.ptr<f32, 1>
    %150 = llvm.mlir.undef : !llvm.struct<(ptr<f32, 1>)>
    %151 = llvm.insertvalue %149, %150[0] : !llvm.struct<(ptr<f32, 1>)> 
    %152 = llvm.extractvalue %151[0] : !llvm.struct<(ptr<f32, 1>)> 
    %153 = llvm.extractvalue %47[0] : !llvm.struct<(i32)> 
    %154 = llvm.getelementptr %152[%153] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %155 = llvm.mlir.undef : !llvm.struct<(ptr<f32, 1>)>
    %156 = llvm.insertvalue %154, %155[0] : !llvm.struct<(ptr<f32, 1>)> 
    %157 = llvm.extractvalue %156[0] : !llvm.struct<(ptr<f32, 1>)> 
    %158 = llvm.extractvalue %146[0] : !llvm.struct<(f32)> 
    %159 = llvm.extractvalue %63[0] : !llvm.struct<(i1)> 
    %160 = llvm.mlir.constant(true) : i1
    %161 = rocdl.workitem.id.x : i32
    %162 = llvm.trunc %161 : i32 to i32
    %163 = llvm.mlir.constant(64 : i32) : i32
    %164 = llvm.urem %162, %163  : i32
    %165 = llvm.udiv %162, %163  : i32
    %166 = llvm.mlir.constant(64 : i32) : i32
    %167 = llvm.mul %165, %166  : i32
    %168 = llvm.add %167, %164  : i32
    %169 = llvm.mlir.constant(2 : i32) : i32
    %170 = llvm.mlir.constant(1 : i32) : i32
    %171 = llvm.mul %168, %170  : i32
    %172 = llvm.icmp "slt" %171, %169 : i32
    %173 = llvm.and %160, %172  : i1
    %174 = llvm.mlir.undef : vector<1xf32>
    %175 = llvm.bitcast %158 : f32 to f32
    %176 = llvm.mlir.constant(0 : i32) : i32
    %177 = llvm.insertelement %175, %174[%176 : i32] : vector<1xf32>
    %178 = llvm.bitcast %177 : vector<1xf32> to i32
    %179 = llvm.and %173, %159  : i1
    scf.if %179 {
      llvm.store %178, %157 : !llvm.ptr<f32, 1>
    }
    llvm.return
  }
}


// -----// IR Dump After Canonicalizer (canonicalize) //----- //
module attributes {triton_gpu.externs = {library_0 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/opencl.bc", library_1 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/ocml.bc", library_2 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/ockl.bc", library_3 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_finite_only_off.bc", library_4 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_daz_opt_off.bc", library_5 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_correctly_rounded_sqrt_on.bc", library_6 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_unsafe_math_off.bc", library_7 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_wavefrontsize64_on.bc", library_8 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_abi_version_400.bc", library_9 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_isa_version_90a.bc"}, "triton_gpu.num-warps" = 2 : i32, triton_gpu.shared = 512 : i32, "triton_gpu.threads-per-warp" = 64 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8>
  llvm.func @__ocml_exp2_f32(f32) -> f32
  llvm.func @softmax_kernel_0d1d234(%arg0: !llvm.ptr<f32, 1> {tt.divisibility = 16 : i32}, %arg1: !llvm.ptr<f32, 1> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32) attributes {noinline = false, nvvm.kernel = 1 : ui1, sym_visibility = "public"} {
    %0 = llvm.mlir.constant(true) : i1
    %1 = llvm.mlir.constant(1.44269502 : f32) : f32
    %2 = llvm.mlir.constant(0 : index) : i32
    %3 = llvm.mlir.constant(0xFF800000 : f32) : f32
    %4 = llvm.mlir.constant(0 : i32) : i32
    %5 = llvm.mlir.constant(2 : i32) : i32
    %6 = llvm.mlir.constant(1 : i32) : i32
    %7 = llvm.mlir.constant(64 : i32) : i32
    %8 = rocdl.workitem.id.x : i32
    %9 = llvm.trunc %8 : i32 to i32
    %10 = llvm.urem %9, %7  : i32
    %11 = llvm.udiv %9, %7  : i32
    %12 = llvm.urem %11, %6  : i32
    %13 = llvm.urem %10, %5  : i32
    %14 = llvm.mul %12, %7  : i32
    %15 = llvm.add %13, %14  : i32
    %16 = llvm.mul %15, %6  : i32
    %17 = llvm.add %16, %4  : i32
    %18 = llvm.mlir.addressof @global_smem : !llvm.ptr<array<0 x i8>, 3>
    %19 = llvm.bitcast %18 : !llvm.ptr<array<0 x i8>, 3> to !llvm.ptr<i8, 3>
    %20 = rocdl.workgroup.id.x : i32
    %21 = llvm.trunc %20 : i32 to i32
    %22 = llvm.mul %21, %arg2  : i32
    %23 = llvm.getelementptr %arg1[%22] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %24 = llvm.add %17, %2  : i32
    %25 = llvm.getelementptr %23[%24] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %26 = llvm.icmp "slt" %24, %arg4 : i32
    %27 = llvm.addrspacecast %25 : !llvm.ptr<f32, 1> to !llvm.ptr<i32>
    %28 = scf.if %26 -> (i32) {
      %70 = llvm.load %27 : !llvm.ptr<i32>
      scf.yield %70 : i32
    } else {
      %70 = llvm.mlir.undef : vector<1xf32>
      %71 = llvm.insertelement %3, %70[%2 : i32] : vector<1xf32>
      %72 = llvm.bitcast %71 : vector<1xf32> to i32
      scf.yield %72 : i32
    }
    %29 = llvm.bitcast %28 : i32 to vector<1xf32>
    %30 = llvm.extractelement %29[%2 : i32] : vector<1xf32>
    %31 = llvm.bitcast %19 : !llvm.ptr<i8, 3> to !llvm.ptr<f32, 3>
    %32 = rocdl.workitem.id.x : i32
    %33 = llvm.trunc %32 : i32 to i32
    %34 = llvm.inline_asm asm_dialect = att operand_attrs = [] "ds_swizzle_b32 $0, $1, offset:1055\0A\09s_waitcnt lgkmcnt(0) ", "=v,v" %30 : (f32) -> f32
    %35 = llvm.fcmp "ogt" %30, %34 : f32
    %36 = llvm.select %35, %30, %34 : i1, f32
    llvm.store %36, %31 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %37 = llvm.getelementptr %31[%33] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    %38 = llvm.load %37 : !llvm.ptr<f32, 3>
    %39 = llvm.getelementptr %31[%33] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    llvm.store %38, %39 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %40 = llvm.load %31 : !llvm.ptr<f32, 3>
    %41 = llvm.fsub %30, %40  : f32
    %42 = llvm.fmul %41, %1  : f32
    %43 = llvm.call @__ocml_exp2_f32(%42) : (f32) -> f32
    rocdl.barrier
    %44 = llvm.bitcast %19 : !llvm.ptr<i8, 3> to !llvm.ptr<f32, 3>
    %45 = rocdl.workitem.id.x : i32
    %46 = llvm.trunc %45 : i32 to i32
    %47 = llvm.inline_asm asm_dialect = att operand_attrs = [] "ds_swizzle_b32 $0, $1, offset:1055\0A\09s_waitcnt lgkmcnt(0) ", "=v,v" %43 : (f32) -> f32
    %48 = llvm.fadd %43, %47  : f32
    llvm.store %48, %44 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %49 = llvm.getelementptr %44[%46] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    %50 = llvm.load %49 : !llvm.ptr<f32, 3>
    %51 = llvm.getelementptr %44[%46] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    llvm.store %50, %51 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %52 = llvm.load %44 : !llvm.ptr<f32, 3>
    %53 = llvm.fdiv %43, %52  : f32
    %54 = llvm.mul %21, %arg3  : i32
    %55 = llvm.getelementptr %arg0[%54] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %56 = llvm.getelementptr %55[%24] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %57 = rocdl.workitem.id.x : i32
    %58 = llvm.trunc %57 : i32 to i32
    %59 = llvm.urem %58, %7  : i32
    %60 = llvm.udiv %58, %7  : i32
    %61 = llvm.mul %60, %7  : i32
    %62 = llvm.add %61, %59  : i32
    %63 = llvm.mul %62, %6  : i32
    %64 = llvm.icmp "slt" %63, %5 : i32
    %65 = llvm.and %0, %64  : i1
    %66 = llvm.mlir.undef : vector<1xf32>
    %67 = llvm.insertelement %53, %66[%4 : i32] : vector<1xf32>
    %68 = llvm.bitcast %67 : vector<1xf32> to i32
    %69 = llvm.and %65, %26  : i1
    scf.if %69 {
      llvm.store %68, %56 : !llvm.ptr<f32, 1>
    }
    llvm.return
  }
}


// -----// IR Dump After CSE (cse) //----- //
module attributes {triton_gpu.externs = {library_0 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/opencl.bc", library_1 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/ocml.bc", library_2 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/ockl.bc", library_3 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_finite_only_off.bc", library_4 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_daz_opt_off.bc", library_5 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_correctly_rounded_sqrt_on.bc", library_6 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_unsafe_math_off.bc", library_7 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_wavefrontsize64_on.bc", library_8 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_abi_version_400.bc", library_9 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_isa_version_90a.bc"}, "triton_gpu.num-warps" = 2 : i32, triton_gpu.shared = 512 : i32, "triton_gpu.threads-per-warp" = 64 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8>
  llvm.func @__ocml_exp2_f32(f32) -> f32
  llvm.func @softmax_kernel_0d1d234(%arg0: !llvm.ptr<f32, 1> {tt.divisibility = 16 : i32}, %arg1: !llvm.ptr<f32, 1> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32) attributes {noinline = false, nvvm.kernel = 1 : ui1, sym_visibility = "public"} {
    %0 = llvm.mlir.constant(true) : i1
    %1 = llvm.mlir.constant(1.44269502 : f32) : f32
    %2 = llvm.mlir.constant(0 : index) : i32
    %3 = llvm.mlir.constant(0xFF800000 : f32) : f32
    %4 = llvm.mlir.constant(0 : i32) : i32
    %5 = llvm.mlir.constant(2 : i32) : i32
    %6 = llvm.mlir.constant(1 : i32) : i32
    %7 = llvm.mlir.constant(64 : i32) : i32
    %8 = rocdl.workitem.id.x : i32
    %9 = llvm.trunc %8 : i32 to i32
    %10 = llvm.urem %9, %7  : i32
    %11 = llvm.udiv %9, %7  : i32
    %12 = llvm.urem %11, %6  : i32
    %13 = llvm.urem %10, %5  : i32
    %14 = llvm.mul %12, %7  : i32
    %15 = llvm.add %13, %14  : i32
    %16 = llvm.mul %15, %6  : i32
    %17 = llvm.add %16, %4  : i32
    %18 = llvm.mlir.addressof @global_smem : !llvm.ptr<array<0 x i8>, 3>
    %19 = llvm.bitcast %18 : !llvm.ptr<array<0 x i8>, 3> to !llvm.ptr<i8, 3>
    %20 = rocdl.workgroup.id.x : i32
    %21 = llvm.trunc %20 : i32 to i32
    %22 = llvm.mul %21, %arg2  : i32
    %23 = llvm.getelementptr %arg1[%22] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %24 = llvm.add %17, %2  : i32
    %25 = llvm.getelementptr %23[%24] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %26 = llvm.icmp "slt" %24, %arg4 : i32
    %27 = llvm.addrspacecast %25 : !llvm.ptr<f32, 1> to !llvm.ptr<i32>
    %28 = scf.if %26 -> (i32) {
      %58 = llvm.load %27 : !llvm.ptr<i32>
      scf.yield %58 : i32
    } else {
      %58 = llvm.mlir.undef : vector<1xf32>
      %59 = llvm.insertelement %3, %58[%2 : i32] : vector<1xf32>
      %60 = llvm.bitcast %59 : vector<1xf32> to i32
      scf.yield %60 : i32
    }
    %29 = llvm.bitcast %28 : i32 to vector<1xf32>
    %30 = llvm.extractelement %29[%2 : i32] : vector<1xf32>
    %31 = llvm.bitcast %19 : !llvm.ptr<i8, 3> to !llvm.ptr<f32, 3>
    %32 = llvm.inline_asm asm_dialect = att operand_attrs = [] "ds_swizzle_b32 $0, $1, offset:1055\0A\09s_waitcnt lgkmcnt(0) ", "=v,v" %30 : (f32) -> f32
    %33 = llvm.fcmp "ogt" %30, %32 : f32
    %34 = llvm.select %33, %30, %32 : i1, f32
    llvm.store %34, %31 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %35 = llvm.getelementptr %31[%9] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    %36 = llvm.load %35 : !llvm.ptr<f32, 3>
    llvm.store %36, %35 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %37 = llvm.load %31 : !llvm.ptr<f32, 3>
    %38 = llvm.fsub %30, %37  : f32
    %39 = llvm.fmul %38, %1  : f32
    %40 = llvm.call @__ocml_exp2_f32(%39) : (f32) -> f32
    rocdl.barrier
    %41 = llvm.inline_asm asm_dialect = att operand_attrs = [] "ds_swizzle_b32 $0, $1, offset:1055\0A\09s_waitcnt lgkmcnt(0) ", "=v,v" %40 : (f32) -> f32
    %42 = llvm.fadd %40, %41  : f32
    llvm.store %42, %31 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %43 = llvm.load %35 : !llvm.ptr<f32, 3>
    llvm.store %43, %35 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %44 = llvm.load %31 : !llvm.ptr<f32, 3>
    %45 = llvm.fdiv %40, %44  : f32
    %46 = llvm.mul %21, %arg3  : i32
    %47 = llvm.getelementptr %arg0[%46] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %48 = llvm.getelementptr %47[%24] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %49 = llvm.mul %11, %7  : i32
    %50 = llvm.add %49, %10  : i32
    %51 = llvm.mul %50, %6  : i32
    %52 = llvm.icmp "slt" %51, %5 : i32
    %53 = llvm.and %0, %52  : i1
    %54 = llvm.mlir.undef : vector<1xf32>
    %55 = llvm.insertelement %45, %54[%4 : i32] : vector<1xf32>
    %56 = llvm.bitcast %55 : vector<1xf32> to i32
    %57 = llvm.and %53, %26  : i1
    scf.if %57 {
      llvm.store %56, %48 : !llvm.ptr<f32, 1>
    }
    llvm.return
  }
}


// -----// IR Dump After SCFToControlFlow (convert-scf-to-cf) //----- //
module attributes {triton_gpu.externs = {library_0 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/opencl.bc", library_1 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/ocml.bc", library_2 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/ockl.bc", library_3 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_finite_only_off.bc", library_4 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_daz_opt_off.bc", library_5 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_correctly_rounded_sqrt_on.bc", library_6 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_unsafe_math_off.bc", library_7 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_wavefrontsize64_on.bc", library_8 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_abi_version_400.bc", library_9 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_isa_version_90a.bc"}, "triton_gpu.num-warps" = 2 : i32, triton_gpu.shared = 512 : i32, "triton_gpu.threads-per-warp" = 64 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8>
  llvm.func @__ocml_exp2_f32(f32) -> f32
  llvm.func @softmax_kernel_0d1d234(%arg0: !llvm.ptr<f32, 1> {tt.divisibility = 16 : i32}, %arg1: !llvm.ptr<f32, 1> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32) attributes {noinline = false, nvvm.kernel = 1 : ui1, sym_visibility = "public"} {
    %0 = llvm.mlir.constant(true) : i1
    %1 = llvm.mlir.constant(1.44269502 : f32) : f32
    %2 = llvm.mlir.constant(0 : index) : i32
    %3 = llvm.mlir.constant(0xFF800000 : f32) : f32
    %4 = llvm.mlir.constant(0 : i32) : i32
    %5 = llvm.mlir.constant(2 : i32) : i32
    %6 = llvm.mlir.constant(1 : i32) : i32
    %7 = llvm.mlir.constant(64 : i32) : i32
    %8 = rocdl.workitem.id.x : i32
    %9 = llvm.trunc %8 : i32 to i32
    %10 = llvm.urem %9, %7  : i32
    %11 = llvm.udiv %9, %7  : i32
    %12 = llvm.urem %11, %6  : i32
    %13 = llvm.urem %10, %5  : i32
    %14 = llvm.mul %12, %7  : i32
    %15 = llvm.add %13, %14  : i32
    %16 = llvm.mul %15, %6  : i32
    %17 = llvm.add %16, %4  : i32
    %18 = llvm.mlir.addressof @global_smem : !llvm.ptr<array<0 x i8>, 3>
    %19 = llvm.bitcast %18 : !llvm.ptr<array<0 x i8>, 3> to !llvm.ptr<i8, 3>
    %20 = rocdl.workgroup.id.x : i32
    %21 = llvm.trunc %20 : i32 to i32
    %22 = llvm.mul %21, %arg2  : i32
    %23 = llvm.getelementptr %arg1[%22] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %24 = llvm.add %17, %2  : i32
    %25 = llvm.getelementptr %23[%24] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %26 = llvm.icmp "slt" %24, %arg4 : i32
    %27 = llvm.addrspacecast %25 : !llvm.ptr<f32, 1> to !llvm.ptr<i32>
    cf.cond_br %26, ^bb1, ^bb2
  ^bb1:  // pred: ^bb0
    %28 = llvm.load %27 : !llvm.ptr<i32>
    cf.br ^bb3(%28 : i32)
  ^bb2:  // pred: ^bb0
    %29 = llvm.mlir.undef : vector<1xf32>
    %30 = llvm.insertelement %3, %29[%2 : i32] : vector<1xf32>
    %31 = llvm.bitcast %30 : vector<1xf32> to i32
    cf.br ^bb3(%31 : i32)
  ^bb3(%32: i32):  // 2 preds: ^bb1, ^bb2
    cf.br ^bb4
  ^bb4:  // pred: ^bb3
    %33 = llvm.bitcast %32 : i32 to vector<1xf32>
    %34 = llvm.extractelement %33[%2 : i32] : vector<1xf32>
    %35 = llvm.bitcast %19 : !llvm.ptr<i8, 3> to !llvm.ptr<f32, 3>
    %36 = llvm.inline_asm asm_dialect = att operand_attrs = [] "ds_swizzle_b32 $0, $1, offset:1055\0A\09s_waitcnt lgkmcnt(0) ", "=v,v" %34 : (f32) -> f32
    %37 = llvm.fcmp "ogt" %34, %36 : f32
    %38 = llvm.select %37, %34, %36 : i1, f32
    llvm.store %38, %35 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %39 = llvm.getelementptr %35[%9] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    %40 = llvm.load %39 : !llvm.ptr<f32, 3>
    llvm.store %40, %39 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %41 = llvm.load %35 : !llvm.ptr<f32, 3>
    %42 = llvm.fsub %34, %41  : f32
    %43 = llvm.fmul %42, %1  : f32
    %44 = llvm.call @__ocml_exp2_f32(%43) : (f32) -> f32
    rocdl.barrier
    %45 = llvm.inline_asm asm_dialect = att operand_attrs = [] "ds_swizzle_b32 $0, $1, offset:1055\0A\09s_waitcnt lgkmcnt(0) ", "=v,v" %44 : (f32) -> f32
    %46 = llvm.fadd %44, %45  : f32
    llvm.store %46, %35 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %47 = llvm.load %39 : !llvm.ptr<f32, 3>
    llvm.store %47, %39 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %48 = llvm.load %35 : !llvm.ptr<f32, 3>
    %49 = llvm.fdiv %44, %48  : f32
    %50 = llvm.mul %21, %arg3  : i32
    %51 = llvm.getelementptr %arg0[%50] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %52 = llvm.getelementptr %51[%24] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %53 = llvm.mul %11, %7  : i32
    %54 = llvm.add %53, %10  : i32
    %55 = llvm.mul %54, %6  : i32
    %56 = llvm.icmp "slt" %55, %5 : i32
    %57 = llvm.and %0, %56  : i1
    %58 = llvm.mlir.undef : vector<1xf32>
    %59 = llvm.insertelement %49, %58[%4 : i32] : vector<1xf32>
    %60 = llvm.bitcast %59 : vector<1xf32> to i32
    %61 = llvm.and %57, %26  : i1
    cf.cond_br %61, ^bb5, ^bb6
  ^bb5:  // pred: ^bb4
    llvm.store %60, %52 : !llvm.ptr<f32, 1>
    cf.br ^bb6
  ^bb6:  // 2 preds: ^bb4, ^bb5
    llvm.return
  }
}


// -----// IR Dump After ConvertControlFlowToLLVMPass (convert-cf-to-llvm) //----- //
module attributes {triton_gpu.externs = {library_0 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/opencl.bc", library_1 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/ocml.bc", library_2 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/ockl.bc", library_3 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_finite_only_off.bc", library_4 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_daz_opt_off.bc", library_5 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_correctly_rounded_sqrt_on.bc", library_6 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_unsafe_math_off.bc", library_7 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_wavefrontsize64_on.bc", library_8 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_abi_version_400.bc", library_9 = "/root/triton/triton/python/triton/third_party/rocm/lib/bitcode/oclc_isa_version_90a.bc"}, "triton_gpu.num-warps" = 2 : i32, triton_gpu.shared = 512 : i32, "triton_gpu.threads-per-warp" = 64 : i32} {
  llvm.mlir.global external @global_smem() {addr_space = 3 : i32} : !llvm.array<0 x i8>
  llvm.func @__ocml_exp2_f32(f32) -> f32
  llvm.func @softmax_kernel_0d1d234(%arg0: !llvm.ptr<f32, 1> {tt.divisibility = 16 : i32}, %arg1: !llvm.ptr<f32, 1> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32) attributes {noinline = false, nvvm.kernel = 1 : ui1, sym_visibility = "public"} {
    %0 = llvm.mlir.constant(true) : i1
    %1 = llvm.mlir.constant(1.44269502 : f32) : f32
    %2 = llvm.mlir.constant(0 : index) : i32
    %3 = llvm.mlir.constant(0xFF800000 : f32) : f32
    %4 = llvm.mlir.constant(0 : i32) : i32
    %5 = llvm.mlir.constant(2 : i32) : i32
    %6 = llvm.mlir.constant(1 : i32) : i32
    %7 = llvm.mlir.constant(64 : i32) : i32
    %8 = rocdl.workitem.id.x : i32
    %9 = llvm.trunc %8 : i32 to i32
    %10 = llvm.urem %9, %7  : i32
    %11 = llvm.udiv %9, %7  : i32
    %12 = llvm.urem %11, %6  : i32
    %13 = llvm.urem %10, %5  : i32
    %14 = llvm.mul %12, %7  : i32
    %15 = llvm.add %13, %14  : i32
    %16 = llvm.mul %15, %6  : i32
    %17 = llvm.add %16, %4  : i32
    %18 = llvm.mlir.addressof @global_smem : !llvm.ptr<array<0 x i8>, 3>
    %19 = llvm.bitcast %18 : !llvm.ptr<array<0 x i8>, 3> to !llvm.ptr<i8, 3>
    %20 = rocdl.workgroup.id.x : i32
    %21 = llvm.trunc %20 : i32 to i32
    %22 = llvm.mul %21, %arg2  : i32
    %23 = llvm.getelementptr %arg1[%22] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %24 = llvm.add %17, %2  : i32
    %25 = llvm.getelementptr %23[%24] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %26 = llvm.icmp "slt" %24, %arg4 : i32
    %27 = llvm.addrspacecast %25 : !llvm.ptr<f32, 1> to !llvm.ptr<i32>
    llvm.cond_br %26, ^bb1, ^bb2
  ^bb1:  // pred: ^bb0
    %28 = llvm.load %27 : !llvm.ptr<i32>
    llvm.br ^bb3(%28 : i32)
  ^bb2:  // pred: ^bb0
    %29 = llvm.mlir.undef : vector<1xf32>
    %30 = llvm.insertelement %3, %29[%2 : i32] : vector<1xf32>
    %31 = llvm.bitcast %30 : vector<1xf32> to i32
    llvm.br ^bb3(%31 : i32)
  ^bb3(%32: i32):  // 2 preds: ^bb1, ^bb2
    llvm.br ^bb4
  ^bb4:  // pred: ^bb3
    %33 = llvm.bitcast %32 : i32 to vector<1xf32>
    %34 = llvm.extractelement %33[%2 : i32] : vector<1xf32>
    %35 = llvm.bitcast %19 : !llvm.ptr<i8, 3> to !llvm.ptr<f32, 3>
    %36 = llvm.inline_asm asm_dialect = att operand_attrs = [] "ds_swizzle_b32 $0, $1, offset:1055\0A\09s_waitcnt lgkmcnt(0) ", "=v,v" %34 : (f32) -> f32
    %37 = llvm.fcmp "ogt" %34, %36 : f32
    %38 = llvm.select %37, %34, %36 : i1, f32
    llvm.store %38, %35 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %39 = llvm.getelementptr %35[%9] : (!llvm.ptr<f32, 3>, i32) -> !llvm.ptr<f32, 3>
    %40 = llvm.load %39 : !llvm.ptr<f32, 3>
    llvm.store %40, %39 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %41 = llvm.load %35 : !llvm.ptr<f32, 3>
    %42 = llvm.fsub %34, %41  : f32
    %43 = llvm.fmul %42, %1  : f32
    %44 = llvm.call @__ocml_exp2_f32(%43) : (f32) -> f32
    rocdl.barrier
    %45 = llvm.inline_asm asm_dialect = att operand_attrs = [] "ds_swizzle_b32 $0, $1, offset:1055\0A\09s_waitcnt lgkmcnt(0) ", "=v,v" %44 : (f32) -> f32
    %46 = llvm.fadd %44, %45  : f32
    llvm.store %46, %35 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %47 = llvm.load %39 : !llvm.ptr<f32, 3>
    llvm.store %47, %39 : !llvm.ptr<f32, 3>
    rocdl.barrier
    %48 = llvm.load %35 : !llvm.ptr<f32, 3>
    %49 = llvm.fdiv %44, %48  : f32
    %50 = llvm.mul %21, %arg3  : i32
    %51 = llvm.getelementptr %arg0[%50] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %52 = llvm.getelementptr %51[%24] : (!llvm.ptr<f32, 1>, i32) -> !llvm.ptr<f32, 1>
    %53 = llvm.mul %11, %7  : i32
    %54 = llvm.add %53, %10  : i32
    %55 = llvm.mul %54, %6  : i32
    %56 = llvm.icmp "slt" %55, %5 : i32
    %57 = llvm.and %0, %56  : i1
    %58 = llvm.mlir.undef : vector<1xf32>
    %59 = llvm.insertelement %49, %58[%4 : i32] : vector<1xf32>
    %60 = llvm.bitcast %59 : vector<1xf32> to i32
    %61 = llvm.and %57, %26  : i1
    llvm.cond_br %61, ^bb5, ^bb6
  ^bb5:  // pred: ^bb4
    llvm.store %60, %52 : !llvm.ptr<f32, 1>
    llvm.br ^bb6
  ^bb6:  // 2 preds: ^bb4, ^bb5
    llvm.return
  }
}


// -----// LLVM IR Dump //----- //
; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8]

define amdgpu_kernel void @softmax_kernel_0d1d234(ptr addrspace(1) nocapture writeonly %0, ptr addrspace(1) nocapture readonly %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = tail call i32 @llvm.amdgcn.workitem.id.x()
  %7 = and i32 %6, 1
  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %9 = icmp slt i32 %7, %4
  br i1 %9, label %10, label %18

10:                                               ; preds = %5
  %11 = mul i32 %8, %2
  %12 = sext i32 %11 to i64
  %13 = getelementptr float, ptr addrspace(1) %1, i64 %12
  %14 = zext i32 %7 to i64
  %15 = getelementptr float, ptr addrspace(1) %13, i64 %14
  %16 = addrspacecast ptr addrspace(1) %15 to ptr
  %17 = load <1 x float>, ptr %16, align 4
  br label %18

18:                                               ; preds = %10, %5
  %19 = phi <1 x float> [ %17, %10 ], [ <float 0xFFF0000000000000>, %5 ]
  %20 = extractelement <1 x float> %19, i64 0
  %21 = tail call float asm "ds_swizzle_b32 $0, $1, offset:1055\0A\09s_waitcnt lgkmcnt(0) ", "=v,v"(float %20) #3
  %22 = fcmp ogt float %20, %21
  %23 = select i1 %22, float %20, float %21
  store float %23, ptr addrspace(3) @global_smem, align 4
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %24 = load float, ptr addrspace(3) @global_smem, align 4
  %25 = fsub float %20, %24
  %26 = fmul float %25, 0x3FF7154760000000
  %27 = fcmp olt float %26, -1.260000e+02
  %28 = select i1 %27, float 0x3BF0000000000000, float 1.000000e+00
  %29 = select i1 %27, float 6.400000e+01, float 0.000000e+00
  %30 = fadd float %26, %29
  %31 = tail call float @llvm.exp2.f32(float %30)
  %32 = fmul float %28, %31
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %33 = tail call float asm "ds_swizzle_b32 $0, $1, offset:1055\0A\09s_waitcnt lgkmcnt(0) ", "=v,v"(float %32) #3
  %34 = fadd float %33, %32
  store float %34, ptr addrspace(3) @global_smem, align 4
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %35 = icmp slt i32 %6, 2
  %36 = and i1 %35, %9
  br i1 %36, label %37, label %45

37:                                               ; preds = %18
  %38 = load float, ptr addrspace(3) @global_smem, align 4
  %39 = fdiv float %32, %38
  %40 = mul i32 %8, %3
  %41 = sext i32 %40 to i64
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41
  %43 = zext i32 %7 to i64
  %44 = getelementptr float, ptr addrspace(1) %42, i64 %43
  store float %39, ptr addrspace(1) %44, align 4
  br label %45

45:                                               ; preds = %37, %18
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.exp2.f32(float) #1

attributes #0 = { "amdgpu-flat-work-group-size"="1, 1024" "amdgpu-unsafe-fp-atomics"="true" "denormal-fp-math-f32"="preserve-sign" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #3 = { nounwind }

!nvvm.annotations = !{!0}
!llvm.ident = !{}
!opencl.ocl.version = !{}
!llvm.module.flags = !{!4, !5}

!0 = !{ptr @softmax_kernel_0d1d234, !"kernel", i32 1}
!1 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!2 = !{!"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"}
!3 = !{i32 2, i32 0}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 8, !"PIC Level", i32 1}

// -----// AMDGCN Dump //----- //
	.text
	.amdgcn_target "amdgcn-amd-amdhsa--gfx90a:sramecc+:xnack-"
	.globl	softmax_kernel_0d1d234
	.p2align	8
	.type	softmax_kernel_0d1d234,@function
softmax_kernel_0d1d234:
	s_load_dwordx8 s[8:15], s[4:5], 0x0
	v_and_b32_e32 v1, 1, v0
	v_mov_b32_e32 v2, 0xff800000
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_i32_e32 vcc, s14, v1
	v_lshlrev_b32_e32 v1, 2, v1
	s_and_saveexec_b64 s[0:1], vcc
	s_cbranch_execz .LBB0_2
	s_mul_i32 s2, s6, s12
	s_ashr_i32 s3, s2, 31
	s_lshl_b64 s[2:3], s[2:3], 2
	s_add_u32 s2, s10, s2
	s_addc_u32 s3, s11, s3
	global_load_dword v2, v1, s[2:3]
.LBB0_2:
	s_or_b64 exec, exec, s[0:1]
	s_waitcnt vmcnt(0)
	;;#ASMSTART
	ds_swizzle_b32 v3, v2, offset:1055
	s_waitcnt lgkmcnt(0) 
	;;#ASMEND
	v_cmp_gt_f32_e64 s[0:1], v2, v3
	v_cndmask_b32_e64 v4, v3, v2, s[0:1]
	v_mov_b32_e32 v3, 0
	ds_write_b32 v3, v4
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	ds_read_b32 v4, v3
	s_mov_b32 s0, 0xc2fc0000
	v_mov_b32_e32 v5, 0x1f800000
	s_waitcnt lgkmcnt(0)
	s_barrier
	v_sub_f32_e32 v2, v2, v4
	v_mul_f32_e32 v4, 0x3fb8aa3b, v2
	v_cmp_gt_f32_e64 s[0:1], s0, v4
	v_cndmask_b32_e64 v4, 1.0, v5, s[0:1]
	v_mov_b32_e32 v5, 0x42800000
	v_cndmask_b32_e64 v5, 0, v5, s[0:1]
	v_fmac_f32_e32 v5, 0x3fb8aa3b, v2
	v_exp_f32_e32 v5, v5
	v_cmp_gt_i32_e64 s[0:1], 2, v0
	s_and_b64 s[0:1], s[0:1], vcc
	s_waitcnt lgkmcnt(0)
	v_mul_f32_e32 v2, v4, v5
	;;#ASMSTART
	ds_swizzle_b32 v6, v2, offset:1055
	s_waitcnt lgkmcnt(0) 
	;;#ASMEND
	v_fmac_f32_e32 v6, v4, v5
	ds_write_b32 v3, v6
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt lgkmcnt(0)
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_cbranch_execz .LBB0_4
	ds_read_b32 v0, v3
	s_mul_i32 s0, s6, s13
	s_ashr_i32 s1, s0, 31
	s_lshl_b64 s[0:1], s[0:1], 2
	s_add_u32 s0, s8, s0
	s_waitcnt lgkmcnt(0)
	v_div_scale_f32 v3, s[2:3], v0, v0, v2
	v_rcp_f32_e32 v4, v3
	v_div_scale_f32 v5, vcc, v2, v0, v2
	s_setreg_imm32_b32 hwreg(HW_REG_MODE, 4, 2), 3
	v_fma_f32 v6, -v3, v4, 1.0
	v_fmac_f32_e32 v4, v6, v4
	v_mul_f32_e32 v6, v5, v4
	v_fma_f32 v7, -v3, v6, v5
	v_fmac_f32_e32 v6, v7, v4
	v_fma_f32 v3, -v3, v6, v5
	s_setreg_imm32_b32 hwreg(HW_REG_MODE, 4, 2), 0
	v_div_fmas_f32 v3, v3, v4, v6
	v_div_fixup_f32 v0, v3, v0, v2
	s_addc_u32 s1, s9, s1
	global_store_dword v1, v0, s[0:1]
.LBB0_4:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6, 0x0
	.amdhsa_kernel softmax_kernel_0d1d234
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 28
		.amdhsa_user_sgpr_count 6
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 8
		.amdhsa_next_free_sgpr 16
		.amdhsa_accum_offset 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_reserve_xnack_mask 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 0
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_tg_split 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end0:
	.size	softmax_kernel_0d1d234, .Lfunc_end0-softmax_kernel_0d1d234

	.p2alignl 6, 3212836864
	.fill 256, 4, 3212836864
	.ident	"clang version 3.8.0 (tags/RELEASE_380/final)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.ident	"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"
	.section	".note.GNU-stack"
	.amdgpu_metadata
---
amdhsa.kernels:
  - .agpr_count:     0
    .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .offset:         16
        .size:           4
        .value_kind:     by_value
      - .offset:         20
        .size:           4
        .value_kind:     by_value
      - .offset:         24
        .size:           4
        .value_kind:     by_value
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 28
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           softmax_kernel_0d1d234
    .private_segment_fixed_size: 0
    .sgpr_count:     18
    .sgpr_spill_count: 0
    .symbol:         softmax_kernel_0d1d234.kd
    .vgpr_count:     8
    .vgpr_spill_count: 0
    .wavefront_size: 64
amdhsa.target:   'amdgcn-amd-amdhsa--gfx90a:sramecc+:xnack-'
amdhsa.version:
  - 1
  - 1
...

	.end_amdgpu_metadata

tensor([[1., 1.],
        [1., 1.]], device='cuda:0')
tensor([[0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0')
tensor([[0.5000, 0.5000],
        [0.5000, 0.5000]], device='cuda:0')
