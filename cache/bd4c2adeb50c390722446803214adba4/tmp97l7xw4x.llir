; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8]

; Function Attrs: nofree nounwind
define amdgpu_kernel void @_attn_fwd_0d1d2d34d5d6de7de8de9c10de11de12de13c14de15de16de17c18de19de20de21c2223de24de(ptr addrspace(1) inreg readonly %0, ptr addrspace(1) inreg readonly %1, ptr addrspace(1) inreg readonly %2, float inreg %3, ptr addrspace(1) inreg nocapture readnone %4, ptr addrspace(1) inreg nocapture writeonly %5, i32 inreg %6, i32 inreg %7, i32 inreg %8, i32 inreg %9, i32 inreg %10, i32 inreg %11, i32 inreg %12, i32 inreg %13, i32 inreg %14, i32 inreg %15, i32 inreg %16, i32 inreg %17, i32 inreg %18, i32 inreg %19, i32 inreg %20) local_unnamed_addr #0 !dbg !11 {
  %22 = tail call i32 @llvm.amdgcn.workitem.id.x()
  %23 = and i32 %22, 63
  %24 = lshr i32 %22, 6
  %25 = and i32 %24, 3
  %26 = and i32 %22, 31
  %27 = shl nuw nsw i32 %25, 5
  %28 = or i32 %27, %26
  %29 = lshr i32 %23, 5
  %30 = shl nuw nsw i32 %29, 3
  %31 = or i32 %30, 1
  %32 = or i32 %30, 2
  %33 = or i32 %30, 3
  %34 = or i32 %30, 4
  %35 = or i32 %30, 5
  %36 = or i32 %30, 6
  %37 = or i32 %30, 7
  %38 = or i32 %30, 16
  %39 = or i32 %30, 17
  %40 = or i32 %30, 18
  %41 = or i32 %30, 19
  %42 = or i32 %30, 20
  %43 = or i32 %30, 21
  %44 = or i32 %30, 22
  %45 = or i32 %30, 23
  %46 = or i32 %30, 32
  %47 = or i32 %30, 33
  %48 = or i32 %30, 34
  %49 = or i32 %30, 35
  %50 = or i32 %30, 36
  %51 = or i32 %30, 37
  %52 = or i32 %30, 38
  %53 = or i32 %30, 39
  %54 = or i32 %30, 48
  %55 = or i32 %30, 49
  %56 = or i32 %30, 50
  %57 = or i32 %30, 51
  %58 = or i32 %30, 52
  %59 = or i32 %30, 53
  %60 = or i32 %30, 54
  %61 = or i32 %30, 55
  %62 = or i32 %30, 64
  %63 = or i32 %30, 65
  %64 = or i32 %30, 66
  %65 = or i32 %30, 67
  %66 = or i32 %30, 68
  %67 = or i32 %30, 69
  %68 = or i32 %30, 70
  %69 = or i32 %30, 71
  %70 = or i32 %30, 80
  %71 = or i32 %30, 81
  %72 = or i32 %30, 82
  %73 = or i32 %30, 83
  %74 = or i32 %30, 84
  %75 = or i32 %30, 85
  %76 = or i32 %30, 86
  %77 = or i32 %30, 87
  %78 = or i32 %30, 96
  %79 = or i32 %30, 97
  %80 = or i32 %30, 98
  %81 = or i32 %30, 99
  %82 = or i32 %30, 100
  %83 = or i32 %30, 101
  %84 = or i32 %30, 102
  %85 = or i32 %30, 103
  %86 = or i32 %30, 112
  %87 = or i32 %30, 113
  %88 = or i32 %30, 114
  %89 = or i32 %30, 115
  %90 = or i32 %30, 116
  %91 = or i32 %30, 117
  %92 = or i32 %30, 118
  %93 = or i32 %30, 119
  %94 = lshr i32 %23, 2
  %95 = shl nuw nsw i32 %25, 4
  %96 = or i32 %95, %94
  %97 = or i32 %96, 64
  %98 = shl i32 %22, 3
  %99 = and i32 %98, 24
  %100 = or i32 %99, 1
  %101 = or i32 %99, 2
  %102 = or i32 %99, 3
  %103 = or i32 %99, 4
  %104 = or i32 %99, 5
  %105 = or i32 %99, 6
  %106 = or i32 %99, 7
  %107 = or i32 %99, 32
  %108 = or i32 %99, 33
  %109 = or i32 %99, 34
  %110 = or i32 %99, 35
  %111 = or i32 %99, 36
  %112 = or i32 %99, 37
  %113 = or i32 %99, 38
  %114 = or i32 %99, 39
  %115 = or i32 %99, 64
  %116 = or i32 %99, 65
  %117 = or i32 %99, 66
  %118 = or i32 %99, 67
  %119 = or i32 %99, 68
  %120 = or i32 %99, 69
  %121 = or i32 %99, 70
  %122 = or i32 %99, 71
  %123 = or i32 %99, 96
  %124 = or i32 %99, 97
  %125 = or i32 %99, 98
  %126 = or i32 %99, 99
  %127 = or i32 %99, 100
  %128 = or i32 %99, 101
  %129 = or i32 %99, 102
  %130 = or i32 %99, 103
  %131 = fmul float %3, 0x3FF7154760000000
  %132 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %133 = shl i32 %132, 7
  %134 = sext i32 %133 to i64
  %135 = tail call i32 @llvm.amdgcn.workgroup.id.y()
  %136 = mul i32 %135, %7
  %137 = sext i32 %136 to i64
  %138 = getelementptr half, ptr addrspace(1) %0, i64 %137
  %139 = sext i32 %8 to i64
  %140 = getelementptr half, ptr addrspace(1) %1, i64 %137
  %141 = sext i32 %11 to i64
  %142 = getelementptr half, ptr addrspace(1) %2, i64 %137
  %143 = sext i32 %14 to i64
  %144 = zext i32 %28 to i64
  %145 = or i64 %144, %134
  %146 = mul nsw i64 %145, %139
  %147 = getelementptr half, ptr addrspace(1) %138, i64 %146
  %148 = zext i32 %30 to i64
  %149 = zext i32 %31 to i64
  %150 = zext i32 %32 to i64
  %151 = zext i32 %33 to i64
  %152 = zext i32 %34 to i64
  %153 = zext i32 %35 to i64
  %154 = zext i32 %36 to i64
  %155 = zext i32 %37 to i64
  %156 = zext i32 %38 to i64
  %157 = zext i32 %39 to i64
  %158 = zext i32 %40 to i64
  %159 = zext i32 %41 to i64
  %160 = zext i32 %42 to i64
  %161 = zext i32 %43 to i64
  %162 = zext i32 %44 to i64
  %163 = zext i32 %45 to i64
  %164 = zext i32 %46 to i64
  %165 = zext i32 %47 to i64
  %166 = zext i32 %48 to i64
  %167 = zext i32 %49 to i64
  %168 = zext i32 %50 to i64
  %169 = zext i32 %51 to i64
  %170 = zext i32 %52 to i64
  %171 = zext i32 %53 to i64
  %172 = zext i32 %54 to i64
  %173 = zext i32 %55 to i64
  %174 = zext i32 %56 to i64
  %175 = zext i32 %57 to i64
  %176 = zext i32 %58 to i64
  %177 = zext i32 %59 to i64
  %178 = zext i32 %60 to i64
  %179 = zext i32 %61 to i64
  %180 = zext i32 %62 to i64
  %181 = zext i32 %63 to i64
  %182 = zext i32 %64 to i64
  %183 = zext i32 %65 to i64
  %184 = zext i32 %66 to i64
  %185 = zext i32 %67 to i64
  %186 = zext i32 %68 to i64
  %187 = zext i32 %69 to i64
  %188 = zext i32 %70 to i64
  %189 = zext i32 %71 to i64
  %190 = zext i32 %72 to i64
  %191 = zext i32 %73 to i64
  %192 = zext i32 %74 to i64
  %193 = zext i32 %75 to i64
  %194 = zext i32 %76 to i64
  %195 = zext i32 %77 to i64
  %196 = zext i32 %78 to i64
  %197 = zext i32 %79 to i64
  %198 = zext i32 %80 to i64
  %199 = zext i32 %81 to i64
  %200 = zext i32 %82 to i64
  %201 = zext i32 %83 to i64
  %202 = zext i32 %84 to i64
  %203 = zext i32 %85 to i64
  %204 = zext i32 %86 to i64
  %205 = zext i32 %87 to i64
  %206 = zext i32 %88 to i64
  %207 = zext i32 %89 to i64
  %208 = zext i32 %90 to i64
  %209 = zext i32 %91 to i64
  %210 = zext i32 %92 to i64
  %211 = zext i32 %93 to i64
  %212 = getelementptr half, ptr addrspace(1) %147, i64 %148
  %213 = getelementptr half, ptr addrspace(1) %147, i64 %149
  %214 = getelementptr half, ptr addrspace(1) %147, i64 %150
  %215 = getelementptr half, ptr addrspace(1) %147, i64 %151
  %216 = getelementptr half, ptr addrspace(1) %147, i64 %152
  %217 = getelementptr half, ptr addrspace(1) %147, i64 %153
  %218 = getelementptr half, ptr addrspace(1) %147, i64 %154
  %219 = getelementptr half, ptr addrspace(1) %147, i64 %155
  %220 = getelementptr half, ptr addrspace(1) %147, i64 %156
  %221 = getelementptr half, ptr addrspace(1) %147, i64 %157
  %222 = getelementptr half, ptr addrspace(1) %147, i64 %158
  %223 = getelementptr half, ptr addrspace(1) %147, i64 %159
  %224 = getelementptr half, ptr addrspace(1) %147, i64 %160
  %225 = getelementptr half, ptr addrspace(1) %147, i64 %161
  %226 = getelementptr half, ptr addrspace(1) %147, i64 %162
  %227 = getelementptr half, ptr addrspace(1) %147, i64 %163
  %228 = getelementptr half, ptr addrspace(1) %147, i64 %164
  %229 = getelementptr half, ptr addrspace(1) %147, i64 %165
  %230 = getelementptr half, ptr addrspace(1) %147, i64 %166
  %231 = getelementptr half, ptr addrspace(1) %147, i64 %167
  %232 = getelementptr half, ptr addrspace(1) %147, i64 %168
  %233 = getelementptr half, ptr addrspace(1) %147, i64 %169
  %234 = getelementptr half, ptr addrspace(1) %147, i64 %170
  %235 = getelementptr half, ptr addrspace(1) %147, i64 %171
  %236 = getelementptr half, ptr addrspace(1) %147, i64 %172
  %237 = getelementptr half, ptr addrspace(1) %147, i64 %173
  %238 = getelementptr half, ptr addrspace(1) %147, i64 %174
  %239 = getelementptr half, ptr addrspace(1) %147, i64 %175
  %240 = getelementptr half, ptr addrspace(1) %147, i64 %176
  %241 = getelementptr half, ptr addrspace(1) %147, i64 %177
  %242 = getelementptr half, ptr addrspace(1) %147, i64 %178
  %243 = getelementptr half, ptr addrspace(1) %147, i64 %179
  %244 = getelementptr half, ptr addrspace(1) %147, i64 %180
  %245 = getelementptr half, ptr addrspace(1) %147, i64 %181
  %246 = getelementptr half, ptr addrspace(1) %147, i64 %182
  %247 = getelementptr half, ptr addrspace(1) %147, i64 %183
  %248 = getelementptr half, ptr addrspace(1) %147, i64 %184
  %249 = getelementptr half, ptr addrspace(1) %147, i64 %185
  %250 = getelementptr half, ptr addrspace(1) %147, i64 %186
  %251 = getelementptr half, ptr addrspace(1) %147, i64 %187
  %252 = getelementptr half, ptr addrspace(1) %147, i64 %188
  %253 = getelementptr half, ptr addrspace(1) %147, i64 %189
  %254 = getelementptr half, ptr addrspace(1) %147, i64 %190
  %255 = getelementptr half, ptr addrspace(1) %147, i64 %191
  %256 = getelementptr half, ptr addrspace(1) %147, i64 %192
  %257 = getelementptr half, ptr addrspace(1) %147, i64 %193
  %258 = getelementptr half, ptr addrspace(1) %147, i64 %194
  %259 = getelementptr half, ptr addrspace(1) %147, i64 %195
  %260 = getelementptr half, ptr addrspace(1) %147, i64 %196
  %261 = getelementptr half, ptr addrspace(1) %147, i64 %197
  %262 = getelementptr half, ptr addrspace(1) %147, i64 %198
  %263 = getelementptr half, ptr addrspace(1) %147, i64 %199
  %264 = getelementptr half, ptr addrspace(1) %147, i64 %200
  %265 = getelementptr half, ptr addrspace(1) %147, i64 %201
  %266 = getelementptr half, ptr addrspace(1) %147, i64 %202
  %267 = getelementptr half, ptr addrspace(1) %147, i64 %203
  %268 = getelementptr half, ptr addrspace(1) %147, i64 %204
  %269 = getelementptr half, ptr addrspace(1) %147, i64 %205
  %270 = getelementptr half, ptr addrspace(1) %147, i64 %206
  %271 = getelementptr half, ptr addrspace(1) %147, i64 %207
  %272 = getelementptr half, ptr addrspace(1) %147, i64 %208
  %273 = getelementptr half, ptr addrspace(1) %147, i64 %209
  %274 = getelementptr half, ptr addrspace(1) %147, i64 %210
  %275 = getelementptr half, ptr addrspace(1) %147, i64 %211
  %276 = zext i32 %96 to i64
  %277 = zext i32 %97 to i64
  %278 = zext i32 %99 to i64
  %279 = zext i32 %100 to i64
  %280 = zext i32 %101 to i64
  %281 = zext i32 %102 to i64
  %282 = zext i32 %103 to i64
  %283 = zext i32 %104 to i64
  %284 = zext i32 %105 to i64
  %285 = zext i32 %106 to i64
  %286 = zext i32 %107 to i64
  %287 = zext i32 %108 to i64
  %288 = zext i32 %109 to i64
  %289 = zext i32 %110 to i64
  %290 = zext i32 %111 to i64
  %291 = zext i32 %112 to i64
  %292 = zext i32 %113 to i64
  %293 = zext i32 %114 to i64
  %294 = zext i32 %115 to i64
  %295 = zext i32 %116 to i64
  %296 = zext i32 %117 to i64
  %297 = zext i32 %118 to i64
  %298 = zext i32 %119 to i64
  %299 = zext i32 %120 to i64
  %300 = zext i32 %121 to i64
  %301 = zext i32 %122 to i64
  %302 = zext i32 %123 to i64
  %303 = zext i32 %124 to i64
  %304 = zext i32 %125 to i64
  %305 = zext i32 %126 to i64
  %306 = zext i32 %127 to i64
  %307 = zext i32 %128 to i64
  %308 = zext i32 %129 to i64
  %309 = zext i32 %130 to i64
  %310 = getelementptr half, ptr addrspace(1) %140, i64 %278
  %311 = getelementptr half, ptr addrspace(1) %140, i64 %279
  %312 = getelementptr half, ptr addrspace(1) %140, i64 %280
  %313 = getelementptr half, ptr addrspace(1) %140, i64 %281
  %314 = getelementptr half, ptr addrspace(1) %140, i64 %282
  %315 = getelementptr half, ptr addrspace(1) %140, i64 %283
  %316 = getelementptr half, ptr addrspace(1) %140, i64 %284
  %317 = getelementptr half, ptr addrspace(1) %140, i64 %285
  %318 = getelementptr half, ptr addrspace(1) %140, i64 %286
  %319 = getelementptr half, ptr addrspace(1) %140, i64 %287
  %320 = getelementptr half, ptr addrspace(1) %140, i64 %288
  %321 = getelementptr half, ptr addrspace(1) %140, i64 %289
  %322 = getelementptr half, ptr addrspace(1) %140, i64 %290
  %323 = getelementptr half, ptr addrspace(1) %140, i64 %291
  %324 = getelementptr half, ptr addrspace(1) %140, i64 %292
  %325 = getelementptr half, ptr addrspace(1) %140, i64 %293
  %326 = getelementptr half, ptr addrspace(1) %140, i64 %294
  %327 = getelementptr half, ptr addrspace(1) %140, i64 %295
  %328 = getelementptr half, ptr addrspace(1) %140, i64 %296
  %329 = getelementptr half, ptr addrspace(1) %140, i64 %297
  %330 = getelementptr half, ptr addrspace(1) %140, i64 %298
  %331 = getelementptr half, ptr addrspace(1) %140, i64 %299
  %332 = getelementptr half, ptr addrspace(1) %140, i64 %300
  %333 = getelementptr half, ptr addrspace(1) %140, i64 %301
  %334 = getelementptr half, ptr addrspace(1) %140, i64 %302
  %335 = getelementptr half, ptr addrspace(1) %140, i64 %303
  %336 = getelementptr half, ptr addrspace(1) %140, i64 %304
  %337 = getelementptr half, ptr addrspace(1) %140, i64 %305
  %338 = getelementptr half, ptr addrspace(1) %140, i64 %306
  %339 = getelementptr half, ptr addrspace(1) %140, i64 %307
  %340 = getelementptr half, ptr addrspace(1) %140, i64 %308
  %341 = getelementptr half, ptr addrspace(1) %140, i64 %309
  %342 = mul nsw i64 %141, %276
  %343 = mul nsw i64 %141, %277
  %344 = getelementptr half, ptr addrspace(1) %310, i64 %342
  %345 = getelementptr half, ptr addrspace(1) %311, i64 %342
  %346 = getelementptr half, ptr addrspace(1) %312, i64 %342
  %347 = getelementptr half, ptr addrspace(1) %313, i64 %342
  %348 = getelementptr half, ptr addrspace(1) %314, i64 %342
  %349 = getelementptr half, ptr addrspace(1) %315, i64 %342
  %350 = getelementptr half, ptr addrspace(1) %316, i64 %342
  %351 = getelementptr half, ptr addrspace(1) %317, i64 %342
  %352 = getelementptr half, ptr addrspace(1) %318, i64 %342
  %353 = getelementptr half, ptr addrspace(1) %319, i64 %342
  %354 = getelementptr half, ptr addrspace(1) %320, i64 %342
  %355 = getelementptr half, ptr addrspace(1) %321, i64 %342
  %356 = getelementptr half, ptr addrspace(1) %322, i64 %342
  %357 = getelementptr half, ptr addrspace(1) %323, i64 %342
  %358 = getelementptr half, ptr addrspace(1) %324, i64 %342
  %359 = getelementptr half, ptr addrspace(1) %325, i64 %342
  %360 = getelementptr half, ptr addrspace(1) %326, i64 %342
  %361 = getelementptr half, ptr addrspace(1) %327, i64 %342
  %362 = getelementptr half, ptr addrspace(1) %328, i64 %342
  %363 = getelementptr half, ptr addrspace(1) %329, i64 %342
  %364 = getelementptr half, ptr addrspace(1) %330, i64 %342
  %365 = getelementptr half, ptr addrspace(1) %331, i64 %342
  %366 = getelementptr half, ptr addrspace(1) %332, i64 %342
  %367 = getelementptr half, ptr addrspace(1) %333, i64 %342
  %368 = getelementptr half, ptr addrspace(1) %334, i64 %342
  %369 = getelementptr half, ptr addrspace(1) %335, i64 %342
  %370 = getelementptr half, ptr addrspace(1) %336, i64 %342
  %371 = getelementptr half, ptr addrspace(1) %337, i64 %342
  %372 = getelementptr half, ptr addrspace(1) %338, i64 %342
  %373 = getelementptr half, ptr addrspace(1) %339, i64 %342
  %374 = getelementptr half, ptr addrspace(1) %340, i64 %342
  %375 = getelementptr half, ptr addrspace(1) %341, i64 %342
  %376 = getelementptr half, ptr addrspace(1) %310, i64 %343
  %377 = getelementptr half, ptr addrspace(1) %311, i64 %343
  %378 = getelementptr half, ptr addrspace(1) %312, i64 %343
  %379 = getelementptr half, ptr addrspace(1) %313, i64 %343
  %380 = getelementptr half, ptr addrspace(1) %314, i64 %343
  %381 = getelementptr half, ptr addrspace(1) %315, i64 %343
  %382 = getelementptr half, ptr addrspace(1) %316, i64 %343
  %383 = getelementptr half, ptr addrspace(1) %317, i64 %343
  %384 = getelementptr half, ptr addrspace(1) %318, i64 %343
  %385 = getelementptr half, ptr addrspace(1) %319, i64 %343
  %386 = getelementptr half, ptr addrspace(1) %320, i64 %343
  %387 = getelementptr half, ptr addrspace(1) %321, i64 %343
  %388 = getelementptr half, ptr addrspace(1) %322, i64 %343
  %389 = getelementptr half, ptr addrspace(1) %323, i64 %343
  %390 = getelementptr half, ptr addrspace(1) %324, i64 %343
  %391 = getelementptr half, ptr addrspace(1) %325, i64 %343
  %392 = getelementptr half, ptr addrspace(1) %326, i64 %343
  %393 = getelementptr half, ptr addrspace(1) %327, i64 %343
  %394 = getelementptr half, ptr addrspace(1) %328, i64 %343
  %395 = getelementptr half, ptr addrspace(1) %329, i64 %343
  %396 = getelementptr half, ptr addrspace(1) %330, i64 %343
  %397 = getelementptr half, ptr addrspace(1) %331, i64 %343
  %398 = getelementptr half, ptr addrspace(1) %332, i64 %343
  %399 = getelementptr half, ptr addrspace(1) %333, i64 %343
  %400 = getelementptr half, ptr addrspace(1) %334, i64 %343
  %401 = getelementptr half, ptr addrspace(1) %335, i64 %343
  %402 = getelementptr half, ptr addrspace(1) %336, i64 %343
  %403 = getelementptr half, ptr addrspace(1) %337, i64 %343
  %404 = getelementptr half, ptr addrspace(1) %338, i64 %343
  %405 = getelementptr half, ptr addrspace(1) %339, i64 %343
  %406 = getelementptr half, ptr addrspace(1) %340, i64 %343
  %407 = getelementptr half, ptr addrspace(1) %341, i64 %343
  %408 = addrspacecast ptr addrspace(1) %344 to ptr
  %409 = load <1 x half>, ptr %408, align 2
  %410 = addrspacecast ptr addrspace(1) %345 to ptr
  %411 = load <1 x half>, ptr %410, align 2
  %412 = addrspacecast ptr addrspace(1) %346 to ptr
  %413 = load <1 x half>, ptr %412, align 2
  %414 = shufflevector <1 x half> %413, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %415 = addrspacecast ptr addrspace(1) %347 to ptr
  %416 = load <1 x half>, ptr %415, align 2
  %417 = shufflevector <1 x half> %416, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %418 = addrspacecast ptr addrspace(1) %348 to ptr
  %419 = load <1 x half>, ptr %418, align 2
  %420 = shufflevector <1 x half> %419, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %421 = addrspacecast ptr addrspace(1) %349 to ptr
  %422 = load <1 x half>, ptr %421, align 2
  %423 = shufflevector <1 x half> %422, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %424 = addrspacecast ptr addrspace(1) %350 to ptr
  %425 = load <1 x half>, ptr %424, align 2
  %426 = shufflevector <1 x half> %425, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %427 = addrspacecast ptr addrspace(1) %351 to ptr
  %428 = load <1 x half>, ptr %427, align 2
  %429 = shufflevector <1 x half> %428, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %430 = addrspacecast ptr addrspace(1) %376 to ptr
  %431 = load <1 x half>, ptr %430, align 2
  %432 = addrspacecast ptr addrspace(1) %377 to ptr
  %433 = load <1 x half>, ptr %432, align 2
  %434 = addrspacecast ptr addrspace(1) %378 to ptr
  %435 = load <1 x half>, ptr %434, align 2
  %436 = shufflevector <1 x half> %435, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %437 = addrspacecast ptr addrspace(1) %379 to ptr
  %438 = load <1 x half>, ptr %437, align 2
  %439 = shufflevector <1 x half> %438, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %440 = addrspacecast ptr addrspace(1) %380 to ptr
  %441 = load <1 x half>, ptr %440, align 2
  %442 = shufflevector <1 x half> %441, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %443 = addrspacecast ptr addrspace(1) %381 to ptr
  %444 = load <1 x half>, ptr %443, align 2
  %445 = shufflevector <1 x half> %444, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %446 = addrspacecast ptr addrspace(1) %382 to ptr
  %447 = load <1 x half>, ptr %446, align 2
  %448 = shufflevector <1 x half> %447, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %449 = addrspacecast ptr addrspace(1) %383 to ptr
  %450 = load <1 x half>, ptr %449, align 2
  %451 = shufflevector <1 x half> %450, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %452 = addrspacecast ptr addrspace(1) %352 to ptr
  %453 = load <1 x half>, ptr %452, align 2
  %454 = addrspacecast ptr addrspace(1) %353 to ptr
  %455 = load <1 x half>, ptr %454, align 2
  %456 = addrspacecast ptr addrspace(1) %354 to ptr
  %457 = load <1 x half>, ptr %456, align 2
  %458 = shufflevector <1 x half> %457, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %459 = addrspacecast ptr addrspace(1) %355 to ptr
  %460 = load <1 x half>, ptr %459, align 2
  %461 = shufflevector <1 x half> %460, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %462 = addrspacecast ptr addrspace(1) %356 to ptr
  %463 = load <1 x half>, ptr %462, align 2
  %464 = shufflevector <1 x half> %463, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %465 = addrspacecast ptr addrspace(1) %357 to ptr
  %466 = load <1 x half>, ptr %465, align 2
  %467 = shufflevector <1 x half> %466, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %468 = addrspacecast ptr addrspace(1) %358 to ptr
  %469 = load <1 x half>, ptr %468, align 2
  %470 = shufflevector <1 x half> %469, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %471 = addrspacecast ptr addrspace(1) %359 to ptr
  %472 = load <1 x half>, ptr %471, align 2
  %473 = shufflevector <1 x half> %472, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %474 = addrspacecast ptr addrspace(1) %384 to ptr
  %475 = load <1 x half>, ptr %474, align 2
  %476 = addrspacecast ptr addrspace(1) %385 to ptr
  %477 = load <1 x half>, ptr %476, align 2
  %478 = addrspacecast ptr addrspace(1) %386 to ptr
  %479 = load <1 x half>, ptr %478, align 2
  %480 = shufflevector <1 x half> %479, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %481 = addrspacecast ptr addrspace(1) %387 to ptr
  %482 = load <1 x half>, ptr %481, align 2
  %483 = shufflevector <1 x half> %482, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %484 = addrspacecast ptr addrspace(1) %388 to ptr
  %485 = load <1 x half>, ptr %484, align 2
  %486 = shufflevector <1 x half> %485, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %487 = addrspacecast ptr addrspace(1) %389 to ptr
  %488 = load <1 x half>, ptr %487, align 2
  %489 = shufflevector <1 x half> %488, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %490 = addrspacecast ptr addrspace(1) %390 to ptr
  %491 = load <1 x half>, ptr %490, align 2
  %492 = shufflevector <1 x half> %491, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %493 = addrspacecast ptr addrspace(1) %391 to ptr
  %494 = load <1 x half>, ptr %493, align 2
  %495 = shufflevector <1 x half> %494, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %496 = addrspacecast ptr addrspace(1) %212 to ptr
  %497 = load half, ptr %496, align 2
  %498 = addrspacecast ptr addrspace(1) %213 to ptr
  %499 = load half, ptr %498, align 2
  %500 = addrspacecast ptr addrspace(1) %214 to ptr
  %501 = load half, ptr %500, align 2
  %502 = addrspacecast ptr addrspace(1) %215 to ptr
  %503 = load half, ptr %502, align 2
  %504 = addrspacecast ptr addrspace(1) %216 to ptr
  %505 = load half, ptr %504, align 2
  %506 = addrspacecast ptr addrspace(1) %217 to ptr
  %507 = load half, ptr %506, align 2
  %508 = addrspacecast ptr addrspace(1) %218 to ptr
  %509 = load half, ptr %508, align 2
  %510 = addrspacecast ptr addrspace(1) %219 to ptr
  %511 = load half, ptr %510, align 2
  %512 = addrspacecast ptr addrspace(1) %220 to ptr
  %513 = load half, ptr %512, align 2
  %514 = addrspacecast ptr addrspace(1) %221 to ptr
  %515 = load half, ptr %514, align 2
  %516 = addrspacecast ptr addrspace(1) %222 to ptr
  %517 = load half, ptr %516, align 2
  %518 = addrspacecast ptr addrspace(1) %223 to ptr
  %519 = load half, ptr %518, align 2
  %520 = addrspacecast ptr addrspace(1) %224 to ptr
  %521 = load half, ptr %520, align 2
  %522 = addrspacecast ptr addrspace(1) %225 to ptr
  %523 = load half, ptr %522, align 2
  %524 = addrspacecast ptr addrspace(1) %226 to ptr
  %525 = load half, ptr %524, align 2
  %526 = addrspacecast ptr addrspace(1) %227 to ptr
  %527 = load half, ptr %526, align 2
  %528 = insertelement <4 x half> poison, half %497, i64 0
  %529 = insertelement <4 x half> %528, half %499, i64 1
  %530 = insertelement <4 x half> %529, half %501, i64 2
  %531 = insertelement <4 x half> %530, half %503, i64 3
  %532 = fpext <4 x half> %531 to <4 x float>
  %533 = insertelement <4 x float> poison, float %131, i64 0
  %534 = shufflevector <4 x float> %533, <4 x float> poison, <4 x i32> zeroinitializer
  %535 = fmul <4 x float> %534, %532
  %536 = fptrunc <4 x float> %535 to <4 x half>
  %537 = insertelement <4 x half> poison, half %505, i64 0
  %538 = insertelement <4 x half> %537, half %507, i64 1
  %539 = insertelement <4 x half> %538, half %509, i64 2
  %540 = insertelement <4 x half> %539, half %511, i64 3
  %541 = fpext <4 x half> %540 to <4 x float>
  %542 = fmul <4 x float> %534, %541
  %543 = fptrunc <4 x float> %542 to <4 x half>
  %544 = insertelement <4 x half> poison, half %513, i64 0
  %545 = insertelement <4 x half> %544, half %515, i64 1
  %546 = insertelement <4 x half> %545, half %517, i64 2
  %547 = insertelement <4 x half> %546, half %519, i64 3
  %548 = fpext <4 x half> %547 to <4 x float>
  %549 = fmul <4 x float> %534, %548
  %550 = fptrunc <4 x float> %549 to <4 x half>
  %551 = insertelement <4 x half> poison, half %521, i64 0
  %552 = insertelement <4 x half> %551, half %523, i64 1
  %553 = insertelement <4 x half> %552, half %525, i64 2
  %554 = insertelement <4 x half> %553, half %527, i64 3
  %555 = fpext <4 x half> %554 to <4 x float>
  %556 = fmul <4 x float> %534, %555
  %557 = fptrunc <4 x float> %556 to <4 x half>
  %558 = addrspacecast ptr addrspace(1) %228 to ptr
  %559 = load half, ptr %558, align 2
  %560 = addrspacecast ptr addrspace(1) %229 to ptr
  %561 = load half, ptr %560, align 2
  %562 = addrspacecast ptr addrspace(1) %230 to ptr
  %563 = load half, ptr %562, align 2
  %564 = addrspacecast ptr addrspace(1) %231 to ptr
  %565 = load half, ptr %564, align 2
  %566 = addrspacecast ptr addrspace(1) %232 to ptr
  %567 = load half, ptr %566, align 2
  %568 = addrspacecast ptr addrspace(1) %233 to ptr
  %569 = load half, ptr %568, align 2
  %570 = addrspacecast ptr addrspace(1) %234 to ptr
  %571 = load half, ptr %570, align 2
  %572 = addrspacecast ptr addrspace(1) %235 to ptr
  %573 = load half, ptr %572, align 2
  %574 = addrspacecast ptr addrspace(1) %236 to ptr
  %575 = load half, ptr %574, align 2
  %576 = addrspacecast ptr addrspace(1) %237 to ptr
  %577 = load half, ptr %576, align 2
  %578 = addrspacecast ptr addrspace(1) %238 to ptr
  %579 = load half, ptr %578, align 2
  %580 = addrspacecast ptr addrspace(1) %239 to ptr
  %581 = load half, ptr %580, align 2
  %582 = addrspacecast ptr addrspace(1) %240 to ptr
  %583 = load half, ptr %582, align 2
  %584 = addrspacecast ptr addrspace(1) %241 to ptr
  %585 = load half, ptr %584, align 2
  %586 = addrspacecast ptr addrspace(1) %242 to ptr
  %587 = load half, ptr %586, align 2
  %588 = addrspacecast ptr addrspace(1) %243 to ptr
  %589 = load half, ptr %588, align 2
  %590 = insertelement <4 x half> poison, half %559, i64 0
  %591 = insertelement <4 x half> %590, half %561, i64 1
  %592 = insertelement <4 x half> %591, half %563, i64 2
  %593 = insertelement <4 x half> %592, half %565, i64 3
  %594 = fpext <4 x half> %593 to <4 x float>
  %595 = fmul <4 x float> %534, %594
  %596 = fptrunc <4 x float> %595 to <4 x half>
  %597 = insertelement <4 x half> poison, half %567, i64 0
  %598 = insertelement <4 x half> %597, half %569, i64 1
  %599 = insertelement <4 x half> %598, half %571, i64 2
  %600 = insertelement <4 x half> %599, half %573, i64 3
  %601 = fpext <4 x half> %600 to <4 x float>
  %602 = fmul <4 x float> %534, %601
  %603 = fptrunc <4 x float> %602 to <4 x half>
  %604 = insertelement <4 x half> poison, half %575, i64 0
  %605 = insertelement <4 x half> %604, half %577, i64 1
  %606 = insertelement <4 x half> %605, half %579, i64 2
  %607 = insertelement <4 x half> %606, half %581, i64 3
  %608 = fpext <4 x half> %607 to <4 x float>
  %609 = fmul <4 x float> %534, %608
  %610 = fptrunc <4 x float> %609 to <4 x half>
  %611 = insertelement <4 x half> poison, half %583, i64 0
  %612 = insertelement <4 x half> %611, half %585, i64 1
  %613 = insertelement <4 x half> %612, half %587, i64 2
  %614 = insertelement <4 x half> %613, half %589, i64 3
  %615 = fpext <4 x half> %614 to <4 x float>
  %616 = fmul <4 x float> %534, %615
  %617 = fptrunc <4 x float> %616 to <4 x half>
  %618 = shl nuw nsw i32 %96, 5
  %619 = xor i32 %98, %22
  %620 = and i32 %619, 24
  %621 = or i32 %618, %620
  %622 = zext i32 %621 to i64
  %623 = getelementptr half, ptr addrspace(3) @global_smem, i64 %622
  %624 = getelementptr half, ptr addrspace(3) %623, i64 2048
  %625 = shufflevector <1 x half> %409, <1 x half> %411, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %626 = shufflevector <8 x half> %625, <8 x half> %414, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %627 = shufflevector <8 x half> %626, <8 x half> %417, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %628 = shufflevector <8 x half> %627, <8 x half> %420, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %629 = shufflevector <8 x half> %628, <8 x half> %423, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %630 = shufflevector <8 x half> %629, <8 x half> %426, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %631 = shufflevector <8 x half> %630, <8 x half> %429, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %631, ptr addrspace(3) %623, align 16
  %632 = shufflevector <1 x half> %431, <1 x half> %433, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %633 = shufflevector <8 x half> %632, <8 x half> %436, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %634 = shufflevector <8 x half> %633, <8 x half> %439, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %635 = shufflevector <8 x half> %634, <8 x half> %442, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %636 = shufflevector <8 x half> %635, <8 x half> %445, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %637 = shufflevector <8 x half> %636, <8 x half> %448, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %638 = shufflevector <8 x half> %637, <8 x half> %451, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %638, ptr addrspace(3) %624, align 16
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %639 = icmp ugt i32 %23, 31
  %640 = select i1 %639, i32 8, i32 0
  %641 = or i32 %640, 16
  %642 = lshr i32 %22, 1
  %643 = and i32 %642, 3
  %644 = shl nuw nsw i32 %643, 3
  %645 = xor i32 %640, %644
  %646 = shl nuw nsw i32 %26, 5
  %647 = or i32 %645, %646
  %648 = xor i32 %641, %644
  %649 = or i32 %648, %646
  %650 = or i32 %647, 1024
  %651 = or i32 %649, 1024
  %652 = or i32 %647, 2048
  %653 = or i32 %649, 2048
  %654 = or i32 %647, 3072
  %655 = or i32 %649, 3072
  %656 = zext i32 %647 to i64
  %657 = getelementptr half, ptr addrspace(3) @global_smem, i64 %656
  %658 = load <8 x half>, ptr addrspace(3) %657, align 16
  %659 = zext i32 %649 to i64
  %660 = getelementptr half, ptr addrspace(3) @global_smem, i64 %659
  %661 = load <8 x half>, ptr addrspace(3) %660, align 16
  %662 = zext i32 %650 to i64
  %663 = getelementptr half, ptr addrspace(3) @global_smem, i64 %662
  %664 = load <8 x half>, ptr addrspace(3) %663, align 16
  %665 = zext i32 %651 to i64
  %666 = getelementptr half, ptr addrspace(3) @global_smem, i64 %665
  %667 = load <8 x half>, ptr addrspace(3) %666, align 16
  %668 = zext i32 %652 to i64
  %669 = getelementptr half, ptr addrspace(3) @global_smem, i64 %668
  %670 = load <8 x half>, ptr addrspace(3) %669, align 16
  %671 = zext i32 %653 to i64
  %672 = getelementptr half, ptr addrspace(3) @global_smem, i64 %671
  %673 = load <8 x half>, ptr addrspace(3) %672, align 16
  %674 = zext i32 %654 to i64
  %675 = getelementptr half, ptr addrspace(3) @global_smem, i64 %674
  %676 = load <8 x half>, ptr addrspace(3) %675, align 16
  %677 = zext i32 %655 to i64
  %678 = getelementptr half, ptr addrspace(3) @global_smem, i64 %677
  %679 = load <8 x half>, ptr addrspace(3) %678, align 16
  %680 = shufflevector <8 x half> %658, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %681 = shufflevector <8 x half> %658, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %682 = shufflevector <8 x half> %661, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %683 = shufflevector <8 x half> %661, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %684 = shufflevector <8 x half> %664, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %685 = shufflevector <8 x half> %664, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %686 = shufflevector <8 x half> %667, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %687 = shufflevector <8 x half> %667, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %688 = shufflevector <8 x half> %670, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %689 = shufflevector <8 x half> %670, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %690 = shufflevector <8 x half> %673, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %691 = shufflevector <8 x half> %673, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %692 = shufflevector <8 x half> %676, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %693 = shufflevector <8 x half> %676, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %694 = shufflevector <8 x half> %679, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %695 = shufflevector <8 x half> %679, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %696 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %680, <4 x half> %536, <16 x float> zeroinitializer, i32 0, i32 0, i32 0)
  %697 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %681, <4 x half> %543, <16 x float> %696, i32 0, i32 0, i32 0)
  %698 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %682, <4 x half> %550, <16 x float> %697, i32 0, i32 0, i32 0)
  %699 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %683, <4 x half> %557, <16 x float> %698, i32 0, i32 0, i32 0)
  %700 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %684, <4 x half> %536, <16 x float> zeroinitializer, i32 0, i32 0, i32 0)
  %701 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %685, <4 x half> %543, <16 x float> %700, i32 0, i32 0, i32 0)
  %702 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %686, <4 x half> %550, <16 x float> %701, i32 0, i32 0, i32 0)
  %703 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %687, <4 x half> %557, <16 x float> %702, i32 0, i32 0, i32 0)
  %704 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %688, <4 x half> %536, <16 x float> zeroinitializer, i32 0, i32 0, i32 0)
  %705 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %689, <4 x half> %543, <16 x float> %704, i32 0, i32 0, i32 0)
  %706 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %690, <4 x half> %550, <16 x float> %705, i32 0, i32 0, i32 0)
  %707 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %691, <4 x half> %557, <16 x float> %706, i32 0, i32 0, i32 0)
  %708 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %692, <4 x half> %536, <16 x float> zeroinitializer, i32 0, i32 0, i32 0)
  %709 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %693, <4 x half> %543, <16 x float> %708, i32 0, i32 0, i32 0)
  %710 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %694, <4 x half> %550, <16 x float> %709, i32 0, i32 0, i32 0)
  %711 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %695, <4 x half> %557, <16 x float> %710, i32 0, i32 0, i32 0)
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %712 = shufflevector <1 x half> %453, <1 x half> %455, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %713 = shufflevector <8 x half> %712, <8 x half> %458, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %714 = shufflevector <8 x half> %713, <8 x half> %461, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %715 = shufflevector <8 x half> %714, <8 x half> %464, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %716 = shufflevector <8 x half> %715, <8 x half> %467, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %717 = shufflevector <8 x half> %716, <8 x half> %470, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %718 = shufflevector <8 x half> %717, <8 x half> %473, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %718, ptr addrspace(3) %623, align 16
  %719 = shufflevector <1 x half> %475, <1 x half> %477, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %720 = shufflevector <8 x half> %719, <8 x half> %480, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %721 = shufflevector <8 x half> %720, <8 x half> %483, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %722 = shufflevector <8 x half> %721, <8 x half> %486, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %723 = shufflevector <8 x half> %722, <8 x half> %489, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %724 = shufflevector <8 x half> %723, <8 x half> %492, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %725 = shufflevector <8 x half> %724, <8 x half> %495, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %725, ptr addrspace(3) %624, align 16
  %726 = addrspacecast ptr addrspace(1) %360 to ptr
  %727 = load <1 x half>, ptr %726, align 2
  %728 = addrspacecast ptr addrspace(1) %361 to ptr
  %729 = load <1 x half>, ptr %728, align 2
  %730 = addrspacecast ptr addrspace(1) %362 to ptr
  %731 = load <1 x half>, ptr %730, align 2
  %732 = shufflevector <1 x half> %731, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %733 = addrspacecast ptr addrspace(1) %363 to ptr
  %734 = load <1 x half>, ptr %733, align 2
  %735 = shufflevector <1 x half> %734, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %736 = addrspacecast ptr addrspace(1) %364 to ptr
  %737 = load <1 x half>, ptr %736, align 2
  %738 = shufflevector <1 x half> %737, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %739 = addrspacecast ptr addrspace(1) %365 to ptr
  %740 = load <1 x half>, ptr %739, align 2
  %741 = shufflevector <1 x half> %740, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %742 = addrspacecast ptr addrspace(1) %366 to ptr
  %743 = load <1 x half>, ptr %742, align 2
  %744 = shufflevector <1 x half> %743, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %745 = addrspacecast ptr addrspace(1) %367 to ptr
  %746 = load <1 x half>, ptr %745, align 2
  %747 = shufflevector <1 x half> %746, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %748 = addrspacecast ptr addrspace(1) %392 to ptr
  %749 = load <1 x half>, ptr %748, align 2
  %750 = addrspacecast ptr addrspace(1) %393 to ptr
  %751 = load <1 x half>, ptr %750, align 2
  %752 = addrspacecast ptr addrspace(1) %394 to ptr
  %753 = load <1 x half>, ptr %752, align 2
  %754 = shufflevector <1 x half> %753, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %755 = addrspacecast ptr addrspace(1) %395 to ptr
  %756 = load <1 x half>, ptr %755, align 2
  %757 = shufflevector <1 x half> %756, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %758 = addrspacecast ptr addrspace(1) %396 to ptr
  %759 = load <1 x half>, ptr %758, align 2
  %760 = shufflevector <1 x half> %759, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %761 = addrspacecast ptr addrspace(1) %397 to ptr
  %762 = load <1 x half>, ptr %761, align 2
  %763 = shufflevector <1 x half> %762, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %764 = addrspacecast ptr addrspace(1) %398 to ptr
  %765 = load <1 x half>, ptr %764, align 2
  %766 = shufflevector <1 x half> %765, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %767 = addrspacecast ptr addrspace(1) %399 to ptr
  %768 = load <1 x half>, ptr %767, align 2
  %769 = shufflevector <1 x half> %768, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %770 = addrspacecast ptr addrspace(1) %244 to ptr
  %771 = load half, ptr %770, align 2
  %772 = addrspacecast ptr addrspace(1) %245 to ptr
  %773 = load half, ptr %772, align 2
  %774 = addrspacecast ptr addrspace(1) %246 to ptr
  %775 = load half, ptr %774, align 2
  %776 = addrspacecast ptr addrspace(1) %247 to ptr
  %777 = load half, ptr %776, align 2
  %778 = addrspacecast ptr addrspace(1) %248 to ptr
  %779 = load half, ptr %778, align 2
  %780 = addrspacecast ptr addrspace(1) %249 to ptr
  %781 = load half, ptr %780, align 2
  %782 = addrspacecast ptr addrspace(1) %250 to ptr
  %783 = load half, ptr %782, align 2
  %784 = addrspacecast ptr addrspace(1) %251 to ptr
  %785 = load half, ptr %784, align 2
  %786 = addrspacecast ptr addrspace(1) %252 to ptr
  %787 = load half, ptr %786, align 2
  %788 = addrspacecast ptr addrspace(1) %253 to ptr
  %789 = load half, ptr %788, align 2
  %790 = addrspacecast ptr addrspace(1) %254 to ptr
  %791 = load half, ptr %790, align 2
  %792 = addrspacecast ptr addrspace(1) %255 to ptr
  %793 = load half, ptr %792, align 2
  %794 = addrspacecast ptr addrspace(1) %256 to ptr
  %795 = load half, ptr %794, align 2
  %796 = addrspacecast ptr addrspace(1) %257 to ptr
  %797 = load half, ptr %796, align 2
  %798 = addrspacecast ptr addrspace(1) %258 to ptr
  %799 = load half, ptr %798, align 2
  %800 = addrspacecast ptr addrspace(1) %259 to ptr
  %801 = load half, ptr %800, align 2
  %802 = insertelement <4 x half> poison, half %771, i64 0
  %803 = insertelement <4 x half> %802, half %773, i64 1
  %804 = insertelement <4 x half> %803, half %775, i64 2
  %805 = insertelement <4 x half> %804, half %777, i64 3
  %806 = fpext <4 x half> %805 to <4 x float>
  %807 = fmul <4 x float> %534, %806
  %808 = fptrunc <4 x float> %807 to <4 x half>
  %809 = insertelement <4 x half> poison, half %779, i64 0
  %810 = insertelement <4 x half> %809, half %781, i64 1
  %811 = insertelement <4 x half> %810, half %783, i64 2
  %812 = insertelement <4 x half> %811, half %785, i64 3
  %813 = fpext <4 x half> %812 to <4 x float>
  %814 = fmul <4 x float> %534, %813
  %815 = fptrunc <4 x float> %814 to <4 x half>
  %816 = insertelement <4 x half> poison, half %787, i64 0
  %817 = insertelement <4 x half> %816, half %789, i64 1
  %818 = insertelement <4 x half> %817, half %791, i64 2
  %819 = insertelement <4 x half> %818, half %793, i64 3
  %820 = fpext <4 x half> %819 to <4 x float>
  %821 = fmul <4 x float> %534, %820
  %822 = fptrunc <4 x float> %821 to <4 x half>
  %823 = insertelement <4 x half> poison, half %795, i64 0
  %824 = insertelement <4 x half> %823, half %797, i64 1
  %825 = insertelement <4 x half> %824, half %799, i64 2
  %826 = insertelement <4 x half> %825, half %801, i64 3
  %827 = fpext <4 x half> %826 to <4 x float>
  %828 = fmul <4 x float> %534, %827
  %829 = fptrunc <4 x float> %828 to <4 x half>
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %830 = load <8 x half>, ptr addrspace(3) %657, align 16
  %831 = load <8 x half>, ptr addrspace(3) %660, align 16
  %832 = load <8 x half>, ptr addrspace(3) %663, align 16
  %833 = load <8 x half>, ptr addrspace(3) %666, align 16
  %834 = load <8 x half>, ptr addrspace(3) %669, align 16
  %835 = load <8 x half>, ptr addrspace(3) %672, align 16
  %836 = load <8 x half>, ptr addrspace(3) %675, align 16
  %837 = load <8 x half>, ptr addrspace(3) %678, align 16
  %838 = shufflevector <8 x half> %830, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %839 = shufflevector <8 x half> %830, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %840 = shufflevector <8 x half> %831, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %841 = shufflevector <8 x half> %831, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %842 = shufflevector <8 x half> %832, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %843 = shufflevector <8 x half> %832, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %844 = shufflevector <8 x half> %833, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %845 = shufflevector <8 x half> %833, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %846 = shufflevector <8 x half> %834, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %847 = shufflevector <8 x half> %834, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %848 = shufflevector <8 x half> %835, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %849 = shufflevector <8 x half> %835, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %850 = shufflevector <8 x half> %836, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %851 = shufflevector <8 x half> %836, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %852 = shufflevector <8 x half> %837, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %853 = shufflevector <8 x half> %837, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %854 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %838, <4 x half> %596, <16 x float> %699, i32 0, i32 0, i32 0)
  %855 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %839, <4 x half> %603, <16 x float> %854, i32 0, i32 0, i32 0)
  %856 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %840, <4 x half> %610, <16 x float> %855, i32 0, i32 0, i32 0)
  %857 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %841, <4 x half> %617, <16 x float> %856, i32 0, i32 0, i32 0)
  %858 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %842, <4 x half> %596, <16 x float> %703, i32 0, i32 0, i32 0)
  %859 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %843, <4 x half> %603, <16 x float> %858, i32 0, i32 0, i32 0)
  %860 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %844, <4 x half> %610, <16 x float> %859, i32 0, i32 0, i32 0)
  %861 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %845, <4 x half> %617, <16 x float> %860, i32 0, i32 0, i32 0)
  %862 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %846, <4 x half> %596, <16 x float> %707, i32 0, i32 0, i32 0)
  %863 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %847, <4 x half> %603, <16 x float> %862, i32 0, i32 0, i32 0)
  %864 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %848, <4 x half> %610, <16 x float> %863, i32 0, i32 0, i32 0)
  %865 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %849, <4 x half> %617, <16 x float> %864, i32 0, i32 0, i32 0)
  %866 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %850, <4 x half> %596, <16 x float> %711, i32 0, i32 0, i32 0)
  %867 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %851, <4 x half> %603, <16 x float> %866, i32 0, i32 0, i32 0)
  %868 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %852, <4 x half> %610, <16 x float> %867, i32 0, i32 0, i32 0)
  %869 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %853, <4 x half> %617, <16 x float> %868, i32 0, i32 0, i32 0)
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %870 = shufflevector <1 x half> %727, <1 x half> %729, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %871 = shufflevector <8 x half> %870, <8 x half> %732, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %872 = shufflevector <8 x half> %871, <8 x half> %735, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %873 = shufflevector <8 x half> %872, <8 x half> %738, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %874 = shufflevector <8 x half> %873, <8 x half> %741, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %875 = shufflevector <8 x half> %874, <8 x half> %744, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %876 = shufflevector <8 x half> %875, <8 x half> %747, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %876, ptr addrspace(3) %623, align 16
  %877 = shufflevector <1 x half> %749, <1 x half> %751, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %878 = shufflevector <8 x half> %877, <8 x half> %754, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %879 = shufflevector <8 x half> %878, <8 x half> %757, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %880 = shufflevector <8 x half> %879, <8 x half> %760, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %881 = shufflevector <8 x half> %880, <8 x half> %763, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %882 = shufflevector <8 x half> %881, <8 x half> %766, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %883 = shufflevector <8 x half> %882, <8 x half> %769, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %883, ptr addrspace(3) %624, align 16
  %884 = addrspacecast ptr addrspace(1) %368 to ptr
  %885 = load <1 x half>, ptr %884, align 2
  %886 = addrspacecast ptr addrspace(1) %369 to ptr
  %887 = load <1 x half>, ptr %886, align 2
  %888 = addrspacecast ptr addrspace(1) %370 to ptr
  %889 = load <1 x half>, ptr %888, align 2
  %890 = shufflevector <1 x half> %889, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %891 = addrspacecast ptr addrspace(1) %371 to ptr
  %892 = load <1 x half>, ptr %891, align 2
  %893 = shufflevector <1 x half> %892, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %894 = addrspacecast ptr addrspace(1) %372 to ptr
  %895 = load <1 x half>, ptr %894, align 2
  %896 = shufflevector <1 x half> %895, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %897 = addrspacecast ptr addrspace(1) %373 to ptr
  %898 = load <1 x half>, ptr %897, align 2
  %899 = shufflevector <1 x half> %898, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %900 = addrspacecast ptr addrspace(1) %374 to ptr
  %901 = load <1 x half>, ptr %900, align 2
  %902 = shufflevector <1 x half> %901, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %903 = addrspacecast ptr addrspace(1) %375 to ptr
  %904 = load <1 x half>, ptr %903, align 2
  %905 = shufflevector <1 x half> %904, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %906 = addrspacecast ptr addrspace(1) %400 to ptr
  %907 = load <1 x half>, ptr %906, align 2
  %908 = addrspacecast ptr addrspace(1) %401 to ptr
  %909 = load <1 x half>, ptr %908, align 2
  %910 = addrspacecast ptr addrspace(1) %402 to ptr
  %911 = load <1 x half>, ptr %910, align 2
  %912 = shufflevector <1 x half> %911, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %913 = addrspacecast ptr addrspace(1) %403 to ptr
  %914 = load <1 x half>, ptr %913, align 2
  %915 = shufflevector <1 x half> %914, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %916 = addrspacecast ptr addrspace(1) %404 to ptr
  %917 = load <1 x half>, ptr %916, align 2
  %918 = shufflevector <1 x half> %917, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %919 = addrspacecast ptr addrspace(1) %405 to ptr
  %920 = load <1 x half>, ptr %919, align 2
  %921 = shufflevector <1 x half> %920, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %922 = addrspacecast ptr addrspace(1) %406 to ptr
  %923 = load <1 x half>, ptr %922, align 2
  %924 = shufflevector <1 x half> %923, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %925 = addrspacecast ptr addrspace(1) %407 to ptr
  %926 = load <1 x half>, ptr %925, align 2
  %927 = shufflevector <1 x half> %926, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %928 = addrspacecast ptr addrspace(1) %260 to ptr
  %929 = load half, ptr %928, align 2
  %930 = addrspacecast ptr addrspace(1) %261 to ptr
  %931 = load half, ptr %930, align 2
  %932 = addrspacecast ptr addrspace(1) %262 to ptr
  %933 = load half, ptr %932, align 2
  %934 = addrspacecast ptr addrspace(1) %263 to ptr
  %935 = load half, ptr %934, align 2
  %936 = addrspacecast ptr addrspace(1) %264 to ptr
  %937 = load half, ptr %936, align 2
  %938 = addrspacecast ptr addrspace(1) %265 to ptr
  %939 = load half, ptr %938, align 2
  %940 = addrspacecast ptr addrspace(1) %266 to ptr
  %941 = load half, ptr %940, align 2
  %942 = addrspacecast ptr addrspace(1) %267 to ptr
  %943 = load half, ptr %942, align 2
  %944 = addrspacecast ptr addrspace(1) %268 to ptr
  %945 = load half, ptr %944, align 2
  %946 = addrspacecast ptr addrspace(1) %269 to ptr
  %947 = load half, ptr %946, align 2
  %948 = addrspacecast ptr addrspace(1) %270 to ptr
  %949 = load half, ptr %948, align 2
  %950 = addrspacecast ptr addrspace(1) %271 to ptr
  %951 = load half, ptr %950, align 2
  %952 = addrspacecast ptr addrspace(1) %272 to ptr
  %953 = load half, ptr %952, align 2
  %954 = addrspacecast ptr addrspace(1) %273 to ptr
  %955 = load half, ptr %954, align 2
  %956 = addrspacecast ptr addrspace(1) %274 to ptr
  %957 = load half, ptr %956, align 2
  %958 = addrspacecast ptr addrspace(1) %275 to ptr
  %959 = load half, ptr %958, align 2
  %960 = insertelement <4 x half> poison, half %929, i64 0
  %961 = insertelement <4 x half> %960, half %931, i64 1
  %962 = insertelement <4 x half> %961, half %933, i64 2
  %963 = insertelement <4 x half> %962, half %935, i64 3
  %964 = fpext <4 x half> %963 to <4 x float>
  %965 = fmul <4 x float> %534, %964
  %966 = fptrunc <4 x float> %965 to <4 x half>
  %967 = insertelement <4 x half> poison, half %937, i64 0
  %968 = insertelement <4 x half> %967, half %939, i64 1
  %969 = insertelement <4 x half> %968, half %941, i64 2
  %970 = insertelement <4 x half> %969, half %943, i64 3
  %971 = fpext <4 x half> %970 to <4 x float>
  %972 = fmul <4 x float> %534, %971
  %973 = fptrunc <4 x float> %972 to <4 x half>
  %974 = insertelement <4 x half> poison, half %945, i64 0
  %975 = insertelement <4 x half> %974, half %947, i64 1
  %976 = insertelement <4 x half> %975, half %949, i64 2
  %977 = insertelement <4 x half> %976, half %951, i64 3
  %978 = fpext <4 x half> %977 to <4 x float>
  %979 = fmul <4 x float> %534, %978
  %980 = fptrunc <4 x float> %979 to <4 x half>
  %981 = insertelement <4 x half> poison, half %953, i64 0
  %982 = insertelement <4 x half> %981, half %955, i64 1
  %983 = insertelement <4 x half> %982, half %957, i64 2
  %984 = insertelement <4 x half> %983, half %959, i64 3
  %985 = fpext <4 x half> %984 to <4 x float>
  %986 = fmul <4 x float> %534, %985
  %987 = fptrunc <4 x float> %986 to <4 x half>
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %988 = load <8 x half>, ptr addrspace(3) %657, align 16
  %989 = load <8 x half>, ptr addrspace(3) %660, align 16
  %990 = load <8 x half>, ptr addrspace(3) %663, align 16
  %991 = load <8 x half>, ptr addrspace(3) %666, align 16
  %992 = load <8 x half>, ptr addrspace(3) %669, align 16
  %993 = load <8 x half>, ptr addrspace(3) %672, align 16
  %994 = load <8 x half>, ptr addrspace(3) %675, align 16
  %995 = load <8 x half>, ptr addrspace(3) %678, align 16
  %996 = shufflevector <8 x half> %988, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %997 = shufflevector <8 x half> %988, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %998 = shufflevector <8 x half> %989, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %999 = shufflevector <8 x half> %989, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1000 = shufflevector <8 x half> %990, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1001 = shufflevector <8 x half> %990, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1002 = shufflevector <8 x half> %991, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1003 = shufflevector <8 x half> %991, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1004 = shufflevector <8 x half> %992, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1005 = shufflevector <8 x half> %992, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1006 = shufflevector <8 x half> %993, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1007 = shufflevector <8 x half> %993, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1008 = shufflevector <8 x half> %994, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1009 = shufflevector <8 x half> %994, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1010 = shufflevector <8 x half> %995, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1011 = shufflevector <8 x half> %995, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1012 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %996, <4 x half> %808, <16 x float> %857, i32 0, i32 0, i32 0)
  %1013 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %997, <4 x half> %815, <16 x float> %1012, i32 0, i32 0, i32 0)
  %1014 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %998, <4 x half> %822, <16 x float> %1013, i32 0, i32 0, i32 0)
  %1015 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %999, <4 x half> %829, <16 x float> %1014, i32 0, i32 0, i32 0)
  %1016 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1000, <4 x half> %808, <16 x float> %861, i32 0, i32 0, i32 0)
  %1017 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1001, <4 x half> %815, <16 x float> %1016, i32 0, i32 0, i32 0)
  %1018 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1002, <4 x half> %822, <16 x float> %1017, i32 0, i32 0, i32 0)
  %1019 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1003, <4 x half> %829, <16 x float> %1018, i32 0, i32 0, i32 0)
  %1020 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1004, <4 x half> %808, <16 x float> %865, i32 0, i32 0, i32 0)
  %1021 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1005, <4 x half> %815, <16 x float> %1020, i32 0, i32 0, i32 0)
  %1022 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1006, <4 x half> %822, <16 x float> %1021, i32 0, i32 0, i32 0)
  %1023 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1007, <4 x half> %829, <16 x float> %1022, i32 0, i32 0, i32 0)
  %1024 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1008, <4 x half> %808, <16 x float> %869, i32 0, i32 0, i32 0)
  %1025 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1009, <4 x half> %815, <16 x float> %1024, i32 0, i32 0, i32 0)
  %1026 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1010, <4 x half> %822, <16 x float> %1025, i32 0, i32 0, i32 0)
  %1027 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1011, <4 x half> %829, <16 x float> %1026, i32 0, i32 0, i32 0)
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %1028 = shufflevector <1 x half> %885, <1 x half> %887, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1029 = shufflevector <8 x half> %1028, <8 x half> %890, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1030 = shufflevector <8 x half> %1029, <8 x half> %893, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %1031 = shufflevector <8 x half> %1030, <8 x half> %896, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %1032 = shufflevector <8 x half> %1031, <8 x half> %899, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %1033 = shufflevector <8 x half> %1032, <8 x half> %902, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %1034 = shufflevector <8 x half> %1033, <8 x half> %905, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %1034, ptr addrspace(3) %623, align 16
  %1035 = shufflevector <1 x half> %907, <1 x half> %909, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1036 = shufflevector <8 x half> %1035, <8 x half> %912, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1037 = shufflevector <8 x half> %1036, <8 x half> %915, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %1038 = shufflevector <8 x half> %1037, <8 x half> %918, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %1039 = shufflevector <8 x half> %1038, <8 x half> %921, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %1040 = shufflevector <8 x half> %1039, <8 x half> %924, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %1041 = shufflevector <8 x half> %1040, <8 x half> %927, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %1041, ptr addrspace(3) %624, align 16
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %1042 = load <8 x half>, ptr addrspace(3) %657, align 16
  %1043 = load <8 x half>, ptr addrspace(3) %660, align 16
  %1044 = load <8 x half>, ptr addrspace(3) %663, align 16
  %1045 = load <8 x half>, ptr addrspace(3) %666, align 16
  %1046 = load <8 x half>, ptr addrspace(3) %669, align 16
  %1047 = load <8 x half>, ptr addrspace(3) %672, align 16
  %1048 = load <8 x half>, ptr addrspace(3) %675, align 16
  %1049 = load <8 x half>, ptr addrspace(3) %678, align 16
  %1050 = shufflevector <8 x half> %1042, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1051 = shufflevector <8 x half> %1042, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1052 = shufflevector <8 x half> %1043, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1053 = shufflevector <8 x half> %1043, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1054 = shufflevector <8 x half> %1044, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1055 = shufflevector <8 x half> %1044, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1056 = shufflevector <8 x half> %1045, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1057 = shufflevector <8 x half> %1045, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1058 = shufflevector <8 x half> %1046, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1059 = shufflevector <8 x half> %1046, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1060 = shufflevector <8 x half> %1047, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1061 = shufflevector <8 x half> %1047, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1062 = shufflevector <8 x half> %1048, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1063 = shufflevector <8 x half> %1048, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1064 = shufflevector <8 x half> %1049, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1065 = shufflevector <8 x half> %1049, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1066 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1050, <4 x half> %966, <16 x float> %1015, i32 0, i32 0, i32 0)
  %1067 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1051, <4 x half> %973, <16 x float> %1066, i32 0, i32 0, i32 0)
  %1068 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1052, <4 x half> %980, <16 x float> %1067, i32 0, i32 0, i32 0)
  %1069 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1053, <4 x half> %987, <16 x float> %1068, i32 0, i32 0, i32 0)
  %1070 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1054, <4 x half> %966, <16 x float> %1019, i32 0, i32 0, i32 0)
  %1071 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1055, <4 x half> %973, <16 x float> %1070, i32 0, i32 0, i32 0)
  %1072 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1056, <4 x half> %980, <16 x float> %1071, i32 0, i32 0, i32 0)
  %1073 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1057, <4 x half> %987, <16 x float> %1072, i32 0, i32 0, i32 0)
  %1074 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1058, <4 x half> %966, <16 x float> %1023, i32 0, i32 0, i32 0)
  %1075 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1059, <4 x half> %973, <16 x float> %1074, i32 0, i32 0, i32 0)
  %1076 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1060, <4 x half> %980, <16 x float> %1075, i32 0, i32 0, i32 0)
  %1077 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1061, <4 x half> %987, <16 x float> %1076, i32 0, i32 0, i32 0)
  %1078 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1062, <4 x half> %966, <16 x float> %1027, i32 0, i32 0, i32 0)
  %1079 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1063, <4 x half> %973, <16 x float> %1078, i32 0, i32 0, i32 0)
  %1080 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1064, <4 x half> %980, <16 x float> %1079, i32 0, i32 0, i32 0)
  %1081 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1065, <4 x half> %987, <16 x float> %1080, i32 0, i32 0, i32 0)
  %1082 = mul nsw i64 %143, %276
  %1083 = mul nsw i64 %143, %277
  %1084 = icmp sgt i32 %20, 0
  br i1 %1084, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %21
  %1085 = shl i32 %22, 2
  %1086 = xor i32 %1085, 128
  %1087 = lshr i32 %22, 1
  %1088 = and i32 %1087, 12
  %1089 = xor i32 %1088, %99
  %1090 = or i32 %618, %1089
  %1091 = zext i32 %1090 to i64
  %1092 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1091
  %1093 = xor i32 %103, %1088
  %1094 = or i32 %618, %1093
  %1095 = zext i32 %1094 to i64
  %1096 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1095
  %1097 = getelementptr half, ptr addrspace(3) %1092, i64 2048
  %1098 = getelementptr half, ptr addrspace(3) %1096, i64 2048
  %1099 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1091
  %1100 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1095
  %1101 = getelementptr half, ptr addrspace(3) %1099, i64 2048
  %1102 = getelementptr half, ptr addrspace(3) %1100, i64 2048
  %1103 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1091
  %1104 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1095
  %1105 = getelementptr half, ptr addrspace(3) %1103, i64 2048
  %1106 = getelementptr half, ptr addrspace(3) %1104, i64 2048
  %1107 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1091
  %1108 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1095
  %1109 = getelementptr half, ptr addrspace(3) %1107, i64 2048
  %1110 = getelementptr half, ptr addrspace(3) %1108, i64 2048
  %1111 = select i1 %639, i32 4, i32 0
  %1112 = or i32 %1111, 8
  %1113 = or i32 %1111, 16
  %1114 = or i32 %1111, 24
  %1115 = shl nuw nsw i32 %643, 2
  %1116 = xor i32 %1111, %1115
  %1117 = or i32 %1116, %646
  %1118 = xor i32 %1112, %1115
  %1119 = or i32 %1118, %646
  %1120 = xor i32 %1113, %1115
  %1121 = or i32 %1120, %646
  %1122 = xor i32 %1114, %1115
  %1123 = or i32 %1122, %646
  %1124 = or i32 %1117, 1024
  %1125 = or i32 %1119, 1024
  %1126 = or i32 %1121, 1024
  %1127 = or i32 %1123, 1024
  %1128 = or i32 %1117, 2048
  %1129 = or i32 %1119, 2048
  %1130 = or i32 %1121, 2048
  %1131 = or i32 %1123, 2048
  %1132 = or i32 %1117, 3072
  %1133 = or i32 %1119, 3072
  %1134 = or i32 %1121, 3072
  %1135 = or i32 %1123, 3072
  %1136 = zext i32 %1117 to i64
  %1137 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1136
  %1138 = zext i32 %1119 to i64
  %1139 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1138
  %1140 = zext i32 %1121 to i64
  %1141 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1140
  %1142 = zext i32 %1123 to i64
  %1143 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1142
  %1144 = zext i32 %1124 to i64
  %1145 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1144
  %1146 = zext i32 %1125 to i64
  %1147 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1146
  %1148 = zext i32 %1126 to i64
  %1149 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1148
  %1150 = zext i32 %1127 to i64
  %1151 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1150
  %1152 = zext i32 %1128 to i64
  %1153 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1152
  %1154 = zext i32 %1129 to i64
  %1155 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1154
  %1156 = zext i32 %1130 to i64
  %1157 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1156
  %1158 = zext i32 %1131 to i64
  %1159 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1158
  %1160 = zext i32 %1132 to i64
  %1161 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1160
  %1162 = zext i32 %1133 to i64
  %1163 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1162
  %1164 = zext i32 %1134 to i64
  %1165 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1164
  %1166 = zext i32 %1135 to i64
  %1167 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1166
  %1168 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1136
  %1169 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1138
  %1170 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1140
  %1171 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1142
  %1172 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1144
  %1173 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1146
  %1174 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1148
  %1175 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1150
  %1176 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1152
  %1177 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1154
  %1178 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1156
  %1179 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1158
  %1180 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1160
  %1181 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1162
  %1182 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1164
  %1183 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %1166
  %1184 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1136
  %1185 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1138
  %1186 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1140
  %1187 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1142
  %1188 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1144
  %1189 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1146
  %1190 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1148
  %1191 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1150
  %1192 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1152
  %1193 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1154
  %1194 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1156
  %1195 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1158
  %1196 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1160
  %1197 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1162
  %1198 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1164
  %1199 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %1166
  %1200 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1136
  %1201 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1138
  %1202 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1140
  %1203 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1142
  %1204 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1144
  %1205 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1146
  %1206 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1148
  %1207 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1150
  %1208 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1152
  %1209 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1154
  %1210 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1156
  %1211 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1158
  %1212 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1160
  %1213 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1162
  %1214 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1164
  %1215 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1166
  %1216 = shufflevector <16 x float> %1069, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %1217 = shufflevector <16 x float> %1069, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %1218 = shufflevector <16 x float> %1069, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1219 = shufflevector <16 x float> %1069, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1220 = shufflevector <16 x float> %1073, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %1221 = shufflevector <16 x float> %1073, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %1222 = shufflevector <16 x float> %1073, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1223 = shufflevector <16 x float> %1073, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1224 = shufflevector <16 x float> %1077, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %1225 = shufflevector <16 x float> %1077, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %1226 = shufflevector <16 x float> %1077, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1227 = shufflevector <16 x float> %1077, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1228 = shufflevector <16 x float> %1081, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %1229 = shufflevector <16 x float> %1081, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %1230 = shufflevector <16 x float> %1081, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1231 = shufflevector <16 x float> %1081, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  br label %1232

1232:                                             ; preds = %.lr.ph, %1734
  %1233 = phi i64 [ 0, %.lr.ph ], [ %2475, %1734 ]
  %1234 = phi float [ 0xFFF0000000000000, %.lr.ph ], [ %1882, %1734 ]
  %1235 = phi float [ 1.000000e+00, %.lr.ph ], [ %2474, %1734 ]
  %1236 = phi i32 [ 0, %.lr.ph ], [ %2476, %1734 ]
  %1237 = phi <4 x float> [ %1216, %.lr.ph ], [ %2030, %1734 ]
  %1238 = phi <4 x float> [ %1217, %.lr.ph ], [ %2027, %1734 ]
  %1239 = phi <4 x float> [ %1218, %.lr.ph ], [ %2024, %1734 ]
  %1240 = phi <4 x float> [ %1219, %.lr.ph ], [ %2021, %1734 ]
  %1241 = phi <4 x float> [ %1220, %.lr.ph ], [ %2042, %1734 ]
  %1242 = phi <4 x float> [ %1221, %.lr.ph ], [ %2039, %1734 ]
  %1243 = phi <4 x float> [ %1222, %.lr.ph ], [ %2036, %1734 ]
  %1244 = phi <4 x float> [ %1223, %.lr.ph ], [ %2033, %1734 ]
  %1245 = phi <4 x float> [ %1224, %.lr.ph ], [ %2054, %1734 ]
  %1246 = phi <4 x float> [ %1225, %.lr.ph ], [ %2051, %1734 ]
  %1247 = phi <4 x float> [ %1226, %.lr.ph ], [ %2048, %1734 ]
  %1248 = phi <4 x float> [ %1227, %.lr.ph ], [ %2045, %1734 ]
  %1249 = phi <4 x float> [ %1228, %.lr.ph ], [ %2066, %1734 ]
  %1250 = phi <4 x float> [ %1229, %.lr.ph ], [ %2063, %1734 ]
  %1251 = phi <4 x float> [ %1230, %.lr.ph ], [ %2060, %1734 ]
  %1252 = phi <4 x float> [ %1231, %.lr.ph ], [ %2057, %1734 ]
  %1253 = phi <16 x float> [ zeroinitializer, %.lr.ph ], [ %2404, %1734 ]
  %1254 = phi <16 x float> [ zeroinitializer, %.lr.ph ], [ %2400, %1734 ]
  %1255 = phi <16 x float> [ zeroinitializer, %.lr.ph ], [ %2396, %1734 ]
  %1256 = phi <16 x float> [ zeroinitializer, %.lr.ph ], [ %2392, %1734 ]
  %.not = icmp eq i32 %1236, 0
  br i1 %.not, label %1734, label %1257

1257:                                             ; preds = %1232
  %1258 = or i64 %1233, %276
  %1259 = or i64 %1233, %277
  %1260 = mul i64 %1258, %141
  %1261 = mul i64 %1259, %141
  %1262 = getelementptr half, ptr addrspace(1) %310, i64 %1260
  %1263 = getelementptr half, ptr addrspace(1) %311, i64 %1260
  %1264 = getelementptr half, ptr addrspace(1) %312, i64 %1260
  %1265 = getelementptr half, ptr addrspace(1) %313, i64 %1260
  %1266 = getelementptr half, ptr addrspace(1) %314, i64 %1260
  %1267 = getelementptr half, ptr addrspace(1) %315, i64 %1260
  %1268 = getelementptr half, ptr addrspace(1) %316, i64 %1260
  %1269 = getelementptr half, ptr addrspace(1) %317, i64 %1260
  %1270 = getelementptr half, ptr addrspace(1) %318, i64 %1260
  %1271 = getelementptr half, ptr addrspace(1) %319, i64 %1260
  %1272 = getelementptr half, ptr addrspace(1) %320, i64 %1260
  %1273 = getelementptr half, ptr addrspace(1) %321, i64 %1260
  %1274 = getelementptr half, ptr addrspace(1) %322, i64 %1260
  %1275 = getelementptr half, ptr addrspace(1) %323, i64 %1260
  %1276 = getelementptr half, ptr addrspace(1) %324, i64 %1260
  %1277 = getelementptr half, ptr addrspace(1) %325, i64 %1260
  %1278 = getelementptr half, ptr addrspace(1) %326, i64 %1260
  %1279 = getelementptr half, ptr addrspace(1) %327, i64 %1260
  %1280 = getelementptr half, ptr addrspace(1) %328, i64 %1260
  %1281 = getelementptr half, ptr addrspace(1) %329, i64 %1260
  %1282 = getelementptr half, ptr addrspace(1) %330, i64 %1260
  %1283 = getelementptr half, ptr addrspace(1) %331, i64 %1260
  %1284 = getelementptr half, ptr addrspace(1) %332, i64 %1260
  %1285 = getelementptr half, ptr addrspace(1) %333, i64 %1260
  %1286 = getelementptr half, ptr addrspace(1) %334, i64 %1260
  %1287 = getelementptr half, ptr addrspace(1) %335, i64 %1260
  %1288 = getelementptr half, ptr addrspace(1) %336, i64 %1260
  %1289 = getelementptr half, ptr addrspace(1) %337, i64 %1260
  %1290 = getelementptr half, ptr addrspace(1) %338, i64 %1260
  %1291 = getelementptr half, ptr addrspace(1) %339, i64 %1260
  %1292 = getelementptr half, ptr addrspace(1) %340, i64 %1260
  %1293 = getelementptr half, ptr addrspace(1) %341, i64 %1260
  %1294 = getelementptr half, ptr addrspace(1) %310, i64 %1261
  %1295 = getelementptr half, ptr addrspace(1) %311, i64 %1261
  %1296 = getelementptr half, ptr addrspace(1) %312, i64 %1261
  %1297 = getelementptr half, ptr addrspace(1) %313, i64 %1261
  %1298 = getelementptr half, ptr addrspace(1) %314, i64 %1261
  %1299 = getelementptr half, ptr addrspace(1) %315, i64 %1261
  %1300 = getelementptr half, ptr addrspace(1) %316, i64 %1261
  %1301 = getelementptr half, ptr addrspace(1) %317, i64 %1261
  %1302 = getelementptr half, ptr addrspace(1) %318, i64 %1261
  %1303 = getelementptr half, ptr addrspace(1) %319, i64 %1261
  %1304 = getelementptr half, ptr addrspace(1) %320, i64 %1261
  %1305 = getelementptr half, ptr addrspace(1) %321, i64 %1261
  %1306 = getelementptr half, ptr addrspace(1) %322, i64 %1261
  %1307 = getelementptr half, ptr addrspace(1) %323, i64 %1261
  %1308 = getelementptr half, ptr addrspace(1) %324, i64 %1261
  %1309 = getelementptr half, ptr addrspace(1) %325, i64 %1261
  %1310 = getelementptr half, ptr addrspace(1) %326, i64 %1261
  %1311 = getelementptr half, ptr addrspace(1) %327, i64 %1261
  %1312 = getelementptr half, ptr addrspace(1) %328, i64 %1261
  %1313 = getelementptr half, ptr addrspace(1) %329, i64 %1261
  %1314 = getelementptr half, ptr addrspace(1) %330, i64 %1261
  %1315 = getelementptr half, ptr addrspace(1) %331, i64 %1261
  %1316 = getelementptr half, ptr addrspace(1) %332, i64 %1261
  %1317 = getelementptr half, ptr addrspace(1) %333, i64 %1261
  %1318 = getelementptr half, ptr addrspace(1) %334, i64 %1261
  %1319 = getelementptr half, ptr addrspace(1) %335, i64 %1261
  %1320 = getelementptr half, ptr addrspace(1) %336, i64 %1261
  %1321 = getelementptr half, ptr addrspace(1) %337, i64 %1261
  %1322 = getelementptr half, ptr addrspace(1) %338, i64 %1261
  %1323 = getelementptr half, ptr addrspace(1) %339, i64 %1261
  %1324 = getelementptr half, ptr addrspace(1) %340, i64 %1261
  %1325 = getelementptr half, ptr addrspace(1) %341, i64 %1261
  %1326 = addrspacecast ptr addrspace(1) %1262 to ptr
  %1327 = load <1 x half>, ptr %1326, align 2
  %1328 = addrspacecast ptr addrspace(1) %1263 to ptr
  %1329 = load <1 x half>, ptr %1328, align 2
  %1330 = addrspacecast ptr addrspace(1) %1264 to ptr
  %1331 = load <1 x half>, ptr %1330, align 2
  %1332 = shufflevector <1 x half> %1331, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1333 = addrspacecast ptr addrspace(1) %1265 to ptr
  %1334 = load <1 x half>, ptr %1333, align 2
  %1335 = shufflevector <1 x half> %1334, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1336 = addrspacecast ptr addrspace(1) %1266 to ptr
  %1337 = load <1 x half>, ptr %1336, align 2
  %1338 = shufflevector <1 x half> %1337, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1339 = addrspacecast ptr addrspace(1) %1267 to ptr
  %1340 = load <1 x half>, ptr %1339, align 2
  %1341 = shufflevector <1 x half> %1340, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1342 = addrspacecast ptr addrspace(1) %1268 to ptr
  %1343 = load <1 x half>, ptr %1342, align 2
  %1344 = shufflevector <1 x half> %1343, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1345 = addrspacecast ptr addrspace(1) %1269 to ptr
  %1346 = load <1 x half>, ptr %1345, align 2
  %1347 = shufflevector <1 x half> %1346, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1348 = addrspacecast ptr addrspace(1) %1294 to ptr
  %1349 = load <1 x half>, ptr %1348, align 2
  %1350 = addrspacecast ptr addrspace(1) %1295 to ptr
  %1351 = load <1 x half>, ptr %1350, align 2
  %1352 = addrspacecast ptr addrspace(1) %1296 to ptr
  %1353 = load <1 x half>, ptr %1352, align 2
  %1354 = shufflevector <1 x half> %1353, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1355 = addrspacecast ptr addrspace(1) %1297 to ptr
  %1356 = load <1 x half>, ptr %1355, align 2
  %1357 = shufflevector <1 x half> %1356, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1358 = addrspacecast ptr addrspace(1) %1298 to ptr
  %1359 = load <1 x half>, ptr %1358, align 2
  %1360 = shufflevector <1 x half> %1359, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1361 = addrspacecast ptr addrspace(1) %1299 to ptr
  %1362 = load <1 x half>, ptr %1361, align 2
  %1363 = shufflevector <1 x half> %1362, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1364 = addrspacecast ptr addrspace(1) %1300 to ptr
  %1365 = load <1 x half>, ptr %1364, align 2
  %1366 = shufflevector <1 x half> %1365, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1367 = addrspacecast ptr addrspace(1) %1301 to ptr
  %1368 = load <1 x half>, ptr %1367, align 2
  %1369 = shufflevector <1 x half> %1368, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1370 = shufflevector <1 x half> %1327, <1 x half> %1329, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1371 = shufflevector <8 x half> %1370, <8 x half> %1332, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1372 = shufflevector <8 x half> %1371, <8 x half> %1335, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %1373 = shufflevector <8 x half> %1372, <8 x half> %1338, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %1374 = shufflevector <8 x half> %1373, <8 x half> %1341, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %1375 = shufflevector <8 x half> %1374, <8 x half> %1344, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %1376 = shufflevector <8 x half> %1375, <8 x half> %1347, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %1376, ptr addrspace(3) %623, align 16
  %1377 = shufflevector <1 x half> %1349, <1 x half> %1351, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1378 = shufflevector <8 x half> %1377, <8 x half> %1354, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1379 = shufflevector <8 x half> %1378, <8 x half> %1357, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %1380 = shufflevector <8 x half> %1379, <8 x half> %1360, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %1381 = shufflevector <8 x half> %1380, <8 x half> %1363, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %1382 = shufflevector <8 x half> %1381, <8 x half> %1366, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %1383 = shufflevector <8 x half> %1382, <8 x half> %1369, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %1383, ptr addrspace(3) %624, align 16
  %1384 = addrspacecast ptr addrspace(1) %1270 to ptr
  %1385 = load <1 x half>, ptr %1384, align 2
  %1386 = addrspacecast ptr addrspace(1) %1271 to ptr
  %1387 = load <1 x half>, ptr %1386, align 2
  %1388 = addrspacecast ptr addrspace(1) %1272 to ptr
  %1389 = load <1 x half>, ptr %1388, align 2
  %1390 = shufflevector <1 x half> %1389, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1391 = addrspacecast ptr addrspace(1) %1273 to ptr
  %1392 = load <1 x half>, ptr %1391, align 2
  %1393 = shufflevector <1 x half> %1392, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1394 = addrspacecast ptr addrspace(1) %1274 to ptr
  %1395 = load <1 x half>, ptr %1394, align 2
  %1396 = shufflevector <1 x half> %1395, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1397 = addrspacecast ptr addrspace(1) %1275 to ptr
  %1398 = load <1 x half>, ptr %1397, align 2
  %1399 = shufflevector <1 x half> %1398, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1400 = addrspacecast ptr addrspace(1) %1276 to ptr
  %1401 = load <1 x half>, ptr %1400, align 2
  %1402 = shufflevector <1 x half> %1401, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1403 = addrspacecast ptr addrspace(1) %1277 to ptr
  %1404 = load <1 x half>, ptr %1403, align 2
  %1405 = shufflevector <1 x half> %1404, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1406 = addrspacecast ptr addrspace(1) %1302 to ptr
  %1407 = load <1 x half>, ptr %1406, align 2
  %1408 = addrspacecast ptr addrspace(1) %1303 to ptr
  %1409 = load <1 x half>, ptr %1408, align 2
  %1410 = addrspacecast ptr addrspace(1) %1304 to ptr
  %1411 = load <1 x half>, ptr %1410, align 2
  %1412 = shufflevector <1 x half> %1411, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1413 = addrspacecast ptr addrspace(1) %1305 to ptr
  %1414 = load <1 x half>, ptr %1413, align 2
  %1415 = shufflevector <1 x half> %1414, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1416 = addrspacecast ptr addrspace(1) %1306 to ptr
  %1417 = load <1 x half>, ptr %1416, align 2
  %1418 = shufflevector <1 x half> %1417, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1419 = addrspacecast ptr addrspace(1) %1307 to ptr
  %1420 = load <1 x half>, ptr %1419, align 2
  %1421 = shufflevector <1 x half> %1420, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1422 = addrspacecast ptr addrspace(1) %1308 to ptr
  %1423 = load <1 x half>, ptr %1422, align 2
  %1424 = shufflevector <1 x half> %1423, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1425 = addrspacecast ptr addrspace(1) %1309 to ptr
  %1426 = load <1 x half>, ptr %1425, align 2
  %1427 = shufflevector <1 x half> %1426, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %1428 = load <8 x half>, ptr addrspace(3) %657, align 16
  %1429 = load <8 x half>, ptr addrspace(3) %660, align 16
  %1430 = load <8 x half>, ptr addrspace(3) %663, align 16
  %1431 = load <8 x half>, ptr addrspace(3) %666, align 16
  %1432 = load <8 x half>, ptr addrspace(3) %669, align 16
  %1433 = load <8 x half>, ptr addrspace(3) %672, align 16
  %1434 = load <8 x half>, ptr addrspace(3) %675, align 16
  %1435 = load <8 x half>, ptr addrspace(3) %678, align 16
  %1436 = shufflevector <8 x half> %1428, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1437 = shufflevector <8 x half> %1428, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1438 = shufflevector <8 x half> %1429, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1439 = shufflevector <8 x half> %1429, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1440 = shufflevector <8 x half> %1430, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1441 = shufflevector <8 x half> %1430, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1442 = shufflevector <8 x half> %1431, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1443 = shufflevector <8 x half> %1431, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1444 = shufflevector <8 x half> %1432, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1445 = shufflevector <8 x half> %1432, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1446 = shufflevector <8 x half> %1433, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1447 = shufflevector <8 x half> %1433, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1448 = shufflevector <8 x half> %1434, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1449 = shufflevector <8 x half> %1434, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1450 = shufflevector <8 x half> %1435, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1451 = shufflevector <8 x half> %1435, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1452 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1436, <4 x half> %536, <16 x float> zeroinitializer, i32 0, i32 0, i32 0)
  %1453 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1437, <4 x half> %543, <16 x float> %1452, i32 0, i32 0, i32 0)
  %1454 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1438, <4 x half> %550, <16 x float> %1453, i32 0, i32 0, i32 0)
  %1455 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1439, <4 x half> %557, <16 x float> %1454, i32 0, i32 0, i32 0)
  %1456 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1440, <4 x half> %536, <16 x float> zeroinitializer, i32 0, i32 0, i32 0)
  %1457 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1441, <4 x half> %543, <16 x float> %1456, i32 0, i32 0, i32 0)
  %1458 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1442, <4 x half> %550, <16 x float> %1457, i32 0, i32 0, i32 0)
  %1459 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1443, <4 x half> %557, <16 x float> %1458, i32 0, i32 0, i32 0)
  %1460 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1444, <4 x half> %536, <16 x float> zeroinitializer, i32 0, i32 0, i32 0)
  %1461 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1445, <4 x half> %543, <16 x float> %1460, i32 0, i32 0, i32 0)
  %1462 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1446, <4 x half> %550, <16 x float> %1461, i32 0, i32 0, i32 0)
  %1463 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1447, <4 x half> %557, <16 x float> %1462, i32 0, i32 0, i32 0)
  %1464 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1448, <4 x half> %536, <16 x float> zeroinitializer, i32 0, i32 0, i32 0)
  %1465 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1449, <4 x half> %543, <16 x float> %1464, i32 0, i32 0, i32 0)
  %1466 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1450, <4 x half> %550, <16 x float> %1465, i32 0, i32 0, i32 0)
  %1467 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1451, <4 x half> %557, <16 x float> %1466, i32 0, i32 0, i32 0)
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %1468 = shufflevector <1 x half> %1385, <1 x half> %1387, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1469 = shufflevector <8 x half> %1468, <8 x half> %1390, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1470 = shufflevector <8 x half> %1469, <8 x half> %1393, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %1471 = shufflevector <8 x half> %1470, <8 x half> %1396, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %1472 = shufflevector <8 x half> %1471, <8 x half> %1399, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %1473 = shufflevector <8 x half> %1472, <8 x half> %1402, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %1474 = shufflevector <8 x half> %1473, <8 x half> %1405, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %1474, ptr addrspace(3) %623, align 16
  %1475 = shufflevector <1 x half> %1407, <1 x half> %1409, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1476 = shufflevector <8 x half> %1475, <8 x half> %1412, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1477 = shufflevector <8 x half> %1476, <8 x half> %1415, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %1478 = shufflevector <8 x half> %1477, <8 x half> %1418, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %1479 = shufflevector <8 x half> %1478, <8 x half> %1421, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %1480 = shufflevector <8 x half> %1479, <8 x half> %1424, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %1481 = shufflevector <8 x half> %1480, <8 x half> %1427, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %1481, ptr addrspace(3) %624, align 16
  %1482 = addrspacecast ptr addrspace(1) %1278 to ptr
  %1483 = load <1 x half>, ptr %1482, align 2
  %1484 = addrspacecast ptr addrspace(1) %1279 to ptr
  %1485 = load <1 x half>, ptr %1484, align 2
  %1486 = addrspacecast ptr addrspace(1) %1280 to ptr
  %1487 = load <1 x half>, ptr %1486, align 2
  %1488 = shufflevector <1 x half> %1487, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1489 = addrspacecast ptr addrspace(1) %1281 to ptr
  %1490 = load <1 x half>, ptr %1489, align 2
  %1491 = shufflevector <1 x half> %1490, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1492 = addrspacecast ptr addrspace(1) %1282 to ptr
  %1493 = load <1 x half>, ptr %1492, align 2
  %1494 = shufflevector <1 x half> %1493, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1495 = addrspacecast ptr addrspace(1) %1283 to ptr
  %1496 = load <1 x half>, ptr %1495, align 2
  %1497 = shufflevector <1 x half> %1496, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1498 = addrspacecast ptr addrspace(1) %1284 to ptr
  %1499 = load <1 x half>, ptr %1498, align 2
  %1500 = shufflevector <1 x half> %1499, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1501 = addrspacecast ptr addrspace(1) %1285 to ptr
  %1502 = load <1 x half>, ptr %1501, align 2
  %1503 = shufflevector <1 x half> %1502, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1504 = addrspacecast ptr addrspace(1) %1310 to ptr
  %1505 = load <1 x half>, ptr %1504, align 2
  %1506 = addrspacecast ptr addrspace(1) %1311 to ptr
  %1507 = load <1 x half>, ptr %1506, align 2
  %1508 = addrspacecast ptr addrspace(1) %1312 to ptr
  %1509 = load <1 x half>, ptr %1508, align 2
  %1510 = shufflevector <1 x half> %1509, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1511 = addrspacecast ptr addrspace(1) %1313 to ptr
  %1512 = load <1 x half>, ptr %1511, align 2
  %1513 = shufflevector <1 x half> %1512, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1514 = addrspacecast ptr addrspace(1) %1314 to ptr
  %1515 = load <1 x half>, ptr %1514, align 2
  %1516 = shufflevector <1 x half> %1515, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1517 = addrspacecast ptr addrspace(1) %1315 to ptr
  %1518 = load <1 x half>, ptr %1517, align 2
  %1519 = shufflevector <1 x half> %1518, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1520 = addrspacecast ptr addrspace(1) %1316 to ptr
  %1521 = load <1 x half>, ptr %1520, align 2
  %1522 = shufflevector <1 x half> %1521, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1523 = addrspacecast ptr addrspace(1) %1317 to ptr
  %1524 = load <1 x half>, ptr %1523, align 2
  %1525 = shufflevector <1 x half> %1524, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %1526 = load <8 x half>, ptr addrspace(3) %657, align 16
  %1527 = load <8 x half>, ptr addrspace(3) %660, align 16
  %1528 = load <8 x half>, ptr addrspace(3) %663, align 16
  %1529 = load <8 x half>, ptr addrspace(3) %666, align 16
  %1530 = load <8 x half>, ptr addrspace(3) %669, align 16
  %1531 = load <8 x half>, ptr addrspace(3) %672, align 16
  %1532 = load <8 x half>, ptr addrspace(3) %675, align 16
  %1533 = load <8 x half>, ptr addrspace(3) %678, align 16
  %1534 = shufflevector <8 x half> %1526, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1535 = shufflevector <8 x half> %1526, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1536 = shufflevector <8 x half> %1527, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1537 = shufflevector <8 x half> %1527, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1538 = shufflevector <8 x half> %1528, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1539 = shufflevector <8 x half> %1528, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1540 = shufflevector <8 x half> %1529, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1541 = shufflevector <8 x half> %1529, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1542 = shufflevector <8 x half> %1530, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1543 = shufflevector <8 x half> %1530, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1544 = shufflevector <8 x half> %1531, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1545 = shufflevector <8 x half> %1531, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1546 = shufflevector <8 x half> %1532, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1547 = shufflevector <8 x half> %1532, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1548 = shufflevector <8 x half> %1533, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1549 = shufflevector <8 x half> %1533, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1550 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1534, <4 x half> %596, <16 x float> %1455, i32 0, i32 0, i32 0)
  %1551 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1535, <4 x half> %603, <16 x float> %1550, i32 0, i32 0, i32 0)
  %1552 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1536, <4 x half> %610, <16 x float> %1551, i32 0, i32 0, i32 0)
  %1553 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1537, <4 x half> %617, <16 x float> %1552, i32 0, i32 0, i32 0)
  %1554 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1538, <4 x half> %596, <16 x float> %1459, i32 0, i32 0, i32 0)
  %1555 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1539, <4 x half> %603, <16 x float> %1554, i32 0, i32 0, i32 0)
  %1556 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1540, <4 x half> %610, <16 x float> %1555, i32 0, i32 0, i32 0)
  %1557 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1541, <4 x half> %617, <16 x float> %1556, i32 0, i32 0, i32 0)
  %1558 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1542, <4 x half> %596, <16 x float> %1463, i32 0, i32 0, i32 0)
  %1559 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1543, <4 x half> %603, <16 x float> %1558, i32 0, i32 0, i32 0)
  %1560 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1544, <4 x half> %610, <16 x float> %1559, i32 0, i32 0, i32 0)
  %1561 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1545, <4 x half> %617, <16 x float> %1560, i32 0, i32 0, i32 0)
  %1562 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1546, <4 x half> %596, <16 x float> %1467, i32 0, i32 0, i32 0)
  %1563 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1547, <4 x half> %603, <16 x float> %1562, i32 0, i32 0, i32 0)
  %1564 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1548, <4 x half> %610, <16 x float> %1563, i32 0, i32 0, i32 0)
  %1565 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1549, <4 x half> %617, <16 x float> %1564, i32 0, i32 0, i32 0)
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %1566 = shufflevector <1 x half> %1483, <1 x half> %1485, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1567 = shufflevector <8 x half> %1566, <8 x half> %1488, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1568 = shufflevector <8 x half> %1567, <8 x half> %1491, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %1569 = shufflevector <8 x half> %1568, <8 x half> %1494, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %1570 = shufflevector <8 x half> %1569, <8 x half> %1497, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %1571 = shufflevector <8 x half> %1570, <8 x half> %1500, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %1572 = shufflevector <8 x half> %1571, <8 x half> %1503, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %1572, ptr addrspace(3) %623, align 16
  %1573 = shufflevector <1 x half> %1505, <1 x half> %1507, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1574 = shufflevector <8 x half> %1573, <8 x half> %1510, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1575 = shufflevector <8 x half> %1574, <8 x half> %1513, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %1576 = shufflevector <8 x half> %1575, <8 x half> %1516, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %1577 = shufflevector <8 x half> %1576, <8 x half> %1519, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %1578 = shufflevector <8 x half> %1577, <8 x half> %1522, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %1579 = shufflevector <8 x half> %1578, <8 x half> %1525, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %1579, ptr addrspace(3) %624, align 16
  %1580 = addrspacecast ptr addrspace(1) %1286 to ptr
  %1581 = load <1 x half>, ptr %1580, align 2
  %1582 = addrspacecast ptr addrspace(1) %1287 to ptr
  %1583 = load <1 x half>, ptr %1582, align 2
  %1584 = addrspacecast ptr addrspace(1) %1288 to ptr
  %1585 = load <1 x half>, ptr %1584, align 2
  %1586 = shufflevector <1 x half> %1585, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1587 = addrspacecast ptr addrspace(1) %1289 to ptr
  %1588 = load <1 x half>, ptr %1587, align 2
  %1589 = shufflevector <1 x half> %1588, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1590 = addrspacecast ptr addrspace(1) %1290 to ptr
  %1591 = load <1 x half>, ptr %1590, align 2
  %1592 = shufflevector <1 x half> %1591, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1593 = addrspacecast ptr addrspace(1) %1291 to ptr
  %1594 = load <1 x half>, ptr %1593, align 2
  %1595 = shufflevector <1 x half> %1594, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1596 = addrspacecast ptr addrspace(1) %1292 to ptr
  %1597 = load <1 x half>, ptr %1596, align 2
  %1598 = shufflevector <1 x half> %1597, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1599 = addrspacecast ptr addrspace(1) %1293 to ptr
  %1600 = load <1 x half>, ptr %1599, align 2
  %1601 = shufflevector <1 x half> %1600, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1602 = addrspacecast ptr addrspace(1) %1318 to ptr
  %1603 = load <1 x half>, ptr %1602, align 2
  %1604 = addrspacecast ptr addrspace(1) %1319 to ptr
  %1605 = load <1 x half>, ptr %1604, align 2
  %1606 = addrspacecast ptr addrspace(1) %1320 to ptr
  %1607 = load <1 x half>, ptr %1606, align 2
  %1608 = shufflevector <1 x half> %1607, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1609 = addrspacecast ptr addrspace(1) %1321 to ptr
  %1610 = load <1 x half>, ptr %1609, align 2
  %1611 = shufflevector <1 x half> %1610, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1612 = addrspacecast ptr addrspace(1) %1322 to ptr
  %1613 = load <1 x half>, ptr %1612, align 2
  %1614 = shufflevector <1 x half> %1613, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1615 = addrspacecast ptr addrspace(1) %1323 to ptr
  %1616 = load <1 x half>, ptr %1615, align 2
  %1617 = shufflevector <1 x half> %1616, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1618 = addrspacecast ptr addrspace(1) %1324 to ptr
  %1619 = load <1 x half>, ptr %1618, align 2
  %1620 = shufflevector <1 x half> %1619, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1621 = addrspacecast ptr addrspace(1) %1325 to ptr
  %1622 = load <1 x half>, ptr %1621, align 2
  %1623 = shufflevector <1 x half> %1622, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %1624 = load <8 x half>, ptr addrspace(3) %657, align 16
  %1625 = load <8 x half>, ptr addrspace(3) %660, align 16
  %1626 = load <8 x half>, ptr addrspace(3) %663, align 16
  %1627 = load <8 x half>, ptr addrspace(3) %666, align 16
  %1628 = load <8 x half>, ptr addrspace(3) %669, align 16
  %1629 = load <8 x half>, ptr addrspace(3) %672, align 16
  %1630 = load <8 x half>, ptr addrspace(3) %675, align 16
  %1631 = load <8 x half>, ptr addrspace(3) %678, align 16
  %1632 = shufflevector <8 x half> %1624, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1633 = shufflevector <8 x half> %1624, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1634 = shufflevector <8 x half> %1625, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1635 = shufflevector <8 x half> %1625, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1636 = shufflevector <8 x half> %1626, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1637 = shufflevector <8 x half> %1626, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1638 = shufflevector <8 x half> %1627, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1639 = shufflevector <8 x half> %1627, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1640 = shufflevector <8 x half> %1628, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1641 = shufflevector <8 x half> %1628, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1642 = shufflevector <8 x half> %1629, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1643 = shufflevector <8 x half> %1629, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1644 = shufflevector <8 x half> %1630, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1645 = shufflevector <8 x half> %1630, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1646 = shufflevector <8 x half> %1631, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1647 = shufflevector <8 x half> %1631, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1648 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1632, <4 x half> %808, <16 x float> %1553, i32 0, i32 0, i32 0)
  %1649 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1633, <4 x half> %815, <16 x float> %1648, i32 0, i32 0, i32 0)
  %1650 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1634, <4 x half> %822, <16 x float> %1649, i32 0, i32 0, i32 0)
  %1651 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1635, <4 x half> %829, <16 x float> %1650, i32 0, i32 0, i32 0)
  %1652 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1636, <4 x half> %808, <16 x float> %1557, i32 0, i32 0, i32 0)
  %1653 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1637, <4 x half> %815, <16 x float> %1652, i32 0, i32 0, i32 0)
  %1654 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1638, <4 x half> %822, <16 x float> %1653, i32 0, i32 0, i32 0)
  %1655 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1639, <4 x half> %829, <16 x float> %1654, i32 0, i32 0, i32 0)
  %1656 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1640, <4 x half> %808, <16 x float> %1561, i32 0, i32 0, i32 0)
  %1657 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1641, <4 x half> %815, <16 x float> %1656, i32 0, i32 0, i32 0)
  %1658 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1642, <4 x half> %822, <16 x float> %1657, i32 0, i32 0, i32 0)
  %1659 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1643, <4 x half> %829, <16 x float> %1658, i32 0, i32 0, i32 0)
  %1660 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1644, <4 x half> %808, <16 x float> %1565, i32 0, i32 0, i32 0)
  %1661 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1645, <4 x half> %815, <16 x float> %1660, i32 0, i32 0, i32 0)
  %1662 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1646, <4 x half> %822, <16 x float> %1661, i32 0, i32 0, i32 0)
  %1663 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1647, <4 x half> %829, <16 x float> %1662, i32 0, i32 0, i32 0)
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %1664 = shufflevector <1 x half> %1581, <1 x half> %1583, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1665 = shufflevector <8 x half> %1664, <8 x half> %1586, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1666 = shufflevector <8 x half> %1665, <8 x half> %1589, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %1667 = shufflevector <8 x half> %1666, <8 x half> %1592, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %1668 = shufflevector <8 x half> %1667, <8 x half> %1595, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %1669 = shufflevector <8 x half> %1668, <8 x half> %1598, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %1670 = shufflevector <8 x half> %1669, <8 x half> %1601, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %1670, ptr addrspace(3) %623, align 16
  %1671 = shufflevector <1 x half> %1603, <1 x half> %1605, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1672 = shufflevector <8 x half> %1671, <8 x half> %1608, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1673 = shufflevector <8 x half> %1672, <8 x half> %1611, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>
  %1674 = shufflevector <8 x half> %1673, <8 x half> %1614, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>
  %1675 = shufflevector <8 x half> %1674, <8 x half> %1617, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>
  %1676 = shufflevector <8 x half> %1675, <8 x half> %1620, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>
  %1677 = shufflevector <8 x half> %1676, <8 x half> %1623, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  store <8 x half> %1677, ptr addrspace(3) %624, align 16
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %1678 = load <8 x half>, ptr addrspace(3) %657, align 16
  %1679 = load <8 x half>, ptr addrspace(3) %660, align 16
  %1680 = load <8 x half>, ptr addrspace(3) %663, align 16
  %1681 = load <8 x half>, ptr addrspace(3) %666, align 16
  %1682 = load <8 x half>, ptr addrspace(3) %669, align 16
  %1683 = load <8 x half>, ptr addrspace(3) %672, align 16
  %1684 = load <8 x half>, ptr addrspace(3) %675, align 16
  %1685 = load <8 x half>, ptr addrspace(3) %678, align 16
  %1686 = shufflevector <8 x half> %1678, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1687 = shufflevector <8 x half> %1678, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1688 = shufflevector <8 x half> %1679, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1689 = shufflevector <8 x half> %1679, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1690 = shufflevector <8 x half> %1680, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1691 = shufflevector <8 x half> %1680, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1692 = shufflevector <8 x half> %1681, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1693 = shufflevector <8 x half> %1681, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1694 = shufflevector <8 x half> %1682, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1695 = shufflevector <8 x half> %1682, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1696 = shufflevector <8 x half> %1683, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1697 = shufflevector <8 x half> %1683, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1698 = shufflevector <8 x half> %1684, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1699 = shufflevector <8 x half> %1684, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1700 = shufflevector <8 x half> %1685, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1701 = shufflevector <8 x half> %1685, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1702 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1686, <4 x half> %966, <16 x float> %1651, i32 0, i32 0, i32 0)
  %1703 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1687, <4 x half> %973, <16 x float> %1702, i32 0, i32 0, i32 0)
  %1704 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1688, <4 x half> %980, <16 x float> %1703, i32 0, i32 0, i32 0)
  %1705 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1689, <4 x half> %987, <16 x float> %1704, i32 0, i32 0, i32 0)
  %1706 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1690, <4 x half> %966, <16 x float> %1655, i32 0, i32 0, i32 0)
  %1707 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1691, <4 x half> %973, <16 x float> %1706, i32 0, i32 0, i32 0)
  %1708 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1692, <4 x half> %980, <16 x float> %1707, i32 0, i32 0, i32 0)
  %1709 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1693, <4 x half> %987, <16 x float> %1708, i32 0, i32 0, i32 0)
  %1710 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1694, <4 x half> %966, <16 x float> %1659, i32 0, i32 0, i32 0)
  %1711 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1695, <4 x half> %973, <16 x float> %1710, i32 0, i32 0, i32 0)
  %1712 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1696, <4 x half> %980, <16 x float> %1711, i32 0, i32 0, i32 0)
  %1713 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1697, <4 x half> %987, <16 x float> %1712, i32 0, i32 0, i32 0)
  %1714 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1698, <4 x half> %966, <16 x float> %1663, i32 0, i32 0, i32 0)
  %1715 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1699, <4 x half> %973, <16 x float> %1714, i32 0, i32 0, i32 0)
  %1716 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1700, <4 x half> %980, <16 x float> %1715, i32 0, i32 0, i32 0)
  %1717 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1701, <4 x half> %987, <16 x float> %1716, i32 0, i32 0, i32 0)
  %1718 = shufflevector <16 x float> %1705, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %1719 = shufflevector <16 x float> %1705, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %1720 = shufflevector <16 x float> %1705, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1721 = shufflevector <16 x float> %1705, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1722 = shufflevector <16 x float> %1709, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %1723 = shufflevector <16 x float> %1709, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %1724 = shufflevector <16 x float> %1709, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1725 = shufflevector <16 x float> %1709, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1726 = shufflevector <16 x float> %1713, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %1727 = shufflevector <16 x float> %1713, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %1728 = shufflevector <16 x float> %1713, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1729 = shufflevector <16 x float> %1713, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1730 = shufflevector <16 x float> %1717, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %1731 = shufflevector <16 x float> %1717, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %1732 = shufflevector <16 x float> %1717, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1733 = shufflevector <16 x float> %1717, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  br label %1734

1734:                                             ; preds = %1257, %1232
  %1735 = phi <4 x float> [ %1718, %1257 ], [ %1237, %1232 ]
  %1736 = phi <4 x float> [ %1719, %1257 ], [ %1238, %1232 ]
  %1737 = phi <4 x float> [ %1720, %1257 ], [ %1239, %1232 ]
  %1738 = phi <4 x float> [ %1721, %1257 ], [ %1240, %1232 ]
  %1739 = phi <4 x float> [ %1722, %1257 ], [ %1241, %1232 ]
  %1740 = phi <4 x float> [ %1723, %1257 ], [ %1242, %1232 ]
  %1741 = phi <4 x float> [ %1724, %1257 ], [ %1243, %1232 ]
  %1742 = phi <4 x float> [ %1725, %1257 ], [ %1244, %1232 ]
  %1743 = phi <4 x float> [ %1726, %1257 ], [ %1245, %1232 ]
  %1744 = phi <4 x float> [ %1727, %1257 ], [ %1246, %1232 ]
  %1745 = phi <4 x float> [ %1728, %1257 ], [ %1247, %1232 ]
  %1746 = phi <4 x float> [ %1729, %1257 ], [ %1248, %1232 ]
  %1747 = phi <4 x float> [ %1730, %1257 ], [ %1249, %1232 ]
  %1748 = phi <4 x float> [ %1731, %1257 ], [ %1250, %1232 ]
  %1749 = phi <4 x float> [ %1732, %1257 ], [ %1251, %1232 ]
  %1750 = phi <4 x float> [ %1733, %1257 ], [ %1252, %1232 ]
  %1751 = extractelement <4 x float> %1738, i64 0
  %1752 = extractelement <4 x float> %1738, i64 1
  %1753 = tail call float @llvm.maxnum.f32(float %1751, float %1752)
  %1754 = extractelement <4 x float> %1738, i64 2
  %1755 = tail call float @llvm.maxnum.f32(float %1753, float %1754)
  %1756 = extractelement <4 x float> %1738, i64 3
  %1757 = tail call float @llvm.maxnum.f32(float %1755, float %1756)
  %1758 = extractelement <4 x float> %1737, i64 0
  %1759 = tail call float @llvm.maxnum.f32(float %1757, float %1758)
  %1760 = extractelement <4 x float> %1737, i64 1
  %1761 = tail call float @llvm.maxnum.f32(float %1759, float %1760)
  %1762 = extractelement <4 x float> %1737, i64 2
  %1763 = tail call float @llvm.maxnum.f32(float %1761, float %1762)
  %1764 = extractelement <4 x float> %1737, i64 3
  %1765 = tail call float @llvm.maxnum.f32(float %1763, float %1764)
  %1766 = extractelement <4 x float> %1736, i64 0
  %1767 = tail call float @llvm.maxnum.f32(float %1765, float %1766)
  %1768 = extractelement <4 x float> %1736, i64 1
  %1769 = tail call float @llvm.maxnum.f32(float %1767, float %1768)
  %1770 = extractelement <4 x float> %1736, i64 2
  %1771 = tail call float @llvm.maxnum.f32(float %1769, float %1770)
  %1772 = extractelement <4 x float> %1736, i64 3
  %1773 = tail call float @llvm.maxnum.f32(float %1771, float %1772)
  %1774 = extractelement <4 x float> %1735, i64 0
  %1775 = tail call float @llvm.maxnum.f32(float %1773, float %1774)
  %1776 = extractelement <4 x float> %1735, i64 1
  %1777 = tail call float @llvm.maxnum.f32(float %1775, float %1776)
  %1778 = extractelement <4 x float> %1735, i64 2
  %1779 = tail call float @llvm.maxnum.f32(float %1777, float %1778)
  %1780 = extractelement <4 x float> %1735, i64 3
  %1781 = tail call float @llvm.maxnum.f32(float %1779, float %1780)
  %1782 = extractelement <4 x float> %1742, i64 0
  %1783 = tail call float @llvm.maxnum.f32(float %1781, float %1782)
  %1784 = extractelement <4 x float> %1742, i64 1
  %1785 = tail call float @llvm.maxnum.f32(float %1783, float %1784)
  %1786 = extractelement <4 x float> %1742, i64 2
  %1787 = tail call float @llvm.maxnum.f32(float %1785, float %1786)
  %1788 = extractelement <4 x float> %1742, i64 3
  %1789 = tail call float @llvm.maxnum.f32(float %1787, float %1788)
  %1790 = extractelement <4 x float> %1741, i64 0
  %1791 = tail call float @llvm.maxnum.f32(float %1789, float %1790)
  %1792 = extractelement <4 x float> %1741, i64 1
  %1793 = tail call float @llvm.maxnum.f32(float %1791, float %1792)
  %1794 = extractelement <4 x float> %1741, i64 2
  %1795 = tail call float @llvm.maxnum.f32(float %1793, float %1794)
  %1796 = extractelement <4 x float> %1741, i64 3
  %1797 = tail call float @llvm.maxnum.f32(float %1795, float %1796)
  %1798 = extractelement <4 x float> %1740, i64 0
  %1799 = tail call float @llvm.maxnum.f32(float %1797, float %1798)
  %1800 = extractelement <4 x float> %1740, i64 1
  %1801 = tail call float @llvm.maxnum.f32(float %1799, float %1800)
  %1802 = extractelement <4 x float> %1740, i64 2
  %1803 = tail call float @llvm.maxnum.f32(float %1801, float %1802)
  %1804 = extractelement <4 x float> %1740, i64 3
  %1805 = tail call float @llvm.maxnum.f32(float %1803, float %1804)
  %1806 = extractelement <4 x float> %1739, i64 0
  %1807 = tail call float @llvm.maxnum.f32(float %1805, float %1806)
  %1808 = extractelement <4 x float> %1739, i64 1
  %1809 = tail call float @llvm.maxnum.f32(float %1807, float %1808)
  %1810 = extractelement <4 x float> %1739, i64 2
  %1811 = tail call float @llvm.maxnum.f32(float %1809, float %1810)
  %1812 = extractelement <4 x float> %1739, i64 3
  %1813 = tail call float @llvm.maxnum.f32(float %1811, float %1812)
  %1814 = extractelement <4 x float> %1746, i64 0
  %1815 = tail call float @llvm.maxnum.f32(float %1813, float %1814)
  %1816 = extractelement <4 x float> %1746, i64 1
  %1817 = tail call float @llvm.maxnum.f32(float %1815, float %1816)
  %1818 = extractelement <4 x float> %1746, i64 2
  %1819 = tail call float @llvm.maxnum.f32(float %1817, float %1818)
  %1820 = extractelement <4 x float> %1746, i64 3
  %1821 = tail call float @llvm.maxnum.f32(float %1819, float %1820)
  %1822 = extractelement <4 x float> %1745, i64 0
  %1823 = tail call float @llvm.maxnum.f32(float %1821, float %1822)
  %1824 = extractelement <4 x float> %1745, i64 1
  %1825 = tail call float @llvm.maxnum.f32(float %1823, float %1824)
  %1826 = extractelement <4 x float> %1745, i64 2
  %1827 = tail call float @llvm.maxnum.f32(float %1825, float %1826)
  %1828 = extractelement <4 x float> %1745, i64 3
  %1829 = tail call float @llvm.maxnum.f32(float %1827, float %1828)
  %1830 = extractelement <4 x float> %1744, i64 0
  %1831 = tail call float @llvm.maxnum.f32(float %1829, float %1830)
  %1832 = extractelement <4 x float> %1744, i64 1
  %1833 = tail call float @llvm.maxnum.f32(float %1831, float %1832)
  %1834 = extractelement <4 x float> %1744, i64 2
  %1835 = tail call float @llvm.maxnum.f32(float %1833, float %1834)
  %1836 = extractelement <4 x float> %1744, i64 3
  %1837 = tail call float @llvm.maxnum.f32(float %1835, float %1836)
  %1838 = extractelement <4 x float> %1743, i64 0
  %1839 = tail call float @llvm.maxnum.f32(float %1837, float %1838)
  %1840 = extractelement <4 x float> %1743, i64 1
  %1841 = tail call float @llvm.maxnum.f32(float %1839, float %1840)
  %1842 = extractelement <4 x float> %1743, i64 2
  %1843 = tail call float @llvm.maxnum.f32(float %1841, float %1842)
  %1844 = extractelement <4 x float> %1743, i64 3
  %1845 = tail call float @llvm.maxnum.f32(float %1843, float %1844)
  %1846 = extractelement <4 x float> %1750, i64 0
  %1847 = tail call float @llvm.maxnum.f32(float %1845, float %1846)
  %1848 = extractelement <4 x float> %1750, i64 1
  %1849 = tail call float @llvm.maxnum.f32(float %1847, float %1848)
  %1850 = extractelement <4 x float> %1750, i64 2
  %1851 = tail call float @llvm.maxnum.f32(float %1849, float %1850)
  %1852 = extractelement <4 x float> %1750, i64 3
  %1853 = tail call float @llvm.maxnum.f32(float %1851, float %1852)
  %1854 = extractelement <4 x float> %1749, i64 0
  %1855 = tail call float @llvm.maxnum.f32(float %1853, float %1854)
  %1856 = extractelement <4 x float> %1749, i64 1
  %1857 = tail call float @llvm.maxnum.f32(float %1855, float %1856)
  %1858 = extractelement <4 x float> %1749, i64 2
  %1859 = tail call float @llvm.maxnum.f32(float %1857, float %1858)
  %1860 = extractelement <4 x float> %1749, i64 3
  %1861 = tail call float @llvm.maxnum.f32(float %1859, float %1860)
  %1862 = extractelement <4 x float> %1748, i64 0
  %1863 = tail call float @llvm.maxnum.f32(float %1861, float %1862)
  %1864 = extractelement <4 x float> %1748, i64 1
  %1865 = tail call float @llvm.maxnum.f32(float %1863, float %1864)
  %1866 = extractelement <4 x float> %1748, i64 2
  %1867 = tail call float @llvm.maxnum.f32(float %1865, float %1866)
  %1868 = extractelement <4 x float> %1748, i64 3
  %1869 = tail call float @llvm.maxnum.f32(float %1867, float %1868)
  %1870 = extractelement <4 x float> %1747, i64 0
  %1871 = tail call float @llvm.maxnum.f32(float %1869, float %1870)
  %1872 = extractelement <4 x float> %1747, i64 1
  %1873 = tail call float @llvm.maxnum.f32(float %1871, float %1872)
  %1874 = extractelement <4 x float> %1747, i64 2
  %1875 = tail call float @llvm.maxnum.f32(float %1873, float %1874)
  %1876 = extractelement <4 x float> %1747, i64 3
  %1877 = tail call float @llvm.maxnum.f32(float %1875, float %1876)
  %1878 = bitcast float %1877 to i32
  %1879 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %1086, i32 %1878)
  %1880 = bitcast i32 %1879 to float
  %1881 = tail call float @llvm.maxnum.f32(float %1877, float %1880)
  %1882 = tail call float @llvm.maxnum.f32(float %1234, float %1881)
  %1883 = fsub float %1234, %1882
  %1884 = tail call float @llvm.exp2.f32(float %1883)
  %1885 = insertelement <16 x float> poison, float %1884, i64 0
  %1886 = shufflevector <16 x float> %1885, <16 x float> poison, <16 x i32> zeroinitializer
  %1887 = fmul <16 x float> %1256, %1886
  %1888 = fmul <16 x float> %1255, %1886
  %1889 = fmul <16 x float> %1254, %1886
  %1890 = fmul <16 x float> %1253, %1886
  %1891 = or i64 %1233, %278
  %1892 = or i64 %1233, %279
  %1893 = or i64 %1233, %280
  %1894 = or i64 %1233, %281
  %1895 = or i64 %1233, %282
  %1896 = or i64 %1233, %283
  %1897 = or i64 %1233, %284
  %1898 = or i64 %1233, %285
  %1899 = or i64 %1233, %286
  %1900 = or i64 %1233, %287
  %1901 = or i64 %1233, %288
  %1902 = or i64 %1233, %289
  %1903 = or i64 %1233, %290
  %1904 = or i64 %1233, %291
  %1905 = or i64 %1233, %292
  %1906 = or i64 %1233, %293
  %1907 = or i64 %1233, %294
  %1908 = or i64 %1233, %295
  %1909 = or i64 %1233, %296
  %1910 = or i64 %1233, %297
  %1911 = or i64 %1233, %298
  %1912 = or i64 %1233, %299
  %1913 = or i64 %1233, %300
  %1914 = or i64 %1233, %301
  %1915 = or i64 %1233, %302
  %1916 = or i64 %1233, %303
  %1917 = or i64 %1233, %304
  %1918 = or i64 %1233, %305
  %1919 = or i64 %1233, %306
  %1920 = or i64 %1233, %307
  %1921 = or i64 %1233, %308
  %1922 = or i64 %1233, %309
  %1923 = getelementptr half, ptr addrspace(1) %142, i64 %1891
  %1924 = getelementptr half, ptr addrspace(1) %142, i64 %1892
  %1925 = getelementptr half, ptr addrspace(1) %142, i64 %1893
  %1926 = getelementptr half, ptr addrspace(1) %142, i64 %1894
  %1927 = getelementptr half, ptr addrspace(1) %142, i64 %1895
  %1928 = getelementptr half, ptr addrspace(1) %142, i64 %1896
  %1929 = getelementptr half, ptr addrspace(1) %142, i64 %1897
  %1930 = getelementptr half, ptr addrspace(1) %142, i64 %1898
  %1931 = getelementptr half, ptr addrspace(1) %142, i64 %1899
  %1932 = getelementptr half, ptr addrspace(1) %142, i64 %1900
  %1933 = getelementptr half, ptr addrspace(1) %142, i64 %1901
  %1934 = getelementptr half, ptr addrspace(1) %142, i64 %1902
  %1935 = getelementptr half, ptr addrspace(1) %142, i64 %1903
  %1936 = getelementptr half, ptr addrspace(1) %142, i64 %1904
  %1937 = getelementptr half, ptr addrspace(1) %142, i64 %1905
  %1938 = getelementptr half, ptr addrspace(1) %142, i64 %1906
  %1939 = getelementptr half, ptr addrspace(1) %142, i64 %1907
  %1940 = getelementptr half, ptr addrspace(1) %142, i64 %1908
  %1941 = getelementptr half, ptr addrspace(1) %142, i64 %1909
  %1942 = getelementptr half, ptr addrspace(1) %142, i64 %1910
  %1943 = getelementptr half, ptr addrspace(1) %142, i64 %1911
  %1944 = getelementptr half, ptr addrspace(1) %142, i64 %1912
  %1945 = getelementptr half, ptr addrspace(1) %142, i64 %1913
  %1946 = getelementptr half, ptr addrspace(1) %142, i64 %1914
  %1947 = getelementptr half, ptr addrspace(1) %142, i64 %1915
  %1948 = getelementptr half, ptr addrspace(1) %142, i64 %1916
  %1949 = getelementptr half, ptr addrspace(1) %142, i64 %1917
  %1950 = getelementptr half, ptr addrspace(1) %142, i64 %1918
  %1951 = getelementptr half, ptr addrspace(1) %142, i64 %1919
  %1952 = getelementptr half, ptr addrspace(1) %142, i64 %1920
  %1953 = getelementptr half, ptr addrspace(1) %142, i64 %1921
  %1954 = getelementptr half, ptr addrspace(1) %142, i64 %1922
  %1955 = getelementptr half, ptr addrspace(1) %1923, i64 %1082
  %1956 = getelementptr half, ptr addrspace(1) %1924, i64 %1082
  %1957 = getelementptr half, ptr addrspace(1) %1925, i64 %1082
  %1958 = getelementptr half, ptr addrspace(1) %1926, i64 %1082
  %1959 = getelementptr half, ptr addrspace(1) %1927, i64 %1082
  %1960 = getelementptr half, ptr addrspace(1) %1928, i64 %1082
  %1961 = getelementptr half, ptr addrspace(1) %1929, i64 %1082
  %1962 = getelementptr half, ptr addrspace(1) %1930, i64 %1082
  %1963 = getelementptr half, ptr addrspace(1) %1931, i64 %1082
  %1964 = getelementptr half, ptr addrspace(1) %1932, i64 %1082
  %1965 = getelementptr half, ptr addrspace(1) %1933, i64 %1082
  %1966 = getelementptr half, ptr addrspace(1) %1934, i64 %1082
  %1967 = getelementptr half, ptr addrspace(1) %1935, i64 %1082
  %1968 = getelementptr half, ptr addrspace(1) %1936, i64 %1082
  %1969 = getelementptr half, ptr addrspace(1) %1937, i64 %1082
  %1970 = getelementptr half, ptr addrspace(1) %1938, i64 %1082
  %1971 = getelementptr half, ptr addrspace(1) %1939, i64 %1082
  %1972 = getelementptr half, ptr addrspace(1) %1940, i64 %1082
  %1973 = getelementptr half, ptr addrspace(1) %1941, i64 %1082
  %1974 = getelementptr half, ptr addrspace(1) %1942, i64 %1082
  %1975 = getelementptr half, ptr addrspace(1) %1943, i64 %1082
  %1976 = getelementptr half, ptr addrspace(1) %1944, i64 %1082
  %1977 = getelementptr half, ptr addrspace(1) %1945, i64 %1082
  %1978 = getelementptr half, ptr addrspace(1) %1946, i64 %1082
  %1979 = getelementptr half, ptr addrspace(1) %1947, i64 %1082
  %1980 = getelementptr half, ptr addrspace(1) %1948, i64 %1082
  %1981 = getelementptr half, ptr addrspace(1) %1949, i64 %1082
  %1982 = getelementptr half, ptr addrspace(1) %1950, i64 %1082
  %1983 = getelementptr half, ptr addrspace(1) %1951, i64 %1082
  %1984 = getelementptr half, ptr addrspace(1) %1952, i64 %1082
  %1985 = getelementptr half, ptr addrspace(1) %1953, i64 %1082
  %1986 = getelementptr half, ptr addrspace(1) %1954, i64 %1082
  %1987 = getelementptr half, ptr addrspace(1) %1923, i64 %1083
  %1988 = getelementptr half, ptr addrspace(1) %1924, i64 %1083
  %1989 = getelementptr half, ptr addrspace(1) %1925, i64 %1083
  %1990 = getelementptr half, ptr addrspace(1) %1926, i64 %1083
  %1991 = getelementptr half, ptr addrspace(1) %1927, i64 %1083
  %1992 = getelementptr half, ptr addrspace(1) %1928, i64 %1083
  %1993 = getelementptr half, ptr addrspace(1) %1929, i64 %1083
  %1994 = getelementptr half, ptr addrspace(1) %1930, i64 %1083
  %1995 = getelementptr half, ptr addrspace(1) %1931, i64 %1083
  %1996 = getelementptr half, ptr addrspace(1) %1932, i64 %1083
  %1997 = getelementptr half, ptr addrspace(1) %1933, i64 %1083
  %1998 = getelementptr half, ptr addrspace(1) %1934, i64 %1083
  %1999 = getelementptr half, ptr addrspace(1) %1935, i64 %1083
  %2000 = getelementptr half, ptr addrspace(1) %1936, i64 %1083
  %2001 = getelementptr half, ptr addrspace(1) %1937, i64 %1083
  %2002 = getelementptr half, ptr addrspace(1) %1938, i64 %1083
  %2003 = getelementptr half, ptr addrspace(1) %1939, i64 %1083
  %2004 = getelementptr half, ptr addrspace(1) %1940, i64 %1083
  %2005 = getelementptr half, ptr addrspace(1) %1941, i64 %1083
  %2006 = getelementptr half, ptr addrspace(1) %1942, i64 %1083
  %2007 = getelementptr half, ptr addrspace(1) %1943, i64 %1083
  %2008 = getelementptr half, ptr addrspace(1) %1944, i64 %1083
  %2009 = getelementptr half, ptr addrspace(1) %1945, i64 %1083
  %2010 = getelementptr half, ptr addrspace(1) %1946, i64 %1083
  %2011 = getelementptr half, ptr addrspace(1) %1947, i64 %1083
  %2012 = getelementptr half, ptr addrspace(1) %1948, i64 %1083
  %2013 = getelementptr half, ptr addrspace(1) %1949, i64 %1083
  %2014 = getelementptr half, ptr addrspace(1) %1950, i64 %1083
  %2015 = getelementptr half, ptr addrspace(1) %1951, i64 %1083
  %2016 = getelementptr half, ptr addrspace(1) %1952, i64 %1083
  %2017 = getelementptr half, ptr addrspace(1) %1953, i64 %1083
  %2018 = getelementptr half, ptr addrspace(1) %1954, i64 %1083
  %2019 = insertelement <4 x float> poison, float %1882, i64 0
  %2020 = shufflevector <4 x float> %2019, <4 x float> poison, <4 x i32> zeroinitializer
  %2021 = fsub <4 x float> %1738, %2020
  %2022 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2021)
  %2023 = fptrunc <4 x float> %2022 to <4 x half>
  %2024 = fsub <4 x float> %1737, %2020
  %2025 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2024)
  %2026 = fptrunc <4 x float> %2025 to <4 x half>
  %2027 = fsub <4 x float> %1736, %2020
  %2028 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2027)
  %2029 = fptrunc <4 x float> %2028 to <4 x half>
  %2030 = fsub <4 x float> %1735, %2020
  %2031 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2030)
  %2032 = fptrunc <4 x float> %2031 to <4 x half>
  %2033 = fsub <4 x float> %1742, %2020
  %2034 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2033)
  %2035 = fptrunc <4 x float> %2034 to <4 x half>
  %2036 = fsub <4 x float> %1741, %2020
  %2037 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2036)
  %2038 = fptrunc <4 x float> %2037 to <4 x half>
  %2039 = fsub <4 x float> %1740, %2020
  %2040 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2039)
  %2041 = fptrunc <4 x float> %2040 to <4 x half>
  %2042 = fsub <4 x float> %1739, %2020
  %2043 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2042)
  %2044 = fptrunc <4 x float> %2043 to <4 x half>
  %2045 = fsub <4 x float> %1746, %2020
  %2046 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2045)
  %2047 = fptrunc <4 x float> %2046 to <4 x half>
  %2048 = fsub <4 x float> %1745, %2020
  %2049 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2048)
  %2050 = fptrunc <4 x float> %2049 to <4 x half>
  %2051 = fsub <4 x float> %1744, %2020
  %2052 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2051)
  %2053 = fptrunc <4 x float> %2052 to <4 x half>
  %2054 = fsub <4 x float> %1743, %2020
  %2055 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2054)
  %2056 = fptrunc <4 x float> %2055 to <4 x half>
  %2057 = fsub <4 x float> %1750, %2020
  %2058 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2057)
  %2059 = fptrunc <4 x float> %2058 to <4 x half>
  %2060 = fsub <4 x float> %1749, %2020
  %2061 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2060)
  %2062 = fptrunc <4 x float> %2061 to <4 x half>
  %2063 = fsub <4 x float> %1748, %2020
  %2064 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2063)
  %2065 = fptrunc <4 x float> %2064 to <4 x half>
  %2066 = fsub <4 x float> %1747, %2020
  %2067 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2066)
  %2068 = fptrunc <4 x float> %2067 to <4 x half>
  %2069 = addrspacecast ptr addrspace(1) %1955 to ptr
  %2070 = load <1 x half>, ptr %2069, align 2
  %2071 = addrspacecast ptr addrspace(1) %1956 to ptr
  %2072 = load <1 x half>, ptr %2071, align 2
  %2073 = addrspacecast ptr addrspace(1) %1957 to ptr
  %2074 = load <1 x half>, ptr %2073, align 2
  %2075 = shufflevector <1 x half> %2074, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2076 = addrspacecast ptr addrspace(1) %1958 to ptr
  %2077 = load <1 x half>, ptr %2076, align 2
  %2078 = shufflevector <1 x half> %2077, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2079 = addrspacecast ptr addrspace(1) %1959 to ptr
  %2080 = load <1 x half>, ptr %2079, align 2
  %2081 = addrspacecast ptr addrspace(1) %1960 to ptr
  %2082 = load <1 x half>, ptr %2081, align 2
  %2083 = addrspacecast ptr addrspace(1) %1961 to ptr
  %2084 = load <1 x half>, ptr %2083, align 2
  %2085 = shufflevector <1 x half> %2084, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2086 = addrspacecast ptr addrspace(1) %1962 to ptr
  %2087 = load <1 x half>, ptr %2086, align 2
  %2088 = shufflevector <1 x half> %2087, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2089 = addrspacecast ptr addrspace(1) %1987 to ptr
  %2090 = load <1 x half>, ptr %2089, align 2
  %2091 = addrspacecast ptr addrspace(1) %1988 to ptr
  %2092 = load <1 x half>, ptr %2091, align 2
  %2093 = addrspacecast ptr addrspace(1) %1989 to ptr
  %2094 = load <1 x half>, ptr %2093, align 2
  %2095 = shufflevector <1 x half> %2094, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2096 = addrspacecast ptr addrspace(1) %1990 to ptr
  %2097 = load <1 x half>, ptr %2096, align 2
  %2098 = shufflevector <1 x half> %2097, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2099 = addrspacecast ptr addrspace(1) %1991 to ptr
  %2100 = load <1 x half>, ptr %2099, align 2
  %2101 = addrspacecast ptr addrspace(1) %1992 to ptr
  %2102 = load <1 x half>, ptr %2101, align 2
  %2103 = addrspacecast ptr addrspace(1) %1993 to ptr
  %2104 = load <1 x half>, ptr %2103, align 2
  %2105 = shufflevector <1 x half> %2104, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2106 = addrspacecast ptr addrspace(1) %1994 to ptr
  %2107 = load <1 x half>, ptr %2106, align 2
  %2108 = shufflevector <1 x half> %2107, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2109 = addrspacecast ptr addrspace(1) %1963 to ptr
  %2110 = load <1 x half>, ptr %2109, align 2
  %2111 = addrspacecast ptr addrspace(1) %1964 to ptr
  %2112 = load <1 x half>, ptr %2111, align 2
  %2113 = addrspacecast ptr addrspace(1) %1965 to ptr
  %2114 = load <1 x half>, ptr %2113, align 2
  %2115 = shufflevector <1 x half> %2114, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2116 = addrspacecast ptr addrspace(1) %1966 to ptr
  %2117 = load <1 x half>, ptr %2116, align 2
  %2118 = shufflevector <1 x half> %2117, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2119 = addrspacecast ptr addrspace(1) %1967 to ptr
  %2120 = load <1 x half>, ptr %2119, align 2
  %2121 = addrspacecast ptr addrspace(1) %1968 to ptr
  %2122 = load <1 x half>, ptr %2121, align 2
  %2123 = addrspacecast ptr addrspace(1) %1969 to ptr
  %2124 = load <1 x half>, ptr %2123, align 2
  %2125 = shufflevector <1 x half> %2124, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2126 = addrspacecast ptr addrspace(1) %1970 to ptr
  %2127 = load <1 x half>, ptr %2126, align 2
  %2128 = shufflevector <1 x half> %2127, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2129 = addrspacecast ptr addrspace(1) %1995 to ptr
  %2130 = load <1 x half>, ptr %2129, align 2
  %2131 = addrspacecast ptr addrspace(1) %1996 to ptr
  %2132 = load <1 x half>, ptr %2131, align 2
  %2133 = addrspacecast ptr addrspace(1) %1997 to ptr
  %2134 = load <1 x half>, ptr %2133, align 2
  %2135 = shufflevector <1 x half> %2134, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2136 = addrspacecast ptr addrspace(1) %1998 to ptr
  %2137 = load <1 x half>, ptr %2136, align 2
  %2138 = shufflevector <1 x half> %2137, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2139 = addrspacecast ptr addrspace(1) %1999 to ptr
  %2140 = load <1 x half>, ptr %2139, align 2
  %2141 = addrspacecast ptr addrspace(1) %2000 to ptr
  %2142 = load <1 x half>, ptr %2141, align 2
  %2143 = addrspacecast ptr addrspace(1) %2001 to ptr
  %2144 = load <1 x half>, ptr %2143, align 2
  %2145 = shufflevector <1 x half> %2144, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2146 = addrspacecast ptr addrspace(1) %2002 to ptr
  %2147 = load <1 x half>, ptr %2146, align 2
  %2148 = shufflevector <1 x half> %2147, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2149 = addrspacecast ptr addrspace(1) %1971 to ptr
  %2150 = load <1 x half>, ptr %2149, align 2
  %2151 = addrspacecast ptr addrspace(1) %1972 to ptr
  %2152 = load <1 x half>, ptr %2151, align 2
  %2153 = addrspacecast ptr addrspace(1) %1973 to ptr
  %2154 = load <1 x half>, ptr %2153, align 2
  %2155 = shufflevector <1 x half> %2154, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2156 = addrspacecast ptr addrspace(1) %1974 to ptr
  %2157 = load <1 x half>, ptr %2156, align 2
  %2158 = shufflevector <1 x half> %2157, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2159 = addrspacecast ptr addrspace(1) %1975 to ptr
  %2160 = load <1 x half>, ptr %2159, align 2
  %2161 = addrspacecast ptr addrspace(1) %1976 to ptr
  %2162 = load <1 x half>, ptr %2161, align 2
  %2163 = addrspacecast ptr addrspace(1) %1977 to ptr
  %2164 = load <1 x half>, ptr %2163, align 2
  %2165 = shufflevector <1 x half> %2164, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2166 = addrspacecast ptr addrspace(1) %1978 to ptr
  %2167 = load <1 x half>, ptr %2166, align 2
  %2168 = shufflevector <1 x half> %2167, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2169 = addrspacecast ptr addrspace(1) %2003 to ptr
  %2170 = load <1 x half>, ptr %2169, align 2
  %2171 = addrspacecast ptr addrspace(1) %2004 to ptr
  %2172 = load <1 x half>, ptr %2171, align 2
  %2173 = addrspacecast ptr addrspace(1) %2005 to ptr
  %2174 = load <1 x half>, ptr %2173, align 2
  %2175 = shufflevector <1 x half> %2174, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2176 = addrspacecast ptr addrspace(1) %2006 to ptr
  %2177 = load <1 x half>, ptr %2176, align 2
  %2178 = shufflevector <1 x half> %2177, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2179 = addrspacecast ptr addrspace(1) %2007 to ptr
  %2180 = load <1 x half>, ptr %2179, align 2
  %2181 = addrspacecast ptr addrspace(1) %2008 to ptr
  %2182 = load <1 x half>, ptr %2181, align 2
  %2183 = addrspacecast ptr addrspace(1) %2009 to ptr
  %2184 = load <1 x half>, ptr %2183, align 2
  %2185 = shufflevector <1 x half> %2184, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2186 = addrspacecast ptr addrspace(1) %2010 to ptr
  %2187 = load <1 x half>, ptr %2186, align 2
  %2188 = shufflevector <1 x half> %2187, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2189 = addrspacecast ptr addrspace(1) %1979 to ptr
  %2190 = load <1 x half>, ptr %2189, align 2
  %2191 = addrspacecast ptr addrspace(1) %1980 to ptr
  %2192 = load <1 x half>, ptr %2191, align 2
  %2193 = addrspacecast ptr addrspace(1) %1981 to ptr
  %2194 = load <1 x half>, ptr %2193, align 2
  %2195 = shufflevector <1 x half> %2194, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2196 = addrspacecast ptr addrspace(1) %1982 to ptr
  %2197 = load <1 x half>, ptr %2196, align 2
  %2198 = shufflevector <1 x half> %2197, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2199 = addrspacecast ptr addrspace(1) %1983 to ptr
  %2200 = load <1 x half>, ptr %2199, align 2
  %2201 = addrspacecast ptr addrspace(1) %1984 to ptr
  %2202 = load <1 x half>, ptr %2201, align 2
  %2203 = addrspacecast ptr addrspace(1) %1985 to ptr
  %2204 = load <1 x half>, ptr %2203, align 2
  %2205 = shufflevector <1 x half> %2204, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2206 = addrspacecast ptr addrspace(1) %1986 to ptr
  %2207 = load <1 x half>, ptr %2206, align 2
  %2208 = shufflevector <1 x half> %2207, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2209 = addrspacecast ptr addrspace(1) %2011 to ptr
  %2210 = load <1 x half>, ptr %2209, align 2
  %2211 = addrspacecast ptr addrspace(1) %2012 to ptr
  %2212 = load <1 x half>, ptr %2211, align 2
  %2213 = addrspacecast ptr addrspace(1) %2013 to ptr
  %2214 = load <1 x half>, ptr %2213, align 2
  %2215 = shufflevector <1 x half> %2214, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2216 = addrspacecast ptr addrspace(1) %2014 to ptr
  %2217 = load <1 x half>, ptr %2216, align 2
  %2218 = shufflevector <1 x half> %2217, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2219 = addrspacecast ptr addrspace(1) %2015 to ptr
  %2220 = load <1 x half>, ptr %2219, align 2
  %2221 = addrspacecast ptr addrspace(1) %2016 to ptr
  %2222 = load <1 x half>, ptr %2221, align 2
  %2223 = addrspacecast ptr addrspace(1) %2017 to ptr
  %2224 = load <1 x half>, ptr %2223, align 2
  %2225 = shufflevector <1 x half> %2224, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2226 = addrspacecast ptr addrspace(1) %2018 to ptr
  %2227 = load <1 x half>, ptr %2226, align 2
  %2228 = shufflevector <1 x half> %2227, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %2229 = shufflevector <1 x half> %2070, <1 x half> %2072, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2230 = shufflevector <4 x half> %2229, <4 x half> %2075, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2231 = shufflevector <4 x half> %2230, <4 x half> %2078, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2231, ptr addrspace(3) %1092, align 8
  %2232 = shufflevector <1 x half> %2080, <1 x half> %2082, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2233 = shufflevector <4 x half> %2232, <4 x half> %2085, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2234 = shufflevector <4 x half> %2233, <4 x half> %2088, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2234, ptr addrspace(3) %1096, align 8
  %2235 = shufflevector <1 x half> %2090, <1 x half> %2092, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2236 = shufflevector <4 x half> %2235, <4 x half> %2095, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2237 = shufflevector <4 x half> %2236, <4 x half> %2098, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2237, ptr addrspace(3) %1097, align 8
  %2238 = shufflevector <1 x half> %2100, <1 x half> %2102, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2239 = shufflevector <4 x half> %2238, <4 x half> %2105, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2240 = shufflevector <4 x half> %2239, <4 x half> %2108, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2240, ptr addrspace(3) %1098, align 8
  %2241 = shufflevector <1 x half> %2110, <1 x half> %2112, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2242 = shufflevector <4 x half> %2241, <4 x half> %2115, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2243 = shufflevector <4 x half> %2242, <4 x half> %2118, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2243, ptr addrspace(3) %1099, align 8
  %2244 = shufflevector <1 x half> %2120, <1 x half> %2122, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2245 = shufflevector <4 x half> %2244, <4 x half> %2125, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2246 = shufflevector <4 x half> %2245, <4 x half> %2128, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2246, ptr addrspace(3) %1100, align 8
  %2247 = shufflevector <1 x half> %2130, <1 x half> %2132, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2248 = shufflevector <4 x half> %2247, <4 x half> %2135, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2249 = shufflevector <4 x half> %2248, <4 x half> %2138, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2249, ptr addrspace(3) %1101, align 8
  %2250 = shufflevector <1 x half> %2140, <1 x half> %2142, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2251 = shufflevector <4 x half> %2250, <4 x half> %2145, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2252 = shufflevector <4 x half> %2251, <4 x half> %2148, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2252, ptr addrspace(3) %1102, align 8
  %2253 = shufflevector <1 x half> %2150, <1 x half> %2152, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2254 = shufflevector <4 x half> %2253, <4 x half> %2155, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2255 = shufflevector <4 x half> %2254, <4 x half> %2158, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2255, ptr addrspace(3) %1103, align 8
  %2256 = shufflevector <1 x half> %2160, <1 x half> %2162, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2257 = shufflevector <4 x half> %2256, <4 x half> %2165, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2258 = shufflevector <4 x half> %2257, <4 x half> %2168, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2258, ptr addrspace(3) %1104, align 8
  %2259 = shufflevector <1 x half> %2170, <1 x half> %2172, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2260 = shufflevector <4 x half> %2259, <4 x half> %2175, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2261 = shufflevector <4 x half> %2260, <4 x half> %2178, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2261, ptr addrspace(3) %1105, align 8
  %2262 = shufflevector <1 x half> %2180, <1 x half> %2182, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2263 = shufflevector <4 x half> %2262, <4 x half> %2185, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2264 = shufflevector <4 x half> %2263, <4 x half> %2188, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2264, ptr addrspace(3) %1106, align 8
  %2265 = shufflevector <1 x half> %2190, <1 x half> %2192, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2266 = shufflevector <4 x half> %2265, <4 x half> %2195, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2267 = shufflevector <4 x half> %2266, <4 x half> %2198, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2267, ptr addrspace(3) %1107, align 8
  %2268 = shufflevector <1 x half> %2200, <1 x half> %2202, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2269 = shufflevector <4 x half> %2268, <4 x half> %2205, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2270 = shufflevector <4 x half> %2269, <4 x half> %2208, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2270, ptr addrspace(3) %1108, align 8
  %2271 = shufflevector <1 x half> %2210, <1 x half> %2212, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2272 = shufflevector <4 x half> %2271, <4 x half> %2215, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2273 = shufflevector <4 x half> %2272, <4 x half> %2218, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2273, ptr addrspace(3) %1109, align 8
  %2274 = shufflevector <1 x half> %2220, <1 x half> %2222, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %2275 = shufflevector <4 x half> %2274, <4 x half> %2225, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %2276 = shufflevector <4 x half> %2275, <4 x half> %2228, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x half> %2276, ptr addrspace(3) %1110, align 8
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %2277 = load <4 x half>, ptr addrspace(3) %1137, align 8
  %2278 = load <4 x half>, ptr addrspace(3) %1139, align 8
  %2279 = load <4 x half>, ptr addrspace(3) %1141, align 8
  %2280 = load <4 x half>, ptr addrspace(3) %1143, align 8
  %2281 = load <4 x half>, ptr addrspace(3) %1145, align 8
  %2282 = load <4 x half>, ptr addrspace(3) %1147, align 8
  %2283 = load <4 x half>, ptr addrspace(3) %1149, align 8
  %2284 = load <4 x half>, ptr addrspace(3) %1151, align 8
  %2285 = load <4 x half>, ptr addrspace(3) %1153, align 8
  %2286 = load <4 x half>, ptr addrspace(3) %1155, align 8
  %2287 = load <4 x half>, ptr addrspace(3) %1157, align 8
  %2288 = load <4 x half>, ptr addrspace(3) %1159, align 8
  %2289 = load <4 x half>, ptr addrspace(3) %1161, align 8
  %2290 = load <4 x half>, ptr addrspace(3) %1163, align 8
  %2291 = load <4 x half>, ptr addrspace(3) %1165, align 8
  %2292 = load <4 x half>, ptr addrspace(3) %1167, align 8
  %2293 = load <4 x half>, ptr addrspace(3) %1168, align 8
  %2294 = load <4 x half>, ptr addrspace(3) %1169, align 8
  %2295 = load <4 x half>, ptr addrspace(3) %1170, align 8
  %2296 = load <4 x half>, ptr addrspace(3) %1171, align 8
  %2297 = load <4 x half>, ptr addrspace(3) %1172, align 8
  %2298 = load <4 x half>, ptr addrspace(3) %1173, align 8
  %2299 = load <4 x half>, ptr addrspace(3) %1174, align 8
  %2300 = load <4 x half>, ptr addrspace(3) %1175, align 8
  %2301 = load <4 x half>, ptr addrspace(3) %1176, align 8
  %2302 = load <4 x half>, ptr addrspace(3) %1177, align 8
  %2303 = load <4 x half>, ptr addrspace(3) %1178, align 8
  %2304 = load <4 x half>, ptr addrspace(3) %1179, align 8
  %2305 = load <4 x half>, ptr addrspace(3) %1180, align 8
  %2306 = load <4 x half>, ptr addrspace(3) %1181, align 8
  %2307 = load <4 x half>, ptr addrspace(3) %1182, align 8
  %2308 = load <4 x half>, ptr addrspace(3) %1183, align 8
  %2309 = load <4 x half>, ptr addrspace(3) %1184, align 8
  %2310 = load <4 x half>, ptr addrspace(3) %1185, align 8
  %2311 = load <4 x half>, ptr addrspace(3) %1186, align 8
  %2312 = load <4 x half>, ptr addrspace(3) %1187, align 8
  %2313 = load <4 x half>, ptr addrspace(3) %1188, align 8
  %2314 = load <4 x half>, ptr addrspace(3) %1189, align 8
  %2315 = load <4 x half>, ptr addrspace(3) %1190, align 8
  %2316 = load <4 x half>, ptr addrspace(3) %1191, align 8
  %2317 = load <4 x half>, ptr addrspace(3) %1192, align 8
  %2318 = load <4 x half>, ptr addrspace(3) %1193, align 8
  %2319 = load <4 x half>, ptr addrspace(3) %1194, align 8
  %2320 = load <4 x half>, ptr addrspace(3) %1195, align 8
  %2321 = load <4 x half>, ptr addrspace(3) %1196, align 8
  %2322 = load <4 x half>, ptr addrspace(3) %1197, align 8
  %2323 = load <4 x half>, ptr addrspace(3) %1198, align 8
  %2324 = load <4 x half>, ptr addrspace(3) %1199, align 8
  %2325 = load <4 x half>, ptr addrspace(3) %1200, align 8
  %2326 = load <4 x half>, ptr addrspace(3) %1201, align 8
  %2327 = load <4 x half>, ptr addrspace(3) %1202, align 8
  %2328 = load <4 x half>, ptr addrspace(3) %1203, align 8
  %2329 = load <4 x half>, ptr addrspace(3) %1204, align 8
  %2330 = load <4 x half>, ptr addrspace(3) %1205, align 8
  %2331 = load <4 x half>, ptr addrspace(3) %1206, align 8
  %2332 = load <4 x half>, ptr addrspace(3) %1207, align 8
  %2333 = load <4 x half>, ptr addrspace(3) %1208, align 8
  %2334 = load <4 x half>, ptr addrspace(3) %1209, align 8
  %2335 = load <4 x half>, ptr addrspace(3) %1210, align 8
  %2336 = load <4 x half>, ptr addrspace(3) %1211, align 8
  %2337 = load <4 x half>, ptr addrspace(3) %1212, align 8
  %2338 = load <4 x half>, ptr addrspace(3) %1213, align 8
  %2339 = load <4 x half>, ptr addrspace(3) %1214, align 8
  %2340 = load <4 x half>, ptr addrspace(3) %1215, align 8
  %2341 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2277, <4 x half> %2023, <16 x float> %1887, i32 0, i32 0, i32 0)
  %2342 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2278, <4 x half> %2026, <16 x float> %2341, i32 0, i32 0, i32 0)
  %2343 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2279, <4 x half> %2029, <16 x float> %2342, i32 0, i32 0, i32 0)
  %2344 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2280, <4 x half> %2032, <16 x float> %2343, i32 0, i32 0, i32 0)
  %2345 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2281, <4 x half> %2023, <16 x float> %1888, i32 0, i32 0, i32 0)
  %2346 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2282, <4 x half> %2026, <16 x float> %2345, i32 0, i32 0, i32 0)
  %2347 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2283, <4 x half> %2029, <16 x float> %2346, i32 0, i32 0, i32 0)
  %2348 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2284, <4 x half> %2032, <16 x float> %2347, i32 0, i32 0, i32 0)
  %2349 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2285, <4 x half> %2023, <16 x float> %1889, i32 0, i32 0, i32 0)
  %2350 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2286, <4 x half> %2026, <16 x float> %2349, i32 0, i32 0, i32 0)
  %2351 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2287, <4 x half> %2029, <16 x float> %2350, i32 0, i32 0, i32 0)
  %2352 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2288, <4 x half> %2032, <16 x float> %2351, i32 0, i32 0, i32 0)
  %2353 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2289, <4 x half> %2023, <16 x float> %1890, i32 0, i32 0, i32 0)
  %2354 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2290, <4 x half> %2026, <16 x float> %2353, i32 0, i32 0, i32 0)
  %2355 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2291, <4 x half> %2029, <16 x float> %2354, i32 0, i32 0, i32 0)
  %2356 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2292, <4 x half> %2032, <16 x float> %2355, i32 0, i32 0, i32 0)
  %2357 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2293, <4 x half> %2035, <16 x float> %2344, i32 0, i32 0, i32 0)
  %2358 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2294, <4 x half> %2038, <16 x float> %2357, i32 0, i32 0, i32 0)
  %2359 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2295, <4 x half> %2041, <16 x float> %2358, i32 0, i32 0, i32 0)
  %2360 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2296, <4 x half> %2044, <16 x float> %2359, i32 0, i32 0, i32 0)
  %2361 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2297, <4 x half> %2035, <16 x float> %2348, i32 0, i32 0, i32 0)
  %2362 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2298, <4 x half> %2038, <16 x float> %2361, i32 0, i32 0, i32 0)
  %2363 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2299, <4 x half> %2041, <16 x float> %2362, i32 0, i32 0, i32 0)
  %2364 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2300, <4 x half> %2044, <16 x float> %2363, i32 0, i32 0, i32 0)
  %2365 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2301, <4 x half> %2035, <16 x float> %2352, i32 0, i32 0, i32 0)
  %2366 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2302, <4 x half> %2038, <16 x float> %2365, i32 0, i32 0, i32 0)
  %2367 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2303, <4 x half> %2041, <16 x float> %2366, i32 0, i32 0, i32 0)
  %2368 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2304, <4 x half> %2044, <16 x float> %2367, i32 0, i32 0, i32 0)
  %2369 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2305, <4 x half> %2035, <16 x float> %2356, i32 0, i32 0, i32 0)
  %2370 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2306, <4 x half> %2038, <16 x float> %2369, i32 0, i32 0, i32 0)
  %2371 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2307, <4 x half> %2041, <16 x float> %2370, i32 0, i32 0, i32 0)
  %2372 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2308, <4 x half> %2044, <16 x float> %2371, i32 0, i32 0, i32 0)
  %2373 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2309, <4 x half> %2047, <16 x float> %2360, i32 0, i32 0, i32 0)
  %2374 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2310, <4 x half> %2050, <16 x float> %2373, i32 0, i32 0, i32 0)
  %2375 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2311, <4 x half> %2053, <16 x float> %2374, i32 0, i32 0, i32 0)
  %2376 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2312, <4 x half> %2056, <16 x float> %2375, i32 0, i32 0, i32 0)
  %2377 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2313, <4 x half> %2047, <16 x float> %2364, i32 0, i32 0, i32 0)
  %2378 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2314, <4 x half> %2050, <16 x float> %2377, i32 0, i32 0, i32 0)
  %2379 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2315, <4 x half> %2053, <16 x float> %2378, i32 0, i32 0, i32 0)
  %2380 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2316, <4 x half> %2056, <16 x float> %2379, i32 0, i32 0, i32 0)
  %2381 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2317, <4 x half> %2047, <16 x float> %2368, i32 0, i32 0, i32 0)
  %2382 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2318, <4 x half> %2050, <16 x float> %2381, i32 0, i32 0, i32 0)
  %2383 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2319, <4 x half> %2053, <16 x float> %2382, i32 0, i32 0, i32 0)
  %2384 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2320, <4 x half> %2056, <16 x float> %2383, i32 0, i32 0, i32 0)
  %2385 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2321, <4 x half> %2047, <16 x float> %2372, i32 0, i32 0, i32 0)
  %2386 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2322, <4 x half> %2050, <16 x float> %2385, i32 0, i32 0, i32 0)
  %2387 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2323, <4 x half> %2053, <16 x float> %2386, i32 0, i32 0, i32 0)
  %2388 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2324, <4 x half> %2056, <16 x float> %2387, i32 0, i32 0, i32 0)
  %2389 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2325, <4 x half> %2059, <16 x float> %2376, i32 0, i32 0, i32 0)
  %2390 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2326, <4 x half> %2062, <16 x float> %2389, i32 0, i32 0, i32 0)
  %2391 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2327, <4 x half> %2065, <16 x float> %2390, i32 0, i32 0, i32 0)
  %2392 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2328, <4 x half> %2068, <16 x float> %2391, i32 0, i32 0, i32 0)
  %2393 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2329, <4 x half> %2059, <16 x float> %2380, i32 0, i32 0, i32 0)
  %2394 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2330, <4 x half> %2062, <16 x float> %2393, i32 0, i32 0, i32 0)
  %2395 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2331, <4 x half> %2065, <16 x float> %2394, i32 0, i32 0, i32 0)
  %2396 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2332, <4 x half> %2068, <16 x float> %2395, i32 0, i32 0, i32 0)
  %2397 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2333, <4 x half> %2059, <16 x float> %2384, i32 0, i32 0, i32 0)
  %2398 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2334, <4 x half> %2062, <16 x float> %2397, i32 0, i32 0, i32 0)
  %2399 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2335, <4 x half> %2065, <16 x float> %2398, i32 0, i32 0, i32 0)
  %2400 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2336, <4 x half> %2068, <16 x float> %2399, i32 0, i32 0, i32 0)
  %2401 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2337, <4 x half> %2059, <16 x float> %2388, i32 0, i32 0, i32 0)
  %2402 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2338, <4 x half> %2062, <16 x float> %2401, i32 0, i32 0, i32 0)
  %2403 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2339, <4 x half> %2065, <16 x float> %2402, i32 0, i32 0, i32 0)
  %2404 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2340, <4 x half> %2068, <16 x float> %2403, i32 0, i32 0, i32 0)
  %shift = shufflevector <4 x float> %2022, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2405 = fadd <4 x float> %2022, %shift
  %shift390 = shufflevector <4 x float> %2022, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2406 = fadd <4 x float> %shift390, %2405
  %shift391 = shufflevector <4 x float> %2022, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2407 = fadd <4 x float> %shift391, %2406
  %2408 = fadd <4 x float> %2025, %2407
  %shift392 = shufflevector <4 x float> %2025, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2409 = fadd <4 x float> %shift392, %2408
  %shift393 = shufflevector <4 x float> %2025, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2410 = fadd <4 x float> %shift393, %2409
  %shift394 = shufflevector <4 x float> %2025, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2411 = fadd <4 x float> %shift394, %2410
  %2412 = fadd <4 x float> %2028, %2411
  %shift395 = shufflevector <4 x float> %2028, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2413 = fadd <4 x float> %shift395, %2412
  %shift396 = shufflevector <4 x float> %2028, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2414 = fadd <4 x float> %shift396, %2413
  %shift397 = shufflevector <4 x float> %2028, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2415 = fadd <4 x float> %shift397, %2414
  %2416 = fadd <4 x float> %2031, %2415
  %shift398 = shufflevector <4 x float> %2031, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2417 = fadd <4 x float> %shift398, %2416
  %shift399 = shufflevector <4 x float> %2031, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2418 = fadd <4 x float> %shift399, %2417
  %shift400 = shufflevector <4 x float> %2031, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2419 = fadd <4 x float> %shift400, %2418
  %2420 = fadd <4 x float> %2034, %2419
  %shift401 = shufflevector <4 x float> %2034, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2421 = fadd <4 x float> %shift401, %2420
  %shift402 = shufflevector <4 x float> %2034, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2422 = fadd <4 x float> %shift402, %2421
  %shift403 = shufflevector <4 x float> %2034, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2423 = fadd <4 x float> %shift403, %2422
  %2424 = fadd <4 x float> %2037, %2423
  %shift404 = shufflevector <4 x float> %2037, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2425 = fadd <4 x float> %shift404, %2424
  %shift405 = shufflevector <4 x float> %2037, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2426 = fadd <4 x float> %shift405, %2425
  %shift406 = shufflevector <4 x float> %2037, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2427 = fadd <4 x float> %shift406, %2426
  %2428 = fadd <4 x float> %2040, %2427
  %shift407 = shufflevector <4 x float> %2040, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2429 = fadd <4 x float> %shift407, %2428
  %shift408 = shufflevector <4 x float> %2040, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2430 = fadd <4 x float> %shift408, %2429
  %shift409 = shufflevector <4 x float> %2040, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2431 = fadd <4 x float> %shift409, %2430
  %2432 = fadd <4 x float> %2043, %2431
  %shift410 = shufflevector <4 x float> %2043, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2433 = fadd <4 x float> %shift410, %2432
  %shift411 = shufflevector <4 x float> %2043, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2434 = fadd <4 x float> %shift411, %2433
  %shift412 = shufflevector <4 x float> %2043, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2435 = fadd <4 x float> %shift412, %2434
  %2436 = fadd <4 x float> %2046, %2435
  %shift413 = shufflevector <4 x float> %2046, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2437 = fadd <4 x float> %shift413, %2436
  %shift414 = shufflevector <4 x float> %2046, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2438 = fadd <4 x float> %shift414, %2437
  %shift415 = shufflevector <4 x float> %2046, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2439 = fadd <4 x float> %shift415, %2438
  %2440 = fadd <4 x float> %2049, %2439
  %shift416 = shufflevector <4 x float> %2049, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2441 = fadd <4 x float> %shift416, %2440
  %shift417 = shufflevector <4 x float> %2049, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2442 = fadd <4 x float> %shift417, %2441
  %shift418 = shufflevector <4 x float> %2049, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2443 = fadd <4 x float> %shift418, %2442
  %2444 = fadd <4 x float> %2052, %2443
  %shift419 = shufflevector <4 x float> %2052, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2445 = fadd <4 x float> %shift419, %2444
  %shift420 = shufflevector <4 x float> %2052, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2446 = fadd <4 x float> %shift420, %2445
  %shift421 = shufflevector <4 x float> %2052, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2447 = fadd <4 x float> %shift421, %2446
  %2448 = fadd <4 x float> %2055, %2447
  %shift422 = shufflevector <4 x float> %2055, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2449 = fadd <4 x float> %shift422, %2448
  %shift423 = shufflevector <4 x float> %2055, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2450 = fadd <4 x float> %shift423, %2449
  %shift424 = shufflevector <4 x float> %2055, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2451 = fadd <4 x float> %shift424, %2450
  %2452 = fadd <4 x float> %2058, %2451
  %shift425 = shufflevector <4 x float> %2058, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2453 = fadd <4 x float> %shift425, %2452
  %shift426 = shufflevector <4 x float> %2058, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2454 = fadd <4 x float> %shift426, %2453
  %shift427 = shufflevector <4 x float> %2058, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2455 = fadd <4 x float> %shift427, %2454
  %2456 = fadd <4 x float> %2061, %2455
  %shift428 = shufflevector <4 x float> %2061, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2457 = fadd <4 x float> %shift428, %2456
  %shift429 = shufflevector <4 x float> %2061, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2458 = fadd <4 x float> %shift429, %2457
  %shift430 = shufflevector <4 x float> %2061, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2459 = fadd <4 x float> %shift430, %2458
  %2460 = fadd <4 x float> %2064, %2459
  %shift431 = shufflevector <4 x float> %2064, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2461 = fadd <4 x float> %shift431, %2460
  %shift432 = shufflevector <4 x float> %2064, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2462 = fadd <4 x float> %shift432, %2461
  %shift433 = shufflevector <4 x float> %2064, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2463 = fadd <4 x float> %shift433, %2462
  %2464 = fadd <4 x float> %2067, %2463
  %shift434 = shufflevector <4 x float> %2067, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %2465 = fadd <4 x float> %shift434, %2464
  %shift435 = shufflevector <4 x float> %2067, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>
  %2466 = fadd <4 x float> %shift435, %2465
  %shift436 = shufflevector <4 x float> %2067, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %2467 = fadd <4 x float> %shift436, %2466
  %2468 = extractelement <4 x float> %2467, i64 0
  %2469 = bitcast float %2468 to i32
  %2470 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %1086, i32 %2469)
  %2471 = bitcast i32 %2470 to float
  %2472 = fadd float %2468, %2471
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %2473 = fmul float %1235, %1884
  %2474 = fadd float %2473, %2472
  %2475 = add i64 %1233, 128
  %2476 = add i32 %1236, 128
  %2477 = icmp slt i32 %2476, %20
  br i1 %2477, label %1232, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %1734
  %2478 = shufflevector <16 x float> %2404, <16 x float> poison, <2 x i32> <i32 14, i32 15>
  %2479 = shufflevector <16 x float> %2404, <16 x float> poison, <2 x i32> <i32 12, i32 13>
  %2480 = shufflevector <16 x float> %2404, <16 x float> poison, <2 x i32> <i32 10, i32 11>
  %2481 = shufflevector <16 x float> %2404, <16 x float> poison, <2 x i32> <i32 8, i32 9>
  %2482 = shufflevector <16 x float> %2404, <16 x float> poison, <2 x i32> <i32 6, i32 7>
  %2483 = shufflevector <16 x float> %2404, <16 x float> poison, <2 x i32> <i32 4, i32 5>
  %2484 = shufflevector <16 x float> %2404, <16 x float> poison, <2 x i32> <i32 2, i32 3>
  %2485 = shufflevector <16 x float> %2404, <16 x float> poison, <2 x i32> <i32 0, i32 1>
  %2486 = shufflevector <16 x float> %2400, <16 x float> poison, <2 x i32> <i32 14, i32 15>
  %2487 = shufflevector <16 x float> %2400, <16 x float> poison, <2 x i32> <i32 12, i32 13>
  %2488 = shufflevector <16 x float> %2400, <16 x float> poison, <2 x i32> <i32 10, i32 11>
  %2489 = shufflevector <16 x float> %2400, <16 x float> poison, <2 x i32> <i32 8, i32 9>
  %2490 = shufflevector <16 x float> %2400, <16 x float> poison, <2 x i32> <i32 6, i32 7>
  %2491 = shufflevector <16 x float> %2400, <16 x float> poison, <2 x i32> <i32 4, i32 5>
  %2492 = shufflevector <16 x float> %2400, <16 x float> poison, <2 x i32> <i32 2, i32 3>
  %2493 = shufflevector <16 x float> %2400, <16 x float> poison, <2 x i32> <i32 0, i32 1>
  %2494 = shufflevector <16 x float> %2396, <16 x float> poison, <2 x i32> <i32 14, i32 15>
  %2495 = shufflevector <16 x float> %2396, <16 x float> poison, <2 x i32> <i32 12, i32 13>
  %2496 = shufflevector <16 x float> %2396, <16 x float> poison, <2 x i32> <i32 10, i32 11>
  %2497 = shufflevector <16 x float> %2396, <16 x float> poison, <2 x i32> <i32 8, i32 9>
  %2498 = shufflevector <16 x float> %2396, <16 x float> poison, <2 x i32> <i32 6, i32 7>
  %2499 = shufflevector <16 x float> %2396, <16 x float> poison, <2 x i32> <i32 4, i32 5>
  %2500 = shufflevector <16 x float> %2396, <16 x float> poison, <2 x i32> <i32 2, i32 3>
  %2501 = shufflevector <16 x float> %2396, <16 x float> poison, <2 x i32> <i32 0, i32 1>
  %2502 = shufflevector <16 x float> %2392, <16 x float> poison, <2 x i32> <i32 14, i32 15>
  %2503 = shufflevector <16 x float> %2392, <16 x float> poison, <2 x i32> <i32 12, i32 13>
  %2504 = shufflevector <16 x float> %2392, <16 x float> poison, <2 x i32> <i32 10, i32 11>
  %2505 = shufflevector <16 x float> %2392, <16 x float> poison, <2 x i32> <i32 8, i32 9>
  %2506 = shufflevector <16 x float> %2392, <16 x float> poison, <2 x i32> <i32 6, i32 7>
  %2507 = shufflevector <16 x float> %2392, <16 x float> poison, <2 x i32> <i32 4, i32 5>
  %2508 = shufflevector <16 x float> %2392, <16 x float> poison, <2 x i32> <i32 2, i32 3>
  %2509 = shufflevector <16 x float> %2392, <16 x float> poison, <2 x i32> <i32 0, i32 1>
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %21
  %.lcssa = phi float [ 1.000000e+00, %21 ], [ %2474, %._crit_edge.loopexit ]
  %2510 = phi <2 x float> [ zeroinitializer, %21 ], [ %2509, %._crit_edge.loopexit ]
  %2511 = phi <2 x float> [ zeroinitializer, %21 ], [ %2508, %._crit_edge.loopexit ]
  %2512 = phi <2 x float> [ zeroinitializer, %21 ], [ %2507, %._crit_edge.loopexit ]
  %2513 = phi <2 x float> [ zeroinitializer, %21 ], [ %2506, %._crit_edge.loopexit ]
  %2514 = phi <2 x float> [ zeroinitializer, %21 ], [ %2505, %._crit_edge.loopexit ]
  %2515 = phi <2 x float> [ zeroinitializer, %21 ], [ %2504, %._crit_edge.loopexit ]
  %2516 = phi <2 x float> [ zeroinitializer, %21 ], [ %2503, %._crit_edge.loopexit ]
  %2517 = phi <2 x float> [ zeroinitializer, %21 ], [ %2502, %._crit_edge.loopexit ]
  %2518 = phi <2 x float> [ zeroinitializer, %21 ], [ %2501, %._crit_edge.loopexit ]
  %2519 = phi <2 x float> [ zeroinitializer, %21 ], [ %2500, %._crit_edge.loopexit ]
  %2520 = phi <2 x float> [ zeroinitializer, %21 ], [ %2499, %._crit_edge.loopexit ]
  %2521 = phi <2 x float> [ zeroinitializer, %21 ], [ %2498, %._crit_edge.loopexit ]
  %2522 = phi <2 x float> [ zeroinitializer, %21 ], [ %2497, %._crit_edge.loopexit ]
  %2523 = phi <2 x float> [ zeroinitializer, %21 ], [ %2496, %._crit_edge.loopexit ]
  %2524 = phi <2 x float> [ zeroinitializer, %21 ], [ %2495, %._crit_edge.loopexit ]
  %2525 = phi <2 x float> [ zeroinitializer, %21 ], [ %2494, %._crit_edge.loopexit ]
  %2526 = phi <2 x float> [ zeroinitializer, %21 ], [ %2493, %._crit_edge.loopexit ]
  %2527 = phi <2 x float> [ zeroinitializer, %21 ], [ %2492, %._crit_edge.loopexit ]
  %2528 = phi <2 x float> [ zeroinitializer, %21 ], [ %2491, %._crit_edge.loopexit ]
  %2529 = phi <2 x float> [ zeroinitializer, %21 ], [ %2490, %._crit_edge.loopexit ]
  %2530 = phi <2 x float> [ zeroinitializer, %21 ], [ %2489, %._crit_edge.loopexit ]
  %2531 = phi <2 x float> [ zeroinitializer, %21 ], [ %2488, %._crit_edge.loopexit ]
  %2532 = phi <2 x float> [ zeroinitializer, %21 ], [ %2487, %._crit_edge.loopexit ]
  %2533 = phi <2 x float> [ zeroinitializer, %21 ], [ %2486, %._crit_edge.loopexit ]
  %2534 = phi <2 x float> [ zeroinitializer, %21 ], [ %2485, %._crit_edge.loopexit ]
  %2535 = phi <2 x float> [ zeroinitializer, %21 ], [ %2484, %._crit_edge.loopexit ]
  %2536 = phi <2 x float> [ zeroinitializer, %21 ], [ %2483, %._crit_edge.loopexit ]
  %2537 = phi <2 x float> [ zeroinitializer, %21 ], [ %2482, %._crit_edge.loopexit ]
  %2538 = phi <2 x float> [ zeroinitializer, %21 ], [ %2481, %._crit_edge.loopexit ]
  %2539 = phi <2 x float> [ zeroinitializer, %21 ], [ %2480, %._crit_edge.loopexit ]
  %2540 = phi <2 x float> [ zeroinitializer, %21 ], [ %2479, %._crit_edge.loopexit ]
  %2541 = phi <2 x float> [ zeroinitializer, %21 ], [ %2478, %._crit_edge.loopexit ]
  %2542 = shl nuw nsw i32 %29, 2
  %2543 = or i32 %2542, 122
  %2544 = zext i32 %2543 to i64
  %2545 = or i32 %2542, 120
  %2546 = zext i32 %2545 to i64
  %2547 = or i32 %2542, 114
  %2548 = zext i32 %2547 to i64
  %2549 = or i32 %2542, 112
  %2550 = zext i32 %2549 to i64
  %2551 = or i32 %2542, 106
  %2552 = zext i32 %2551 to i64
  %2553 = or i32 %2542, 104
  %2554 = zext i32 %2553 to i64
  %2555 = or i32 %2542, 98
  %2556 = zext i32 %2555 to i64
  %2557 = or i32 %2542, 96
  %2558 = zext i32 %2557 to i64
  %2559 = or i32 %2542, 90
  %2560 = zext i32 %2559 to i64
  %2561 = or i32 %2542, 88
  %2562 = zext i32 %2561 to i64
  %2563 = or i32 %2542, 82
  %2564 = zext i32 %2563 to i64
  %2565 = or i32 %2542, 80
  %2566 = zext i32 %2565 to i64
  %2567 = or i32 %2542, 74
  %2568 = zext i32 %2567 to i64
  %2569 = or i32 %2542, 72
  %2570 = zext i32 %2569 to i64
  %2571 = or i32 %2542, 66
  %2572 = zext i32 %2571 to i64
  %2573 = or i32 %2542, 64
  %2574 = zext i32 %2573 to i64
  %2575 = or i32 %2542, 58
  %2576 = zext i32 %2575 to i64
  %2577 = or i32 %2542, 56
  %2578 = zext i32 %2577 to i64
  %2579 = or i32 %2542, 50
  %2580 = zext i32 %2579 to i64
  %2581 = or i32 %2542, 48
  %2582 = zext i32 %2581 to i64
  %2583 = or i32 %2542, 42
  %2584 = zext i32 %2583 to i64
  %2585 = or i32 %2542, 40
  %2586 = zext i32 %2585 to i64
  %2587 = or i32 %2542, 34
  %2588 = zext i32 %2587 to i64
  %2589 = or i32 %2542, 32
  %2590 = zext i32 %2589 to i64
  %2591 = or i32 %2542, 26
  %2592 = zext i32 %2591 to i64
  %2593 = or i32 %2542, 24
  %2594 = zext i32 %2593 to i64
  %2595 = or i32 %2542, 18
  %2596 = zext i32 %2595 to i64
  %2597 = or i32 %2542, 16
  %2598 = zext i32 %2597 to i64
  %2599 = or i32 %2542, 10
  %2600 = zext i32 %2599 to i64
  %2601 = or i32 %2542, 8
  %2602 = zext i32 %2601 to i64
  %2603 = or i32 %2542, 2
  %2604 = zext i32 %2603 to i64
  %2605 = zext i32 %2542 to i64
  %2606 = insertelement <2 x float> poison, float %.lcssa, i64 0
  %2607 = shufflevector <2 x float> %2606, <2 x float> poison, <2 x i32> zeroinitializer
  %2608 = fdiv <2 x float> %2510, %2607
  %2609 = fdiv <2 x float> %2511, %2607
  %2610 = fdiv <2 x float> %2512, %2607
  %2611 = fdiv <2 x float> %2513, %2607
  %2612 = fdiv <2 x float> %2514, %2607
  %2613 = fdiv <2 x float> %2515, %2607
  %2614 = fdiv <2 x float> %2516, %2607
  %2615 = fdiv <2 x float> %2517, %2607
  %2616 = fdiv <2 x float> %2518, %2607
  %2617 = fdiv <2 x float> %2519, %2607
  %2618 = fdiv <2 x float> %2520, %2607
  %2619 = fdiv <2 x float> %2521, %2607
  %2620 = fdiv <2 x float> %2522, %2607
  %2621 = fdiv <2 x float> %2523, %2607
  %2622 = fdiv <2 x float> %2524, %2607
  %2623 = fdiv <2 x float> %2525, %2607
  %2624 = fdiv <2 x float> %2526, %2607
  %2625 = fdiv <2 x float> %2527, %2607
  %2626 = fdiv <2 x float> %2528, %2607
  %2627 = fdiv <2 x float> %2529, %2607
  %2628 = fdiv <2 x float> %2530, %2607
  %2629 = fdiv <2 x float> %2531, %2607
  %2630 = fdiv <2 x float> %2532, %2607
  %2631 = fdiv <2 x float> %2533, %2607
  %2632 = fdiv <2 x float> %2534, %2607
  %2633 = fdiv <2 x float> %2535, %2607
  %2634 = fdiv <2 x float> %2536, %2607
  %2635 = fdiv <2 x float> %2537, %2607
  %2636 = fdiv <2 x float> %2538, %2607
  %2637 = fdiv <2 x float> %2539, %2607
  %2638 = fdiv <2 x float> %2540, %2607
  %2639 = fdiv <2 x float> %2541, %2607
  %2640 = getelementptr half, ptr addrspace(1) %5, i64 %137
  %2641 = sext i32 %17 to i64
  %2642 = fptrunc <2 x float> %2608 to <2 x half>
  %2643 = fptrunc <2 x float> %2609 to <2 x half>
  %2644 = fptrunc <2 x float> %2610 to <2 x half>
  %2645 = fptrunc <2 x float> %2611 to <2 x half>
  %2646 = fptrunc <2 x float> %2612 to <2 x half>
  %2647 = fptrunc <2 x float> %2613 to <2 x half>
  %2648 = fptrunc <2 x float> %2614 to <2 x half>
  %2649 = fptrunc <2 x float> %2615 to <2 x half>
  %2650 = fptrunc <2 x float> %2616 to <2 x half>
  %2651 = fptrunc <2 x float> %2617 to <2 x half>
  %2652 = fptrunc <2 x float> %2618 to <2 x half>
  %2653 = fptrunc <2 x float> %2619 to <2 x half>
  %2654 = fptrunc <2 x float> %2620 to <2 x half>
  %2655 = fptrunc <2 x float> %2621 to <2 x half>
  %2656 = fptrunc <2 x float> %2622 to <2 x half>
  %2657 = fptrunc <2 x float> %2623 to <2 x half>
  %2658 = fptrunc <2 x float> %2624 to <2 x half>
  %2659 = fptrunc <2 x float> %2625 to <2 x half>
  %2660 = fptrunc <2 x float> %2626 to <2 x half>
  %2661 = fptrunc <2 x float> %2627 to <2 x half>
  %2662 = fptrunc <2 x float> %2628 to <2 x half>
  %2663 = fptrunc <2 x float> %2629 to <2 x half>
  %2664 = fptrunc <2 x float> %2630 to <2 x half>
  %2665 = fptrunc <2 x float> %2631 to <2 x half>
  %2666 = fptrunc <2 x float> %2632 to <2 x half>
  %2667 = fptrunc <2 x float> %2633 to <2 x half>
  %2668 = fptrunc <2 x float> %2634 to <2 x half>
  %2669 = fptrunc <2 x float> %2635 to <2 x half>
  %2670 = fptrunc <2 x float> %2636 to <2 x half>
  %2671 = fptrunc <2 x float> %2637 to <2 x half>
  %2672 = fptrunc <2 x float> %2638 to <2 x half>
  %2673 = fptrunc <2 x float> %2639 to <2 x half>
  %2674 = mul nsw i64 %145, %2641
  %2675 = getelementptr half, ptr addrspace(1) %2640, i64 %2674
  %2676 = getelementptr half, ptr addrspace(1) %2675, i64 %2605
  %2677 = getelementptr half, ptr addrspace(1) %2675, i64 %2604
  %2678 = getelementptr half, ptr addrspace(1) %2675, i64 %2602
  %2679 = getelementptr half, ptr addrspace(1) %2675, i64 %2600
  %2680 = getelementptr half, ptr addrspace(1) %2675, i64 %2598
  %2681 = getelementptr half, ptr addrspace(1) %2675, i64 %2596
  %2682 = getelementptr half, ptr addrspace(1) %2675, i64 %2594
  %2683 = getelementptr half, ptr addrspace(1) %2675, i64 %2592
  %2684 = getelementptr half, ptr addrspace(1) %2675, i64 %2590
  %2685 = getelementptr half, ptr addrspace(1) %2675, i64 %2588
  %2686 = getelementptr half, ptr addrspace(1) %2675, i64 %2586
  %2687 = getelementptr half, ptr addrspace(1) %2675, i64 %2584
  %2688 = getelementptr half, ptr addrspace(1) %2675, i64 %2582
  %2689 = getelementptr half, ptr addrspace(1) %2675, i64 %2580
  %2690 = getelementptr half, ptr addrspace(1) %2675, i64 %2578
  %2691 = getelementptr half, ptr addrspace(1) %2675, i64 %2576
  %2692 = getelementptr half, ptr addrspace(1) %2675, i64 %2574
  %2693 = getelementptr half, ptr addrspace(1) %2675, i64 %2572
  %2694 = getelementptr half, ptr addrspace(1) %2675, i64 %2570
  %2695 = getelementptr half, ptr addrspace(1) %2675, i64 %2568
  %2696 = getelementptr half, ptr addrspace(1) %2675, i64 %2566
  %2697 = getelementptr half, ptr addrspace(1) %2675, i64 %2564
  %2698 = getelementptr half, ptr addrspace(1) %2675, i64 %2562
  %2699 = getelementptr half, ptr addrspace(1) %2675, i64 %2560
  %2700 = getelementptr half, ptr addrspace(1) %2675, i64 %2558
  %2701 = getelementptr half, ptr addrspace(1) %2675, i64 %2556
  %2702 = getelementptr half, ptr addrspace(1) %2675, i64 %2554
  %2703 = getelementptr half, ptr addrspace(1) %2675, i64 %2552
  %2704 = getelementptr half, ptr addrspace(1) %2675, i64 %2550
  %2705 = getelementptr half, ptr addrspace(1) %2675, i64 %2548
  %2706 = getelementptr half, ptr addrspace(1) %2675, i64 %2546
  %2707 = getelementptr half, ptr addrspace(1) %2675, i64 %2544
  store <2 x half> %2642, ptr addrspace(1) %2676, align 4
  store <2 x half> %2643, ptr addrspace(1) %2677, align 4
  store <2 x half> %2644, ptr addrspace(1) %2678, align 4
  store <2 x half> %2645, ptr addrspace(1) %2679, align 4
  store <2 x half> %2646, ptr addrspace(1) %2680, align 4
  store <2 x half> %2647, ptr addrspace(1) %2681, align 4
  store <2 x half> %2648, ptr addrspace(1) %2682, align 4
  store <2 x half> %2649, ptr addrspace(1) %2683, align 4
  store <2 x half> %2650, ptr addrspace(1) %2684, align 4
  store <2 x half> %2651, ptr addrspace(1) %2685, align 4
  store <2 x half> %2652, ptr addrspace(1) %2686, align 4
  store <2 x half> %2653, ptr addrspace(1) %2687, align 4
  store <2 x half> %2654, ptr addrspace(1) %2688, align 4
  store <2 x half> %2655, ptr addrspace(1) %2689, align 4
  store <2 x half> %2656, ptr addrspace(1) %2690, align 4
  store <2 x half> %2657, ptr addrspace(1) %2691, align 4
  store <2 x half> %2658, ptr addrspace(1) %2692, align 4
  store <2 x half> %2659, ptr addrspace(1) %2693, align 4
  store <2 x half> %2660, ptr addrspace(1) %2694, align 4
  store <2 x half> %2661, ptr addrspace(1) %2695, align 4
  store <2 x half> %2662, ptr addrspace(1) %2696, align 4
  store <2 x half> %2663, ptr addrspace(1) %2697, align 4
  store <2 x half> %2664, ptr addrspace(1) %2698, align 4
  store <2 x half> %2665, ptr addrspace(1) %2699, align 4
  store <2 x half> %2666, ptr addrspace(1) %2700, align 4
  store <2 x half> %2667, ptr addrspace(1) %2701, align 4
  store <2 x half> %2668, ptr addrspace(1) %2702, align 4
  store <2 x half> %2669, ptr addrspace(1) %2703, align 4
  store <2 x half> %2670, ptr addrspace(1) %2704, align 4
  store <2 x half> %2671, ptr addrspace(1) %2705, align 4
  store <2 x half> %2672, ptr addrspace(1) %2706, align 4
  store <2 x half> %2673, ptr addrspace(1) %2707, align 4
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workgroup.id.y() #1

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #2

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half>, <4 x half>, <16 x float>, i32 immarg, i32 immarg, i32 immarg) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #1

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i32 @llvm.amdgcn.ds.bpermute(i32, i32) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.exp2.f32(float) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x float> @llvm.exp2.v4f32(<4 x float>) #5

attributes #0 = { nofree nounwind "amdgpu-flat-work-group-size"="1, 256" "amdgpu-unsafe-fp-atomics"="true" "amdgpu-waves-per-eu"="2" "denormal-fp-math-f32"="preserve-sign" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #3 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { convergent mustprogress nocallback nofree nounwind willreturn memory(none) }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.dbg.cu = !{!4}
!nvvm.annotations = !{!6}
!opencl.ocl.version = !{}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !10}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 8, !"PIC Level", i32 0}
!3 = !{i32 4, !"amdgpu_hostcall", i32 1}
!4 = distinct !DICompileUnit(language: DW_LANG_C, file: !5, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!5 = !DIFile(filename: "<unknown>", directory: "")
!6 = !{ptr @_attn_fwd_0d1d2d34d5d6de7de8de9c10de11de12de13c14de15de16de17c18de19de20de21c2223de24de, !"kernel", i32 1}
!7 = !{i32 2, i32 0}
!8 = !{!"clang version 14.0.0"}
!9 = !{!"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"}
!10 = !{!"AMD clang version 17.0.0 (ssh://gerritgit/lightning/ec/llvm-project amd-mainline-open 23425 56ebc6a00586c4107105c18e3dc4cc0966d7e8e2)"}
!11 = distinct !DISubprogram(name: "_attn_fwd_0d1d2d34d5d6de7de8de9c10de11de12de13c14de15de16de17c18de19de20de21c2223de24de", linkageName: "_attn_fwd_0d1d2d34d5d6de7de8de9c10de11de12de13c14de15de16de17c18de19de20de21c2223de24de", scope: !5, file: !5, type: !12, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4)
!12 = !DISubroutineType(cc: DW_CC_normal, types: !13)
!13 = !{}
