; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8]

; Function Attrs: nofree nounwind
define amdgpu_kernel void @_attn_fwd_0d1d2d34d5d6de7de8de9c10de11de12de13c14de15de16de17c18de19de20de21c2223de24de(ptr addrspace(1) inreg readonly %0, ptr addrspace(1) inreg readonly %1, ptr addrspace(1) inreg readonly %2, float inreg %3, ptr addrspace(1) inreg nocapture readnone %4, ptr addrspace(1) inreg writeonly %5, i32 inreg %6, i32 inreg %7, i32 inreg %8, i32 inreg %9, i32 inreg %10, i32 inreg %11, i32 inreg %12, i32 inreg %13, i32 inreg %14, i32 inreg %15, i32 inreg %16, i32 inreg %17, i32 inreg %18, i32 inreg %19, i32 inreg %20) local_unnamed_addr #0 !dbg !11 {
  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !14
  %23 = and i32 %22, 63, !dbg !14
  %24 = lshr i32 %22, 6, !dbg !14
  %25 = and i32 %24, 3, !dbg !14
  %26 = lshr i32 %23, 2, !dbg !14
  %27 = shl nuw nsw i32 %25, 4, !dbg !14
  %28 = or i32 %27, %26, !dbg !14
  %29 = or i32 %28, 64, !dbg !14
  %30 = shl nuw nsw i32 %25, 5, !dbg !14
  %31 = and i32 %22, 31, !dbg !14
  %32 = or i32 %30, %31, !dbg !14
  %33 = shl i32 %22, 3, !dbg !14
  %34 = and i32 %33, 24, !dbg !14
  %35 = or i32 %34, 1, !dbg !14
  %36 = or i32 %34, 2, !dbg !14
  %37 = or i32 %34, 3, !dbg !14
  %38 = or i32 %34, 4, !dbg !14
  %39 = or i32 %34, 5, !dbg !14
  %40 = or i32 %34, 6, !dbg !14
  %41 = or i32 %34, 7, !dbg !14
  %42 = or i32 %34, 32, !dbg !14
  %43 = or i32 %34, 33, !dbg !14
  %44 = or i32 %34, 34, !dbg !14
  %45 = or i32 %34, 35, !dbg !14
  %46 = or i32 %34, 36, !dbg !14
  %47 = or i32 %34, 37, !dbg !14
  %48 = or i32 %34, 38, !dbg !14
  %49 = or i32 %34, 39, !dbg !14
  %50 = or i32 %34, 64, !dbg !14
  %51 = or i32 %34, 65, !dbg !14
  %52 = or i32 %34, 66, !dbg !14
  %53 = or i32 %34, 67, !dbg !14
  %54 = or i32 %34, 68, !dbg !14
  %55 = or i32 %34, 69, !dbg !14
  %56 = or i32 %34, 70, !dbg !14
  %57 = or i32 %34, 71, !dbg !14
  %58 = or i32 %34, 96, !dbg !14
  %59 = or i32 %34, 97, !dbg !14
  %60 = or i32 %34, 98, !dbg !14
  %61 = or i32 %34, 99, !dbg !14
  %62 = or i32 %34, 100, !dbg !14
  %63 = or i32 %34, 101, !dbg !14
  %64 = or i32 %34, 102, !dbg !14
  %65 = or i32 %34, 103, !dbg !14
  %66 = lshr i32 %22, 3, !dbg !14
  %67 = and i32 %66, 4, !dbg !14
  %68 = fmul float %3, 0x3FF7154760000000, !dbg !15
  %69 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !16
  %70 = shl i32 %69, 7, !dbg !17
  %71 = sext i32 %70 to i64, !dbg !18
  %72 = tail call i32 @llvm.amdgcn.workgroup.id.y(), !dbg !19
  %73 = mul i32 %72, %7, !dbg !20
  %74 = sext i32 %73 to i64, !dbg !21
  %75 = getelementptr half, ptr addrspace(1) %0, i64 %74, !dbg !21
  %76 = sext i32 %8 to i64, !dbg !18
  %77 = getelementptr half, ptr addrspace(1) %1, i64 %74, !dbg !22
  %78 = sext i32 %11 to i64, !dbg !23
  %79 = getelementptr half, ptr addrspace(1) %2, i64 %74, !dbg !24
  %80 = sext i32 %14 to i64, !dbg !25
  %81 = zext i32 %28 to i64
  %82 = zext i32 %29 to i64
  %83 = or i64 %81, %71, !dbg !14
  %84 = or i64 %82, %71, !dbg !14
  %85 = mul nsw i64 %83, %76, !dbg !14
  %86 = mul nsw i64 %84, %76, !dbg !14
  %87 = getelementptr half, ptr addrspace(1) %75, i64 %85, !dbg !14
  %88 = getelementptr half, ptr addrspace(1) %75, i64 %86, !dbg !14
  %89 = zext i32 %34 to i64
  %90 = zext i32 %35 to i64
  %91 = zext i32 %36 to i64
  %92 = zext i32 %37 to i64
  %93 = zext i32 %38 to i64
  %94 = zext i32 %39 to i64
  %95 = zext i32 %40 to i64
  %96 = zext i32 %41 to i64
  %97 = zext i32 %42 to i64
  %98 = zext i32 %43 to i64
  %99 = zext i32 %44 to i64
  %100 = zext i32 %45 to i64
  %101 = zext i32 %46 to i64
  %102 = zext i32 %47 to i64
  %103 = zext i32 %48 to i64
  %104 = zext i32 %49 to i64
  %105 = zext i32 %50 to i64
  %106 = zext i32 %51 to i64
  %107 = zext i32 %52 to i64
  %108 = zext i32 %53 to i64
  %109 = zext i32 %54 to i64
  %110 = zext i32 %55 to i64
  %111 = zext i32 %56 to i64
  %112 = zext i32 %57 to i64
  %113 = zext i32 %58 to i64
  %114 = zext i32 %59 to i64
  %115 = zext i32 %60 to i64
  %116 = zext i32 %61 to i64
  %117 = zext i32 %62 to i64
  %118 = zext i32 %63 to i64
  %119 = zext i32 %64 to i64
  %120 = zext i32 %65 to i64
  %121 = getelementptr half, ptr addrspace(1) %87, i64 %89, !dbg !14
  %122 = getelementptr half, ptr addrspace(1) %87, i64 %90, !dbg !14
  %123 = getelementptr half, ptr addrspace(1) %87, i64 %91, !dbg !14
  %124 = getelementptr half, ptr addrspace(1) %87, i64 %92, !dbg !14
  %125 = getelementptr half, ptr addrspace(1) %87, i64 %93, !dbg !14
  %126 = getelementptr half, ptr addrspace(1) %87, i64 %94, !dbg !14
  %127 = getelementptr half, ptr addrspace(1) %87, i64 %95, !dbg !14
  %128 = getelementptr half, ptr addrspace(1) %87, i64 %96, !dbg !14
  %129 = getelementptr half, ptr addrspace(1) %87, i64 %97, !dbg !14
  %130 = getelementptr half, ptr addrspace(1) %87, i64 %98, !dbg !14
  %131 = getelementptr half, ptr addrspace(1) %87, i64 %99, !dbg !14
  %132 = getelementptr half, ptr addrspace(1) %87, i64 %100, !dbg !14
  %133 = getelementptr half, ptr addrspace(1) %87, i64 %101, !dbg !14
  %134 = getelementptr half, ptr addrspace(1) %87, i64 %102, !dbg !14
  %135 = getelementptr half, ptr addrspace(1) %87, i64 %103, !dbg !14
  %136 = getelementptr half, ptr addrspace(1) %87, i64 %104, !dbg !14
  %137 = getelementptr half, ptr addrspace(1) %87, i64 %105, !dbg !14
  %138 = getelementptr half, ptr addrspace(1) %87, i64 %106, !dbg !14
  %139 = getelementptr half, ptr addrspace(1) %87, i64 %107, !dbg !14
  %140 = getelementptr half, ptr addrspace(1) %87, i64 %108, !dbg !14
  %141 = getelementptr half, ptr addrspace(1) %87, i64 %109, !dbg !14
  %142 = getelementptr half, ptr addrspace(1) %87, i64 %110, !dbg !14
  %143 = getelementptr half, ptr addrspace(1) %87, i64 %111, !dbg !14
  %144 = getelementptr half, ptr addrspace(1) %87, i64 %112, !dbg !14
  %145 = getelementptr half, ptr addrspace(1) %87, i64 %113, !dbg !14
  %146 = getelementptr half, ptr addrspace(1) %87, i64 %114, !dbg !14
  %147 = getelementptr half, ptr addrspace(1) %87, i64 %115, !dbg !14
  %148 = getelementptr half, ptr addrspace(1) %87, i64 %116, !dbg !14
  %149 = getelementptr half, ptr addrspace(1) %87, i64 %117, !dbg !14
  %150 = getelementptr half, ptr addrspace(1) %87, i64 %118, !dbg !14
  %151 = getelementptr half, ptr addrspace(1) %87, i64 %119, !dbg !14
  %152 = getelementptr half, ptr addrspace(1) %87, i64 %120, !dbg !14
  %153 = getelementptr half, ptr addrspace(1) %88, i64 %89, !dbg !14
  %154 = getelementptr half, ptr addrspace(1) %88, i64 %90, !dbg !14
  %155 = getelementptr half, ptr addrspace(1) %88, i64 %91, !dbg !14
  %156 = getelementptr half, ptr addrspace(1) %88, i64 %92, !dbg !14
  %157 = getelementptr half, ptr addrspace(1) %88, i64 %93, !dbg !14
  %158 = getelementptr half, ptr addrspace(1) %88, i64 %94, !dbg !14
  %159 = getelementptr half, ptr addrspace(1) %88, i64 %95, !dbg !14
  %160 = getelementptr half, ptr addrspace(1) %88, i64 %96, !dbg !14
  %161 = getelementptr half, ptr addrspace(1) %88, i64 %97, !dbg !14
  %162 = getelementptr half, ptr addrspace(1) %88, i64 %98, !dbg !14
  %163 = getelementptr half, ptr addrspace(1) %88, i64 %99, !dbg !14
  %164 = getelementptr half, ptr addrspace(1) %88, i64 %100, !dbg !14
  %165 = getelementptr half, ptr addrspace(1) %88, i64 %101, !dbg !14
  %166 = getelementptr half, ptr addrspace(1) %88, i64 %102, !dbg !14
  %167 = getelementptr half, ptr addrspace(1) %88, i64 %103, !dbg !14
  %168 = getelementptr half, ptr addrspace(1) %88, i64 %104, !dbg !14
  %169 = getelementptr half, ptr addrspace(1) %88, i64 %105, !dbg !14
  %170 = getelementptr half, ptr addrspace(1) %88, i64 %106, !dbg !14
  %171 = getelementptr half, ptr addrspace(1) %88, i64 %107, !dbg !14
  %172 = getelementptr half, ptr addrspace(1) %88, i64 %108, !dbg !14
  %173 = getelementptr half, ptr addrspace(1) %88, i64 %109, !dbg !14
  %174 = getelementptr half, ptr addrspace(1) %88, i64 %110, !dbg !14
  %175 = getelementptr half, ptr addrspace(1) %88, i64 %111, !dbg !14
  %176 = getelementptr half, ptr addrspace(1) %88, i64 %112, !dbg !14
  %177 = getelementptr half, ptr addrspace(1) %88, i64 %113, !dbg !14
  %178 = getelementptr half, ptr addrspace(1) %88, i64 %114, !dbg !14
  %179 = getelementptr half, ptr addrspace(1) %88, i64 %115, !dbg !14
  %180 = getelementptr half, ptr addrspace(1) %88, i64 %116, !dbg !14
  %181 = getelementptr half, ptr addrspace(1) %88, i64 %117, !dbg !14
  %182 = getelementptr half, ptr addrspace(1) %88, i64 %118, !dbg !14
  %183 = getelementptr half, ptr addrspace(1) %88, i64 %119, !dbg !14
  %184 = getelementptr half, ptr addrspace(1) %88, i64 %120, !dbg !14
  %185 = getelementptr half, ptr addrspace(1) %77, i64 %89, !dbg !26
  %186 = getelementptr half, ptr addrspace(1) %77, i64 %90, !dbg !26
  %187 = getelementptr half, ptr addrspace(1) %77, i64 %91, !dbg !26
  %188 = getelementptr half, ptr addrspace(1) %77, i64 %92, !dbg !26
  %189 = getelementptr half, ptr addrspace(1) %77, i64 %93, !dbg !26
  %190 = getelementptr half, ptr addrspace(1) %77, i64 %94, !dbg !26
  %191 = getelementptr half, ptr addrspace(1) %77, i64 %95, !dbg !26
  %192 = getelementptr half, ptr addrspace(1) %77, i64 %96, !dbg !26
  %193 = getelementptr half, ptr addrspace(1) %77, i64 %97, !dbg !26
  %194 = getelementptr half, ptr addrspace(1) %77, i64 %98, !dbg !26
  %195 = getelementptr half, ptr addrspace(1) %77, i64 %99, !dbg !26
  %196 = getelementptr half, ptr addrspace(1) %77, i64 %100, !dbg !26
  %197 = getelementptr half, ptr addrspace(1) %77, i64 %101, !dbg !26
  %198 = getelementptr half, ptr addrspace(1) %77, i64 %102, !dbg !26
  %199 = getelementptr half, ptr addrspace(1) %77, i64 %103, !dbg !26
  %200 = getelementptr half, ptr addrspace(1) %77, i64 %104, !dbg !26
  %201 = getelementptr half, ptr addrspace(1) %77, i64 %105, !dbg !26
  %202 = getelementptr half, ptr addrspace(1) %77, i64 %106, !dbg !26
  %203 = getelementptr half, ptr addrspace(1) %77, i64 %107, !dbg !26
  %204 = getelementptr half, ptr addrspace(1) %77, i64 %108, !dbg !26
  %205 = getelementptr half, ptr addrspace(1) %77, i64 %109, !dbg !26
  %206 = getelementptr half, ptr addrspace(1) %77, i64 %110, !dbg !26
  %207 = getelementptr half, ptr addrspace(1) %77, i64 %111, !dbg !26
  %208 = getelementptr half, ptr addrspace(1) %77, i64 %112, !dbg !26
  %209 = getelementptr half, ptr addrspace(1) %77, i64 %113, !dbg !26
  %210 = getelementptr half, ptr addrspace(1) %77, i64 %114, !dbg !26
  %211 = getelementptr half, ptr addrspace(1) %77, i64 %115, !dbg !26
  %212 = getelementptr half, ptr addrspace(1) %77, i64 %116, !dbg !26
  %213 = getelementptr half, ptr addrspace(1) %77, i64 %117, !dbg !26
  %214 = getelementptr half, ptr addrspace(1) %77, i64 %118, !dbg !26
  %215 = getelementptr half, ptr addrspace(1) %77, i64 %119, !dbg !26
  %216 = getelementptr half, ptr addrspace(1) %77, i64 %120, !dbg !26
  %217 = mul nsw i64 %78, %81, !dbg !26
  %218 = mul nsw i64 %78, %82, !dbg !26
  %219 = getelementptr half, ptr addrspace(1) %185, i64 %217, !dbg !26
  %220 = getelementptr half, ptr addrspace(1) %186, i64 %217, !dbg !26
  %221 = getelementptr half, ptr addrspace(1) %187, i64 %217, !dbg !26
  %222 = getelementptr half, ptr addrspace(1) %188, i64 %217, !dbg !26
  %223 = getelementptr half, ptr addrspace(1) %189, i64 %217, !dbg !26
  %224 = getelementptr half, ptr addrspace(1) %190, i64 %217, !dbg !26
  %225 = getelementptr half, ptr addrspace(1) %191, i64 %217, !dbg !26
  %226 = getelementptr half, ptr addrspace(1) %192, i64 %217, !dbg !26
  %227 = getelementptr half, ptr addrspace(1) %193, i64 %217, !dbg !26
  %228 = getelementptr half, ptr addrspace(1) %194, i64 %217, !dbg !26
  %229 = getelementptr half, ptr addrspace(1) %195, i64 %217, !dbg !26
  %230 = getelementptr half, ptr addrspace(1) %196, i64 %217, !dbg !26
  %231 = getelementptr half, ptr addrspace(1) %197, i64 %217, !dbg !26
  %232 = getelementptr half, ptr addrspace(1) %198, i64 %217, !dbg !26
  %233 = getelementptr half, ptr addrspace(1) %199, i64 %217, !dbg !26
  %234 = getelementptr half, ptr addrspace(1) %200, i64 %217, !dbg !26
  %235 = getelementptr half, ptr addrspace(1) %201, i64 %217, !dbg !26
  %236 = getelementptr half, ptr addrspace(1) %202, i64 %217, !dbg !26
  %237 = getelementptr half, ptr addrspace(1) %203, i64 %217, !dbg !26
  %238 = getelementptr half, ptr addrspace(1) %204, i64 %217, !dbg !26
  %239 = getelementptr half, ptr addrspace(1) %205, i64 %217, !dbg !26
  %240 = getelementptr half, ptr addrspace(1) %206, i64 %217, !dbg !26
  %241 = getelementptr half, ptr addrspace(1) %207, i64 %217, !dbg !26
  %242 = getelementptr half, ptr addrspace(1) %208, i64 %217, !dbg !26
  %243 = getelementptr half, ptr addrspace(1) %209, i64 %217, !dbg !26
  %244 = getelementptr half, ptr addrspace(1) %210, i64 %217, !dbg !26
  %245 = getelementptr half, ptr addrspace(1) %211, i64 %217, !dbg !26
  %246 = getelementptr half, ptr addrspace(1) %212, i64 %217, !dbg !26
  %247 = getelementptr half, ptr addrspace(1) %213, i64 %217, !dbg !26
  %248 = getelementptr half, ptr addrspace(1) %214, i64 %217, !dbg !26
  %249 = getelementptr half, ptr addrspace(1) %215, i64 %217, !dbg !26
  %250 = getelementptr half, ptr addrspace(1) %216, i64 %217, !dbg !26
  %251 = getelementptr half, ptr addrspace(1) %185, i64 %218, !dbg !26
  %252 = getelementptr half, ptr addrspace(1) %186, i64 %218, !dbg !26
  %253 = getelementptr half, ptr addrspace(1) %187, i64 %218, !dbg !26
  %254 = getelementptr half, ptr addrspace(1) %188, i64 %218, !dbg !26
  %255 = getelementptr half, ptr addrspace(1) %189, i64 %218, !dbg !26
  %256 = getelementptr half, ptr addrspace(1) %190, i64 %218, !dbg !26
  %257 = getelementptr half, ptr addrspace(1) %191, i64 %218, !dbg !26
  %258 = getelementptr half, ptr addrspace(1) %192, i64 %218, !dbg !26
  %259 = getelementptr half, ptr addrspace(1) %193, i64 %218, !dbg !26
  %260 = getelementptr half, ptr addrspace(1) %194, i64 %218, !dbg !26
  %261 = getelementptr half, ptr addrspace(1) %195, i64 %218, !dbg !26
  %262 = getelementptr half, ptr addrspace(1) %196, i64 %218, !dbg !26
  %263 = getelementptr half, ptr addrspace(1) %197, i64 %218, !dbg !26
  %264 = getelementptr half, ptr addrspace(1) %198, i64 %218, !dbg !26
  %265 = getelementptr half, ptr addrspace(1) %199, i64 %218, !dbg !26
  %266 = getelementptr half, ptr addrspace(1) %200, i64 %218, !dbg !26
  %267 = getelementptr half, ptr addrspace(1) %201, i64 %218, !dbg !26
  %268 = getelementptr half, ptr addrspace(1) %202, i64 %218, !dbg !26
  %269 = getelementptr half, ptr addrspace(1) %203, i64 %218, !dbg !26
  %270 = getelementptr half, ptr addrspace(1) %204, i64 %218, !dbg !26
  %271 = getelementptr half, ptr addrspace(1) %205, i64 %218, !dbg !26
  %272 = getelementptr half, ptr addrspace(1) %206, i64 %218, !dbg !26
  %273 = getelementptr half, ptr addrspace(1) %207, i64 %218, !dbg !26
  %274 = getelementptr half, ptr addrspace(1) %208, i64 %218, !dbg !26
  %275 = getelementptr half, ptr addrspace(1) %209, i64 %218, !dbg !26
  %276 = getelementptr half, ptr addrspace(1) %210, i64 %218, !dbg !26
  %277 = getelementptr half, ptr addrspace(1) %211, i64 %218, !dbg !26
  %278 = getelementptr half, ptr addrspace(1) %212, i64 %218, !dbg !26
  %279 = getelementptr half, ptr addrspace(1) %213, i64 %218, !dbg !26
  %280 = getelementptr half, ptr addrspace(1) %214, i64 %218, !dbg !26
  %281 = getelementptr half, ptr addrspace(1) %215, i64 %218, !dbg !26
  %282 = getelementptr half, ptr addrspace(1) %216, i64 %218, !dbg !26
  %283 = addrspacecast ptr addrspace(1) %219 to ptr, !dbg !26
  %284 = load <1 x half>, ptr %283, align 2, !dbg !26
  %285 = addrspacecast ptr addrspace(1) %220 to ptr, !dbg !26
  %286 = load <1 x half>, ptr %285, align 2, !dbg !26
  %287 = addrspacecast ptr addrspace(1) %221 to ptr, !dbg !26
  %288 = load <1 x half>, ptr %287, align 2, !dbg !26
  %289 = shufflevector <1 x half> %288, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %290 = addrspacecast ptr addrspace(1) %222 to ptr, !dbg !26
  %291 = load <1 x half>, ptr %290, align 2, !dbg !26
  %292 = shufflevector <1 x half> %291, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %293 = addrspacecast ptr addrspace(1) %223 to ptr, !dbg !26
  %294 = load <1 x half>, ptr %293, align 2, !dbg !26
  %295 = shufflevector <1 x half> %294, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %296 = addrspacecast ptr addrspace(1) %224 to ptr, !dbg !26
  %297 = load <1 x half>, ptr %296, align 2, !dbg !26
  %298 = shufflevector <1 x half> %297, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %299 = addrspacecast ptr addrspace(1) %225 to ptr, !dbg !26
  %300 = load <1 x half>, ptr %299, align 2, !dbg !26
  %301 = shufflevector <1 x half> %300, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %302 = addrspacecast ptr addrspace(1) %226 to ptr, !dbg !26
  %303 = load <1 x half>, ptr %302, align 2, !dbg !26
  %304 = shufflevector <1 x half> %303, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %305 = addrspacecast ptr addrspace(1) %251 to ptr, !dbg !26
  %306 = load <1 x half>, ptr %305, align 2, !dbg !26
  %307 = addrspacecast ptr addrspace(1) %252 to ptr, !dbg !26
  %308 = load <1 x half>, ptr %307, align 2, !dbg !26
  %309 = addrspacecast ptr addrspace(1) %253 to ptr, !dbg !26
  %310 = load <1 x half>, ptr %309, align 2, !dbg !26
  %311 = shufflevector <1 x half> %310, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %312 = addrspacecast ptr addrspace(1) %254 to ptr, !dbg !26
  %313 = load <1 x half>, ptr %312, align 2, !dbg !26
  %314 = shufflevector <1 x half> %313, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %315 = addrspacecast ptr addrspace(1) %255 to ptr, !dbg !26
  %316 = load <1 x half>, ptr %315, align 2, !dbg !26
  %317 = shufflevector <1 x half> %316, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %318 = addrspacecast ptr addrspace(1) %256 to ptr, !dbg !26
  %319 = load <1 x half>, ptr %318, align 2, !dbg !26
  %320 = shufflevector <1 x half> %319, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %321 = addrspacecast ptr addrspace(1) %257 to ptr, !dbg !26
  %322 = load <1 x half>, ptr %321, align 2, !dbg !26
  %323 = shufflevector <1 x half> %322, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %324 = addrspacecast ptr addrspace(1) %258 to ptr, !dbg !26
  %325 = load <1 x half>, ptr %324, align 2, !dbg !26
  %326 = shufflevector <1 x half> %325, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %327 = addrspacecast ptr addrspace(1) %121 to ptr, !dbg !14
  %328 = load half, ptr %327, align 2, !dbg !14
  %329 = addrspacecast ptr addrspace(1) %122 to ptr, !dbg !14
  %330 = load half, ptr %329, align 2, !dbg !14
  %331 = addrspacecast ptr addrspace(1) %123 to ptr, !dbg !14
  %332 = load half, ptr %331, align 2, !dbg !14
  %333 = addrspacecast ptr addrspace(1) %124 to ptr, !dbg !14
  %334 = load half, ptr %333, align 2, !dbg !14
  %335 = addrspacecast ptr addrspace(1) %125 to ptr, !dbg !14
  %336 = load half, ptr %335, align 2, !dbg !14
  %337 = addrspacecast ptr addrspace(1) %126 to ptr, !dbg !14
  %338 = load half, ptr %337, align 2, !dbg !14
  %339 = addrspacecast ptr addrspace(1) %127 to ptr, !dbg !14
  %340 = load half, ptr %339, align 2, !dbg !14
  %341 = addrspacecast ptr addrspace(1) %128 to ptr, !dbg !14
  %342 = load half, ptr %341, align 2, !dbg !14
  %343 = addrspacecast ptr addrspace(1) %153 to ptr, !dbg !14
  %344 = load half, ptr %343, align 2, !dbg !14
  %345 = addrspacecast ptr addrspace(1) %154 to ptr, !dbg !14
  %346 = load half, ptr %345, align 2, !dbg !14
  %347 = addrspacecast ptr addrspace(1) %155 to ptr, !dbg !14
  %348 = load half, ptr %347, align 2, !dbg !14
  %349 = addrspacecast ptr addrspace(1) %156 to ptr, !dbg !14
  %350 = load half, ptr %349, align 2, !dbg !14
  %351 = addrspacecast ptr addrspace(1) %157 to ptr, !dbg !14
  %352 = load half, ptr %351, align 2, !dbg !14
  %353 = addrspacecast ptr addrspace(1) %158 to ptr, !dbg !14
  %354 = load half, ptr %353, align 2, !dbg !14
  %355 = addrspacecast ptr addrspace(1) %159 to ptr, !dbg !14
  %356 = load half, ptr %355, align 2, !dbg !14
  %357 = addrspacecast ptr addrspace(1) %160 to ptr, !dbg !14
  %358 = load half, ptr %357, align 2, !dbg !14
  %359 = insertelement <8 x half> poison, half %328, i64 0, !dbg !27
  %360 = insertelement <8 x half> %359, half %330, i64 1, !dbg !27
  %361 = insertelement <8 x half> %360, half %332, i64 2, !dbg !27
  %362 = insertelement <8 x half> %361, half %334, i64 3, !dbg !27
  %363 = insertelement <8 x half> %362, half %336, i64 4, !dbg !27
  %364 = insertelement <8 x half> %363, half %338, i64 5, !dbg !27
  %365 = insertelement <8 x half> %364, half %340, i64 6, !dbg !27
  %366 = insertelement <8 x half> %365, half %342, i64 7, !dbg !27
  %367 = fpext <8 x half> %366 to <8 x float>, !dbg !27
  %368 = insertelement <8 x float> poison, float %68, i64 0, !dbg !27
  %369 = shufflevector <8 x float> %368, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !27
  %370 = fmul <8 x float> %369, %367, !dbg !27
  %371 = fptrunc <8 x float> %370 to <8 x half>, !dbg !28
  %372 = insertelement <8 x half> poison, half %344, i64 0, !dbg !27
  %373 = insertelement <8 x half> %372, half %346, i64 1, !dbg !27
  %374 = insertelement <8 x half> %373, half %348, i64 2, !dbg !27
  %375 = insertelement <8 x half> %374, half %350, i64 3, !dbg !27
  %376 = insertelement <8 x half> %375, half %352, i64 4, !dbg !27
  %377 = insertelement <8 x half> %376, half %354, i64 5, !dbg !27
  %378 = insertelement <8 x half> %377, half %356, i64 6, !dbg !27
  %379 = insertelement <8 x half> %378, half %358, i64 7, !dbg !27
  %380 = fpext <8 x half> %379 to <8 x float>, !dbg !27
  %381 = fmul <8 x float> %369, %380, !dbg !27
  %382 = fptrunc <8 x float> %381 to <8 x half>, !dbg !28
  %383 = addrspacecast ptr addrspace(1) %227 to ptr, !dbg !26
  %384 = load <1 x half>, ptr %383, align 2, !dbg !26
  %385 = addrspacecast ptr addrspace(1) %228 to ptr, !dbg !26
  %386 = load <1 x half>, ptr %385, align 2, !dbg !26
  %387 = addrspacecast ptr addrspace(1) %229 to ptr, !dbg !26
  %388 = load <1 x half>, ptr %387, align 2, !dbg !26
  %389 = shufflevector <1 x half> %388, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %390 = addrspacecast ptr addrspace(1) %230 to ptr, !dbg !26
  %391 = load <1 x half>, ptr %390, align 2, !dbg !26
  %392 = shufflevector <1 x half> %391, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %393 = addrspacecast ptr addrspace(1) %231 to ptr, !dbg !26
  %394 = load <1 x half>, ptr %393, align 2, !dbg !26
  %395 = shufflevector <1 x half> %394, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %396 = addrspacecast ptr addrspace(1) %232 to ptr, !dbg !26
  %397 = load <1 x half>, ptr %396, align 2, !dbg !26
  %398 = shufflevector <1 x half> %397, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %399 = addrspacecast ptr addrspace(1) %233 to ptr, !dbg !26
  %400 = load <1 x half>, ptr %399, align 2, !dbg !26
  %401 = shufflevector <1 x half> %400, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %402 = addrspacecast ptr addrspace(1) %234 to ptr, !dbg !26
  %403 = load <1 x half>, ptr %402, align 2, !dbg !26
  %404 = shufflevector <1 x half> %403, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %405 = addrspacecast ptr addrspace(1) %259 to ptr, !dbg !26
  %406 = load <1 x half>, ptr %405, align 2, !dbg !26
  %407 = addrspacecast ptr addrspace(1) %260 to ptr, !dbg !26
  %408 = load <1 x half>, ptr %407, align 2, !dbg !26
  %409 = addrspacecast ptr addrspace(1) %261 to ptr, !dbg !26
  %410 = load <1 x half>, ptr %409, align 2, !dbg !26
  %411 = shufflevector <1 x half> %410, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %412 = addrspacecast ptr addrspace(1) %262 to ptr, !dbg !26
  %413 = load <1 x half>, ptr %412, align 2, !dbg !26
  %414 = shufflevector <1 x half> %413, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %415 = addrspacecast ptr addrspace(1) %263 to ptr, !dbg !26
  %416 = load <1 x half>, ptr %415, align 2, !dbg !26
  %417 = shufflevector <1 x half> %416, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %418 = addrspacecast ptr addrspace(1) %264 to ptr, !dbg !26
  %419 = load <1 x half>, ptr %418, align 2, !dbg !26
  %420 = shufflevector <1 x half> %419, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %421 = addrspacecast ptr addrspace(1) %265 to ptr, !dbg !26
  %422 = load <1 x half>, ptr %421, align 2, !dbg !26
  %423 = shufflevector <1 x half> %422, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %424 = addrspacecast ptr addrspace(1) %266 to ptr, !dbg !26
  %425 = load <1 x half>, ptr %424, align 2, !dbg !26
  %426 = shufflevector <1 x half> %425, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %427 = addrspacecast ptr addrspace(1) %129 to ptr, !dbg !14
  %428 = load half, ptr %427, align 2, !dbg !14
  %429 = addrspacecast ptr addrspace(1) %130 to ptr, !dbg !14
  %430 = load half, ptr %429, align 2, !dbg !14
  %431 = addrspacecast ptr addrspace(1) %131 to ptr, !dbg !14
  %432 = load half, ptr %431, align 2, !dbg !14
  %433 = addrspacecast ptr addrspace(1) %132 to ptr, !dbg !14
  %434 = load half, ptr %433, align 2, !dbg !14
  %435 = addrspacecast ptr addrspace(1) %133 to ptr, !dbg !14
  %436 = load half, ptr %435, align 2, !dbg !14
  %437 = addrspacecast ptr addrspace(1) %134 to ptr, !dbg !14
  %438 = load half, ptr %437, align 2, !dbg !14
  %439 = addrspacecast ptr addrspace(1) %135 to ptr, !dbg !14
  %440 = load half, ptr %439, align 2, !dbg !14
  %441 = addrspacecast ptr addrspace(1) %136 to ptr, !dbg !14
  %442 = load half, ptr %441, align 2, !dbg !14
  %443 = addrspacecast ptr addrspace(1) %161 to ptr, !dbg !14
  %444 = load half, ptr %443, align 2, !dbg !14
  %445 = addrspacecast ptr addrspace(1) %162 to ptr, !dbg !14
  %446 = load half, ptr %445, align 2, !dbg !14
  %447 = addrspacecast ptr addrspace(1) %163 to ptr, !dbg !14
  %448 = load half, ptr %447, align 2, !dbg !14
  %449 = addrspacecast ptr addrspace(1) %164 to ptr, !dbg !14
  %450 = load half, ptr %449, align 2, !dbg !14
  %451 = addrspacecast ptr addrspace(1) %165 to ptr, !dbg !14
  %452 = load half, ptr %451, align 2, !dbg !14
  %453 = addrspacecast ptr addrspace(1) %166 to ptr, !dbg !14
  %454 = load half, ptr %453, align 2, !dbg !14
  %455 = addrspacecast ptr addrspace(1) %167 to ptr, !dbg !14
  %456 = load half, ptr %455, align 2, !dbg !14
  %457 = addrspacecast ptr addrspace(1) %168 to ptr, !dbg !14
  %458 = load half, ptr %457, align 2, !dbg !14
  %459 = insertelement <8 x half> poison, half %428, i64 0, !dbg !27
  %460 = insertelement <8 x half> %459, half %430, i64 1, !dbg !27
  %461 = insertelement <8 x half> %460, half %432, i64 2, !dbg !27
  %462 = insertelement <8 x half> %461, half %434, i64 3, !dbg !27
  %463 = insertelement <8 x half> %462, half %436, i64 4, !dbg !27
  %464 = insertelement <8 x half> %463, half %438, i64 5, !dbg !27
  %465 = insertelement <8 x half> %464, half %440, i64 6, !dbg !27
  %466 = insertelement <8 x half> %465, half %442, i64 7, !dbg !27
  %467 = fpext <8 x half> %466 to <8 x float>, !dbg !27
  %468 = fmul <8 x float> %369, %467, !dbg !27
  %469 = fptrunc <8 x float> %468 to <8 x half>, !dbg !28
  %470 = insertelement <8 x half> poison, half %444, i64 0, !dbg !27
  %471 = insertelement <8 x half> %470, half %446, i64 1, !dbg !27
  %472 = insertelement <8 x half> %471, half %448, i64 2, !dbg !27
  %473 = insertelement <8 x half> %472, half %450, i64 3, !dbg !27
  %474 = insertelement <8 x half> %473, half %452, i64 4, !dbg !27
  %475 = insertelement <8 x half> %474, half %454, i64 5, !dbg !27
  %476 = insertelement <8 x half> %475, half %456, i64 6, !dbg !27
  %477 = insertelement <8 x half> %476, half %458, i64 7, !dbg !27
  %478 = fpext <8 x half> %477 to <8 x float>, !dbg !27
  %479 = fmul <8 x float> %369, %478, !dbg !27
  %480 = fptrunc <8 x float> %479 to <8 x half>, !dbg !28
  %481 = lshr i32 %28, 1, !dbg !26
  %482 = and i32 %481, 3, !dbg !26
  %483 = shl nuw nsw i32 %28, 5, !dbg !26
  %484 = lshr exact i32 %34, 3, !dbg !26
  %485 = xor i32 %482, %484, !dbg !26
  %486 = shl nuw nsw i32 %485, 3, !dbg !26
  %487 = or i32 %486, %483, !dbg !26
  %488 = zext i32 %487 to i64, !dbg !26
  %489 = getelementptr half, ptr addrspace(3) @global_smem, i64 %488, !dbg !26
  %490 = lshr i32 %29, 1, !dbg !26
  %491 = and i32 %490, 3, !dbg !26
  %492 = xor i32 %491, %484, !dbg !26
  %493 = shl nuw nsw i32 %492, 3, !dbg !26
  %494 = or i32 %493, %483, !dbg !26
  %495 = zext i32 %494 to i64, !dbg !26
  %496 = getelementptr half, ptr addrspace(3) @global_smem, i64 %495, !dbg !26
  %497 = getelementptr half, ptr addrspace(3) %496, i64 2048, !dbg !26
  %498 = shufflevector <1 x half> %284, <1 x half> %286, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %499 = shufflevector <8 x half> %498, <8 x half> %289, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %500 = shufflevector <8 x half> %499, <8 x half> %292, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %501 = shufflevector <8 x half> %500, <8 x half> %295, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !26
  %502 = shufflevector <8 x half> %501, <8 x half> %298, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !26
  %503 = shufflevector <8 x half> %502, <8 x half> %301, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !26
  %504 = shufflevector <8 x half> %503, <8 x half> %304, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !26
  store <8 x half> %504, ptr addrspace(3) %489, align 16, !dbg !26
  %505 = shufflevector <1 x half> %306, <1 x half> %308, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %506 = shufflevector <8 x half> %505, <8 x half> %311, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %507 = shufflevector <8 x half> %506, <8 x half> %314, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %508 = shufflevector <8 x half> %507, <8 x half> %317, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !26
  %509 = shufflevector <8 x half> %508, <8 x half> %320, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !26
  %510 = shufflevector <8 x half> %509, <8 x half> %323, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !26
  %511 = shufflevector <8 x half> %510, <8 x half> %326, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !26
  store <8 x half> %511, ptr addrspace(3) %497, align 16, !dbg !26
  %512 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %488, !dbg !28
  %513 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %495, !dbg !28
  %514 = getelementptr half, ptr addrspace(3) %513, i64 2048, !dbg !28
  store <8 x half> %371, ptr addrspace(3) %512, align 16, !dbg !28
  store <8 x half> %382, ptr addrspace(3) %514, align 16, !dbg !28
  fence syncscope("workgroup") release, !dbg !26
  tail call void @llvm.amdgcn.s.barrier(), !dbg !26
  fence syncscope("workgroup") acquire, !dbg !26
  %515 = icmp ugt i32 %23, 31, !dbg !26
  %516 = zext i1 %515 to i32, !dbg !26
  %517 = lshr i32 %31, 1, !dbg !26
  %518 = and i32 %517, 3, !dbg !26
  %519 = xor i32 %518, %516, !dbg !26
  %520 = shl nuw nsw i32 %519, 3, !dbg !26
  %521 = shl nuw nsw i32 %31, 5, !dbg !26
  %522 = or i32 %520, %521, !dbg !26
  %523 = or i32 %516, 2, !dbg !26
  %524 = xor i32 %523, %518, !dbg !26
  %525 = shl nuw nsw i32 %524, 3, !dbg !26
  %526 = or i32 %525, %521, !dbg !26
  %527 = zext i32 %522 to i64, !dbg !26
  %528 = getelementptr half, ptr addrspace(3) @global_smem, i64 %527, !dbg !26
  %529 = load <8 x half>, ptr addrspace(3) %528, align 16, !dbg !26
  %530 = zext i32 %526 to i64, !dbg !26
  %531 = getelementptr half, ptr addrspace(3) @global_smem, i64 %530, !dbg !26
  %532 = load <8 x half>, ptr addrspace(3) %531, align 16, !dbg !26
  %533 = or i32 %522, 1024, !dbg !26
  %534 = zext i32 %533 to i64, !dbg !26
  %535 = getelementptr half, ptr addrspace(3) @global_smem, i64 %534, !dbg !26
  %536 = load <8 x half>, ptr addrspace(3) %535, align 16, !dbg !26
  %537 = or i32 %526, 1024, !dbg !26
  %538 = zext i32 %537 to i64, !dbg !26
  %539 = getelementptr half, ptr addrspace(3) @global_smem, i64 %538, !dbg !26
  %540 = load <8 x half>, ptr addrspace(3) %539, align 16, !dbg !26
  %541 = or i32 %522, 2048, !dbg !26
  %542 = zext i32 %541 to i64, !dbg !26
  %543 = getelementptr half, ptr addrspace(3) @global_smem, i64 %542, !dbg !26
  %544 = load <8 x half>, ptr addrspace(3) %543, align 16, !dbg !26
  %545 = or i32 %526, 2048, !dbg !26
  %546 = zext i32 %545 to i64, !dbg !26
  %547 = getelementptr half, ptr addrspace(3) @global_smem, i64 %546, !dbg !26
  %548 = load <8 x half>, ptr addrspace(3) %547, align 16, !dbg !26
  %549 = or i32 %522, 3072, !dbg !26
  %550 = zext i32 %549 to i64, !dbg !26
  %551 = getelementptr half, ptr addrspace(3) @global_smem, i64 %550, !dbg !26
  %552 = load <8 x half>, ptr addrspace(3) %551, align 16, !dbg !26
  %553 = or i32 %526, 3072, !dbg !26
  %554 = zext i32 %553 to i64, !dbg !26
  %555 = getelementptr half, ptr addrspace(3) @global_smem, i64 %554, !dbg !26
  %556 = load <8 x half>, ptr addrspace(3) %555, align 16, !dbg !26
  %557 = lshr i32 %22, 1, !dbg !28
  %558 = and i32 %557, 3, !dbg !28
  %559 = xor i32 %558, %516, !dbg !28
  %560 = shl nuw nsw i32 %559, 3, !dbg !28
  %561 = shl nuw nsw i32 %32, 5, !dbg !28
  %562 = or i32 %561, %560, !dbg !28
  %563 = xor i32 %523, %558, !dbg !28
  %564 = shl nuw nsw i32 %563, 3, !dbg !28
  %565 = or i32 %564, %561, !dbg !28
  %566 = zext i32 %562 to i64, !dbg !28
  %567 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %566, !dbg !28
  %568 = load <8 x half>, ptr addrspace(3) %567, align 16, !dbg !28
  %569 = zext i32 %565 to i64, !dbg !28
  %570 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %569, !dbg !28
  %571 = load <8 x half>, ptr addrspace(3) %570, align 16, !dbg !28
  %572 = shufflevector <8 x half> %568, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %573 = shufflevector <8 x half> %568, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %574 = shufflevector <8 x half> %571, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %575 = shufflevector <8 x half> %571, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %576 = shufflevector <8 x half> %529, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %577 = shufflevector <8 x half> %529, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %578 = shufflevector <8 x half> %532, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %579 = shufflevector <8 x half> %532, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %580 = shufflevector <8 x half> %536, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %581 = shufflevector <8 x half> %536, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %582 = shufflevector <8 x half> %540, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %583 = shufflevector <8 x half> %540, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %584 = shufflevector <8 x half> %544, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %585 = shufflevector <8 x half> %544, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %586 = shufflevector <8 x half> %548, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %587 = shufflevector <8 x half> %548, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %588 = shufflevector <8 x half> %552, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %589 = shufflevector <8 x half> %552, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %590 = shufflevector <8 x half> %556, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %591 = shufflevector <8 x half> %556, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %592 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %576, <4 x half> %572, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !29
  %593 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %577, <4 x half> %573, <16 x float> %592, i32 0, i32 0, i32 0), !dbg !29
  %594 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %578, <4 x half> %574, <16 x float> %593, i32 0, i32 0, i32 0), !dbg !29
  %595 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %579, <4 x half> %575, <16 x float> %594, i32 0, i32 0, i32 0), !dbg !29
  %596 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %580, <4 x half> %572, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !29
  %597 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %581, <4 x half> %573, <16 x float> %596, i32 0, i32 0, i32 0), !dbg !29
  %598 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %582, <4 x half> %574, <16 x float> %597, i32 0, i32 0, i32 0), !dbg !29
  %599 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %583, <4 x half> %575, <16 x float> %598, i32 0, i32 0, i32 0), !dbg !29
  %600 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %584, <4 x half> %572, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !29
  %601 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %585, <4 x half> %573, <16 x float> %600, i32 0, i32 0, i32 0), !dbg !29
  %602 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %586, <4 x half> %574, <16 x float> %601, i32 0, i32 0, i32 0), !dbg !29
  %603 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %587, <4 x half> %575, <16 x float> %602, i32 0, i32 0, i32 0), !dbg !29
  %604 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %588, <4 x half> %572, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !29
  %605 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %589, <4 x half> %573, <16 x float> %604, i32 0, i32 0, i32 0), !dbg !29
  %606 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %590, <4 x half> %574, <16 x float> %605, i32 0, i32 0, i32 0), !dbg !29
  %607 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %591, <4 x half> %575, <16 x float> %606, i32 0, i32 0, i32 0), !dbg !29
  fence syncscope("workgroup") release, !dbg !26
  tail call void @llvm.amdgcn.s.barrier(), !dbg !26
  fence syncscope("workgroup") acquire, !dbg !26
  %608 = shufflevector <1 x half> %384, <1 x half> %386, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %609 = shufflevector <8 x half> %608, <8 x half> %389, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %610 = shufflevector <8 x half> %609, <8 x half> %392, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %611 = shufflevector <8 x half> %610, <8 x half> %395, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !26
  %612 = shufflevector <8 x half> %611, <8 x half> %398, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !26
  %613 = shufflevector <8 x half> %612, <8 x half> %401, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !26
  %614 = shufflevector <8 x half> %613, <8 x half> %404, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !26
  store <8 x half> %614, ptr addrspace(3) %489, align 16, !dbg !26
  %615 = shufflevector <1 x half> %406, <1 x half> %408, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %616 = shufflevector <8 x half> %615, <8 x half> %411, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %617 = shufflevector <8 x half> %616, <8 x half> %414, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %618 = shufflevector <8 x half> %617, <8 x half> %417, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !26
  %619 = shufflevector <8 x half> %618, <8 x half> %420, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !26
  %620 = shufflevector <8 x half> %619, <8 x half> %423, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !26
  %621 = shufflevector <8 x half> %620, <8 x half> %426, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !26
  store <8 x half> %621, ptr addrspace(3) %497, align 16, !dbg !26
  store <8 x half> %469, ptr addrspace(3) %512, align 16, !dbg !28
  store <8 x half> %480, ptr addrspace(3) %514, align 16, !dbg !28
  %622 = addrspacecast ptr addrspace(1) %235 to ptr, !dbg !26
  %623 = load <1 x half>, ptr %622, align 2, !dbg !26
  %624 = addrspacecast ptr addrspace(1) %236 to ptr, !dbg !26
  %625 = load <1 x half>, ptr %624, align 2, !dbg !26
  %626 = addrspacecast ptr addrspace(1) %237 to ptr, !dbg !26
  %627 = load <1 x half>, ptr %626, align 2, !dbg !26
  %628 = shufflevector <1 x half> %627, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %629 = addrspacecast ptr addrspace(1) %238 to ptr, !dbg !26
  %630 = load <1 x half>, ptr %629, align 2, !dbg !26
  %631 = shufflevector <1 x half> %630, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %632 = addrspacecast ptr addrspace(1) %239 to ptr, !dbg !26
  %633 = load <1 x half>, ptr %632, align 2, !dbg !26
  %634 = shufflevector <1 x half> %633, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %635 = addrspacecast ptr addrspace(1) %240 to ptr, !dbg !26
  %636 = load <1 x half>, ptr %635, align 2, !dbg !26
  %637 = shufflevector <1 x half> %636, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %638 = addrspacecast ptr addrspace(1) %241 to ptr, !dbg !26
  %639 = load <1 x half>, ptr %638, align 2, !dbg !26
  %640 = shufflevector <1 x half> %639, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %641 = addrspacecast ptr addrspace(1) %242 to ptr, !dbg !26
  %642 = load <1 x half>, ptr %641, align 2, !dbg !26
  %643 = shufflevector <1 x half> %642, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %644 = addrspacecast ptr addrspace(1) %267 to ptr, !dbg !26
  %645 = load <1 x half>, ptr %644, align 2, !dbg !26
  %646 = addrspacecast ptr addrspace(1) %268 to ptr, !dbg !26
  %647 = load <1 x half>, ptr %646, align 2, !dbg !26
  %648 = addrspacecast ptr addrspace(1) %269 to ptr, !dbg !26
  %649 = load <1 x half>, ptr %648, align 2, !dbg !26
  %650 = shufflevector <1 x half> %649, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %651 = addrspacecast ptr addrspace(1) %270 to ptr, !dbg !26
  %652 = load <1 x half>, ptr %651, align 2, !dbg !26
  %653 = shufflevector <1 x half> %652, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %654 = addrspacecast ptr addrspace(1) %271 to ptr, !dbg !26
  %655 = load <1 x half>, ptr %654, align 2, !dbg !26
  %656 = shufflevector <1 x half> %655, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %657 = addrspacecast ptr addrspace(1) %272 to ptr, !dbg !26
  %658 = load <1 x half>, ptr %657, align 2, !dbg !26
  %659 = shufflevector <1 x half> %658, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %660 = addrspacecast ptr addrspace(1) %273 to ptr, !dbg !26
  %661 = load <1 x half>, ptr %660, align 2, !dbg !26
  %662 = shufflevector <1 x half> %661, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %663 = addrspacecast ptr addrspace(1) %274 to ptr, !dbg !26
  %664 = load <1 x half>, ptr %663, align 2, !dbg !26
  %665 = shufflevector <1 x half> %664, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %666 = addrspacecast ptr addrspace(1) %137 to ptr, !dbg !14
  %667 = load half, ptr %666, align 2, !dbg !14
  %668 = addrspacecast ptr addrspace(1) %138 to ptr, !dbg !14
  %669 = load half, ptr %668, align 2, !dbg !14
  %670 = addrspacecast ptr addrspace(1) %139 to ptr, !dbg !14
  %671 = load half, ptr %670, align 2, !dbg !14
  %672 = addrspacecast ptr addrspace(1) %140 to ptr, !dbg !14
  %673 = load half, ptr %672, align 2, !dbg !14
  %674 = addrspacecast ptr addrspace(1) %141 to ptr, !dbg !14
  %675 = load half, ptr %674, align 2, !dbg !14
  %676 = addrspacecast ptr addrspace(1) %142 to ptr, !dbg !14
  %677 = load half, ptr %676, align 2, !dbg !14
  %678 = addrspacecast ptr addrspace(1) %143 to ptr, !dbg !14
  %679 = load half, ptr %678, align 2, !dbg !14
  %680 = addrspacecast ptr addrspace(1) %144 to ptr, !dbg !14
  %681 = load half, ptr %680, align 2, !dbg !14
  %682 = addrspacecast ptr addrspace(1) %169 to ptr, !dbg !14
  %683 = load half, ptr %682, align 2, !dbg !14
  %684 = addrspacecast ptr addrspace(1) %170 to ptr, !dbg !14
  %685 = load half, ptr %684, align 2, !dbg !14
  %686 = addrspacecast ptr addrspace(1) %171 to ptr, !dbg !14
  %687 = load half, ptr %686, align 2, !dbg !14
  %688 = addrspacecast ptr addrspace(1) %172 to ptr, !dbg !14
  %689 = load half, ptr %688, align 2, !dbg !14
  %690 = addrspacecast ptr addrspace(1) %173 to ptr, !dbg !14
  %691 = load half, ptr %690, align 2, !dbg !14
  %692 = addrspacecast ptr addrspace(1) %174 to ptr, !dbg !14
  %693 = load half, ptr %692, align 2, !dbg !14
  %694 = addrspacecast ptr addrspace(1) %175 to ptr, !dbg !14
  %695 = load half, ptr %694, align 2, !dbg !14
  %696 = addrspacecast ptr addrspace(1) %176 to ptr, !dbg !14
  %697 = load half, ptr %696, align 2, !dbg !14
  %698 = insertelement <8 x half> poison, half %667, i64 0, !dbg !27
  %699 = insertelement <8 x half> %698, half %669, i64 1, !dbg !27
  %700 = insertelement <8 x half> %699, half %671, i64 2, !dbg !27
  %701 = insertelement <8 x half> %700, half %673, i64 3, !dbg !27
  %702 = insertelement <8 x half> %701, half %675, i64 4, !dbg !27
  %703 = insertelement <8 x half> %702, half %677, i64 5, !dbg !27
  %704 = insertelement <8 x half> %703, half %679, i64 6, !dbg !27
  %705 = insertelement <8 x half> %704, half %681, i64 7, !dbg !27
  %706 = fpext <8 x half> %705 to <8 x float>, !dbg !27
  %707 = fmul <8 x float> %369, %706, !dbg !27
  %708 = fptrunc <8 x float> %707 to <8 x half>, !dbg !28
  %709 = insertelement <8 x half> poison, half %683, i64 0, !dbg !27
  %710 = insertelement <8 x half> %709, half %685, i64 1, !dbg !27
  %711 = insertelement <8 x half> %710, half %687, i64 2, !dbg !27
  %712 = insertelement <8 x half> %711, half %689, i64 3, !dbg !27
  %713 = insertelement <8 x half> %712, half %691, i64 4, !dbg !27
  %714 = insertelement <8 x half> %713, half %693, i64 5, !dbg !27
  %715 = insertelement <8 x half> %714, half %695, i64 6, !dbg !27
  %716 = insertelement <8 x half> %715, half %697, i64 7, !dbg !27
  %717 = fpext <8 x half> %716 to <8 x float>, !dbg !27
  %718 = fmul <8 x float> %369, %717, !dbg !27
  %719 = fptrunc <8 x float> %718 to <8 x half>, !dbg !28
  fence syncscope("workgroup") release, !dbg !26
  tail call void @llvm.amdgcn.s.barrier(), !dbg !26
  fence syncscope("workgroup") acquire, !dbg !26
  %720 = load <8 x half>, ptr addrspace(3) %528, align 16, !dbg !26
  %721 = load <8 x half>, ptr addrspace(3) %531, align 16, !dbg !26
  %722 = load <8 x half>, ptr addrspace(3) %535, align 16, !dbg !26
  %723 = load <8 x half>, ptr addrspace(3) %539, align 16, !dbg !26
  %724 = load <8 x half>, ptr addrspace(3) %543, align 16, !dbg !26
  %725 = load <8 x half>, ptr addrspace(3) %547, align 16, !dbg !26
  %726 = load <8 x half>, ptr addrspace(3) %551, align 16, !dbg !26
  %727 = load <8 x half>, ptr addrspace(3) %555, align 16, !dbg !26
  %728 = load <8 x half>, ptr addrspace(3) %567, align 16, !dbg !28
  %729 = load <8 x half>, ptr addrspace(3) %570, align 16, !dbg !28
  %730 = shufflevector <8 x half> %728, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %731 = shufflevector <8 x half> %728, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %732 = shufflevector <8 x half> %729, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %733 = shufflevector <8 x half> %729, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %734 = shufflevector <8 x half> %720, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %735 = shufflevector <8 x half> %720, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %736 = shufflevector <8 x half> %721, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %737 = shufflevector <8 x half> %721, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %738 = shufflevector <8 x half> %722, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %739 = shufflevector <8 x half> %722, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %740 = shufflevector <8 x half> %723, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %741 = shufflevector <8 x half> %723, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %742 = shufflevector <8 x half> %724, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %743 = shufflevector <8 x half> %724, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %744 = shufflevector <8 x half> %725, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %745 = shufflevector <8 x half> %725, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %746 = shufflevector <8 x half> %726, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %747 = shufflevector <8 x half> %726, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %748 = shufflevector <8 x half> %727, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %749 = shufflevector <8 x half> %727, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %750 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %734, <4 x half> %730, <16 x float> %595, i32 0, i32 0, i32 0), !dbg !29
  %751 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %735, <4 x half> %731, <16 x float> %750, i32 0, i32 0, i32 0), !dbg !29
  %752 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %736, <4 x half> %732, <16 x float> %751, i32 0, i32 0, i32 0), !dbg !29
  %753 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %737, <4 x half> %733, <16 x float> %752, i32 0, i32 0, i32 0), !dbg !29
  %754 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %738, <4 x half> %730, <16 x float> %599, i32 0, i32 0, i32 0), !dbg !29
  %755 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %739, <4 x half> %731, <16 x float> %754, i32 0, i32 0, i32 0), !dbg !29
  %756 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %740, <4 x half> %732, <16 x float> %755, i32 0, i32 0, i32 0), !dbg !29
  %757 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %741, <4 x half> %733, <16 x float> %756, i32 0, i32 0, i32 0), !dbg !29
  %758 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %742, <4 x half> %730, <16 x float> %603, i32 0, i32 0, i32 0), !dbg !29
  %759 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %743, <4 x half> %731, <16 x float> %758, i32 0, i32 0, i32 0), !dbg !29
  %760 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %744, <4 x half> %732, <16 x float> %759, i32 0, i32 0, i32 0), !dbg !29
  %761 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %745, <4 x half> %733, <16 x float> %760, i32 0, i32 0, i32 0), !dbg !29
  %762 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %746, <4 x half> %730, <16 x float> %607, i32 0, i32 0, i32 0), !dbg !29
  %763 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %747, <4 x half> %731, <16 x float> %762, i32 0, i32 0, i32 0), !dbg !29
  %764 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %748, <4 x half> %732, <16 x float> %763, i32 0, i32 0, i32 0), !dbg !29
  %765 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %749, <4 x half> %733, <16 x float> %764, i32 0, i32 0, i32 0), !dbg !29
  fence syncscope("workgroup") release, !dbg !26
  tail call void @llvm.amdgcn.s.barrier(), !dbg !26
  fence syncscope("workgroup") acquire, !dbg !26
  %766 = shufflevector <1 x half> %623, <1 x half> %625, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %767 = shufflevector <8 x half> %766, <8 x half> %628, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %768 = shufflevector <8 x half> %767, <8 x half> %631, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %769 = shufflevector <8 x half> %768, <8 x half> %634, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !26
  %770 = shufflevector <8 x half> %769, <8 x half> %637, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !26
  %771 = shufflevector <8 x half> %770, <8 x half> %640, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !26
  %772 = shufflevector <8 x half> %771, <8 x half> %643, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !26
  store <8 x half> %772, ptr addrspace(3) %489, align 16, !dbg !26
  %773 = shufflevector <1 x half> %645, <1 x half> %647, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %774 = shufflevector <8 x half> %773, <8 x half> %650, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %775 = shufflevector <8 x half> %774, <8 x half> %653, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %776 = shufflevector <8 x half> %775, <8 x half> %656, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !26
  %777 = shufflevector <8 x half> %776, <8 x half> %659, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !26
  %778 = shufflevector <8 x half> %777, <8 x half> %662, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !26
  %779 = shufflevector <8 x half> %778, <8 x half> %665, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !26
  store <8 x half> %779, ptr addrspace(3) %497, align 16, !dbg !26
  store <8 x half> %708, ptr addrspace(3) %512, align 16, !dbg !28
  store <8 x half> %719, ptr addrspace(3) %514, align 16, !dbg !28
  %780 = addrspacecast ptr addrspace(1) %243 to ptr, !dbg !26
  %781 = load <1 x half>, ptr %780, align 2, !dbg !26
  %782 = addrspacecast ptr addrspace(1) %244 to ptr, !dbg !26
  %783 = load <1 x half>, ptr %782, align 2, !dbg !26
  %784 = addrspacecast ptr addrspace(1) %245 to ptr, !dbg !26
  %785 = load <1 x half>, ptr %784, align 2, !dbg !26
  %786 = shufflevector <1 x half> %785, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %787 = addrspacecast ptr addrspace(1) %246 to ptr, !dbg !26
  %788 = load <1 x half>, ptr %787, align 2, !dbg !26
  %789 = shufflevector <1 x half> %788, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %790 = addrspacecast ptr addrspace(1) %247 to ptr, !dbg !26
  %791 = load <1 x half>, ptr %790, align 2, !dbg !26
  %792 = shufflevector <1 x half> %791, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %793 = addrspacecast ptr addrspace(1) %248 to ptr, !dbg !26
  %794 = load <1 x half>, ptr %793, align 2, !dbg !26
  %795 = shufflevector <1 x half> %794, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %796 = addrspacecast ptr addrspace(1) %249 to ptr, !dbg !26
  %797 = load <1 x half>, ptr %796, align 2, !dbg !26
  %798 = shufflevector <1 x half> %797, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %799 = addrspacecast ptr addrspace(1) %250 to ptr, !dbg !26
  %800 = load <1 x half>, ptr %799, align 2, !dbg !26
  %801 = shufflevector <1 x half> %800, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %802 = addrspacecast ptr addrspace(1) %275 to ptr, !dbg !26
  %803 = load <1 x half>, ptr %802, align 2, !dbg !26
  %804 = addrspacecast ptr addrspace(1) %276 to ptr, !dbg !26
  %805 = load <1 x half>, ptr %804, align 2, !dbg !26
  %806 = addrspacecast ptr addrspace(1) %277 to ptr, !dbg !26
  %807 = load <1 x half>, ptr %806, align 2, !dbg !26
  %808 = shufflevector <1 x half> %807, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %809 = addrspacecast ptr addrspace(1) %278 to ptr, !dbg !26
  %810 = load <1 x half>, ptr %809, align 2, !dbg !26
  %811 = shufflevector <1 x half> %810, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %812 = addrspacecast ptr addrspace(1) %279 to ptr, !dbg !26
  %813 = load <1 x half>, ptr %812, align 2, !dbg !26
  %814 = shufflevector <1 x half> %813, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %815 = addrspacecast ptr addrspace(1) %280 to ptr, !dbg !26
  %816 = load <1 x half>, ptr %815, align 2, !dbg !26
  %817 = shufflevector <1 x half> %816, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %818 = addrspacecast ptr addrspace(1) %281 to ptr, !dbg !26
  %819 = load <1 x half>, ptr %818, align 2, !dbg !26
  %820 = shufflevector <1 x half> %819, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %821 = addrspacecast ptr addrspace(1) %282 to ptr, !dbg !26
  %822 = load <1 x half>, ptr %821, align 2, !dbg !26
  %823 = shufflevector <1 x half> %822, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %824 = addrspacecast ptr addrspace(1) %145 to ptr, !dbg !14
  %825 = load half, ptr %824, align 2, !dbg !14
  %826 = addrspacecast ptr addrspace(1) %146 to ptr, !dbg !14
  %827 = load half, ptr %826, align 2, !dbg !14
  %828 = addrspacecast ptr addrspace(1) %147 to ptr, !dbg !14
  %829 = load half, ptr %828, align 2, !dbg !14
  %830 = addrspacecast ptr addrspace(1) %148 to ptr, !dbg !14
  %831 = load half, ptr %830, align 2, !dbg !14
  %832 = addrspacecast ptr addrspace(1) %149 to ptr, !dbg !14
  %833 = load half, ptr %832, align 2, !dbg !14
  %834 = addrspacecast ptr addrspace(1) %150 to ptr, !dbg !14
  %835 = load half, ptr %834, align 2, !dbg !14
  %836 = addrspacecast ptr addrspace(1) %151 to ptr, !dbg !14
  %837 = load half, ptr %836, align 2, !dbg !14
  %838 = addrspacecast ptr addrspace(1) %152 to ptr, !dbg !14
  %839 = load half, ptr %838, align 2, !dbg !14
  %840 = addrspacecast ptr addrspace(1) %177 to ptr, !dbg !14
  %841 = load half, ptr %840, align 2, !dbg !14
  %842 = addrspacecast ptr addrspace(1) %178 to ptr, !dbg !14
  %843 = load half, ptr %842, align 2, !dbg !14
  %844 = addrspacecast ptr addrspace(1) %179 to ptr, !dbg !14
  %845 = load half, ptr %844, align 2, !dbg !14
  %846 = addrspacecast ptr addrspace(1) %180 to ptr, !dbg !14
  %847 = load half, ptr %846, align 2, !dbg !14
  %848 = addrspacecast ptr addrspace(1) %181 to ptr, !dbg !14
  %849 = load half, ptr %848, align 2, !dbg !14
  %850 = addrspacecast ptr addrspace(1) %182 to ptr, !dbg !14
  %851 = load half, ptr %850, align 2, !dbg !14
  %852 = addrspacecast ptr addrspace(1) %183 to ptr, !dbg !14
  %853 = load half, ptr %852, align 2, !dbg !14
  %854 = addrspacecast ptr addrspace(1) %184 to ptr, !dbg !14
  %855 = load half, ptr %854, align 2, !dbg !14
  %856 = insertelement <8 x half> poison, half %825, i64 0, !dbg !27
  %857 = insertelement <8 x half> %856, half %827, i64 1, !dbg !27
  %858 = insertelement <8 x half> %857, half %829, i64 2, !dbg !27
  %859 = insertelement <8 x half> %858, half %831, i64 3, !dbg !27
  %860 = insertelement <8 x half> %859, half %833, i64 4, !dbg !27
  %861 = insertelement <8 x half> %860, half %835, i64 5, !dbg !27
  %862 = insertelement <8 x half> %861, half %837, i64 6, !dbg !27
  %863 = insertelement <8 x half> %862, half %839, i64 7, !dbg !27
  %864 = fpext <8 x half> %863 to <8 x float>, !dbg !27
  %865 = fmul <8 x float> %369, %864, !dbg !27
  %866 = fptrunc <8 x float> %865 to <8 x half>, !dbg !28
  %867 = insertelement <8 x half> poison, half %841, i64 0, !dbg !27
  %868 = insertelement <8 x half> %867, half %843, i64 1, !dbg !27
  %869 = insertelement <8 x half> %868, half %845, i64 2, !dbg !27
  %870 = insertelement <8 x half> %869, half %847, i64 3, !dbg !27
  %871 = insertelement <8 x half> %870, half %849, i64 4, !dbg !27
  %872 = insertelement <8 x half> %871, half %851, i64 5, !dbg !27
  %873 = insertelement <8 x half> %872, half %853, i64 6, !dbg !27
  %874 = insertelement <8 x half> %873, half %855, i64 7, !dbg !27
  %875 = fpext <8 x half> %874 to <8 x float>, !dbg !27
  %876 = fmul <8 x float> %369, %875, !dbg !27
  %877 = fptrunc <8 x float> %876 to <8 x half>, !dbg !28
  fence syncscope("workgroup") release, !dbg !26
  tail call void @llvm.amdgcn.s.barrier(), !dbg !26
  fence syncscope("workgroup") acquire, !dbg !26
  %878 = load <8 x half>, ptr addrspace(3) %528, align 16, !dbg !26
  %879 = load <8 x half>, ptr addrspace(3) %531, align 16, !dbg !26
  %880 = load <8 x half>, ptr addrspace(3) %535, align 16, !dbg !26
  %881 = load <8 x half>, ptr addrspace(3) %539, align 16, !dbg !26
  %882 = load <8 x half>, ptr addrspace(3) %543, align 16, !dbg !26
  %883 = load <8 x half>, ptr addrspace(3) %547, align 16, !dbg !26
  %884 = load <8 x half>, ptr addrspace(3) %551, align 16, !dbg !26
  %885 = load <8 x half>, ptr addrspace(3) %555, align 16, !dbg !26
  %886 = load <8 x half>, ptr addrspace(3) %567, align 16, !dbg !28
  %887 = load <8 x half>, ptr addrspace(3) %570, align 16, !dbg !28
  %888 = shufflevector <8 x half> %886, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %889 = shufflevector <8 x half> %886, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %890 = shufflevector <8 x half> %887, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %891 = shufflevector <8 x half> %887, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %892 = shufflevector <8 x half> %878, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %893 = shufflevector <8 x half> %878, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %894 = shufflevector <8 x half> %879, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %895 = shufflevector <8 x half> %879, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %896 = shufflevector <8 x half> %880, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %897 = shufflevector <8 x half> %880, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %898 = shufflevector <8 x half> %881, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %899 = shufflevector <8 x half> %881, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %900 = shufflevector <8 x half> %882, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %901 = shufflevector <8 x half> %882, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %902 = shufflevector <8 x half> %883, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %903 = shufflevector <8 x half> %883, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %904 = shufflevector <8 x half> %884, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %905 = shufflevector <8 x half> %884, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %906 = shufflevector <8 x half> %885, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %907 = shufflevector <8 x half> %885, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %908 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %892, <4 x half> %888, <16 x float> %753, i32 0, i32 0, i32 0), !dbg !29
  %909 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %893, <4 x half> %889, <16 x float> %908, i32 0, i32 0, i32 0), !dbg !29
  %910 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %894, <4 x half> %890, <16 x float> %909, i32 0, i32 0, i32 0), !dbg !29
  %911 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %895, <4 x half> %891, <16 x float> %910, i32 0, i32 0, i32 0), !dbg !29
  %912 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %896, <4 x half> %888, <16 x float> %757, i32 0, i32 0, i32 0), !dbg !29
  %913 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %897, <4 x half> %889, <16 x float> %912, i32 0, i32 0, i32 0), !dbg !29
  %914 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %898, <4 x half> %890, <16 x float> %913, i32 0, i32 0, i32 0), !dbg !29
  %915 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %899, <4 x half> %891, <16 x float> %914, i32 0, i32 0, i32 0), !dbg !29
  %916 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %900, <4 x half> %888, <16 x float> %761, i32 0, i32 0, i32 0), !dbg !29
  %917 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %901, <4 x half> %889, <16 x float> %916, i32 0, i32 0, i32 0), !dbg !29
  %918 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %902, <4 x half> %890, <16 x float> %917, i32 0, i32 0, i32 0), !dbg !29
  %919 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %903, <4 x half> %891, <16 x float> %918, i32 0, i32 0, i32 0), !dbg !29
  %920 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %904, <4 x half> %888, <16 x float> %765, i32 0, i32 0, i32 0), !dbg !29
  %921 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %905, <4 x half> %889, <16 x float> %920, i32 0, i32 0, i32 0), !dbg !29
  %922 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %906, <4 x half> %890, <16 x float> %921, i32 0, i32 0, i32 0), !dbg !29
  %923 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %907, <4 x half> %891, <16 x float> %922, i32 0, i32 0, i32 0), !dbg !29
  fence syncscope("workgroup") release, !dbg !26
  tail call void @llvm.amdgcn.s.barrier(), !dbg !26
  fence syncscope("workgroup") acquire, !dbg !26
  %924 = shufflevector <1 x half> %781, <1 x half> %783, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %925 = shufflevector <8 x half> %924, <8 x half> %786, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %926 = shufflevector <8 x half> %925, <8 x half> %789, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %927 = shufflevector <8 x half> %926, <8 x half> %792, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !26
  %928 = shufflevector <8 x half> %927, <8 x half> %795, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !26
  %929 = shufflevector <8 x half> %928, <8 x half> %798, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !26
  %930 = shufflevector <8 x half> %929, <8 x half> %801, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !26
  store <8 x half> %930, ptr addrspace(3) %489, align 16, !dbg !26
  %931 = shufflevector <1 x half> %803, <1 x half> %805, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %932 = shufflevector <8 x half> %931, <8 x half> %808, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %933 = shufflevector <8 x half> %932, <8 x half> %811, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %934 = shufflevector <8 x half> %933, <8 x half> %814, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !26
  %935 = shufflevector <8 x half> %934, <8 x half> %817, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !26
  %936 = shufflevector <8 x half> %935, <8 x half> %820, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !26
  %937 = shufflevector <8 x half> %936, <8 x half> %823, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !26
  store <8 x half> %937, ptr addrspace(3) %497, align 16, !dbg !26
  store <8 x half> %866, ptr addrspace(3) %512, align 16, !dbg !28
  store <8 x half> %877, ptr addrspace(3) %514, align 16, !dbg !28
  fence syncscope("workgroup") release, !dbg !26
  tail call void @llvm.amdgcn.s.barrier(), !dbg !26
  fence syncscope("workgroup") acquire, !dbg !26
  %938 = load <8 x half>, ptr addrspace(3) %528, align 16, !dbg !26
  %939 = load <8 x half>, ptr addrspace(3) %531, align 16, !dbg !26
  %940 = load <8 x half>, ptr addrspace(3) %535, align 16, !dbg !26
  %941 = load <8 x half>, ptr addrspace(3) %539, align 16, !dbg !26
  %942 = load <8 x half>, ptr addrspace(3) %543, align 16, !dbg !26
  %943 = load <8 x half>, ptr addrspace(3) %547, align 16, !dbg !26
  %944 = load <8 x half>, ptr addrspace(3) %551, align 16, !dbg !26
  %945 = load <8 x half>, ptr addrspace(3) %555, align 16, !dbg !26
  %946 = load <8 x half>, ptr addrspace(3) %567, align 16, !dbg !28
  %947 = load <8 x half>, ptr addrspace(3) %570, align 16, !dbg !28
  %948 = shufflevector <8 x half> %946, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %949 = shufflevector <8 x half> %946, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %950 = shufflevector <8 x half> %947, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %951 = shufflevector <8 x half> %947, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %952 = shufflevector <8 x half> %938, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %953 = shufflevector <8 x half> %938, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %954 = shufflevector <8 x half> %939, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %955 = shufflevector <8 x half> %939, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %956 = shufflevector <8 x half> %940, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %957 = shufflevector <8 x half> %940, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %958 = shufflevector <8 x half> %941, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %959 = shufflevector <8 x half> %941, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %960 = shufflevector <8 x half> %942, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %961 = shufflevector <8 x half> %942, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %962 = shufflevector <8 x half> %943, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %963 = shufflevector <8 x half> %943, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %964 = shufflevector <8 x half> %944, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %965 = shufflevector <8 x half> %944, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %966 = shufflevector <8 x half> %945, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %967 = shufflevector <8 x half> %945, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  %968 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %952, <4 x half> %948, <16 x float> %911, i32 0, i32 0, i32 0), !dbg !29
  %969 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %953, <4 x half> %949, <16 x float> %968, i32 0, i32 0, i32 0), !dbg !29
  %970 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %954, <4 x half> %950, <16 x float> %969, i32 0, i32 0, i32 0), !dbg !29
  %971 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %955, <4 x half> %951, <16 x float> %970, i32 0, i32 0, i32 0), !dbg !29
  %972 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %956, <4 x half> %948, <16 x float> %915, i32 0, i32 0, i32 0), !dbg !29
  %973 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %957, <4 x half> %949, <16 x float> %972, i32 0, i32 0, i32 0), !dbg !29
  %974 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %958, <4 x half> %950, <16 x float> %973, i32 0, i32 0, i32 0), !dbg !29
  %975 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %959, <4 x half> %951, <16 x float> %974, i32 0, i32 0, i32 0), !dbg !29
  %976 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %960, <4 x half> %948, <16 x float> %919, i32 0, i32 0, i32 0), !dbg !29
  %977 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %961, <4 x half> %949, <16 x float> %976, i32 0, i32 0, i32 0), !dbg !29
  %978 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %962, <4 x half> %950, <16 x float> %977, i32 0, i32 0, i32 0), !dbg !29
  %979 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %963, <4 x half> %951, <16 x float> %978, i32 0, i32 0, i32 0), !dbg !29
  %980 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %964, <4 x half> %948, <16 x float> %923, i32 0, i32 0, i32 0), !dbg !29
  %981 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %965, <4 x half> %949, <16 x float> %980, i32 0, i32 0, i32 0), !dbg !29
  %982 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %966, <4 x half> %950, <16 x float> %981, i32 0, i32 0, i32 0), !dbg !29
  %983 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %967, <4 x half> %951, <16 x float> %982, i32 0, i32 0, i32 0), !dbg !29
  %984 = mul nsw i64 %80, %81, !dbg !30
  %985 = mul nsw i64 %80, %82, !dbg !30
  %986 = icmp sgt i32 %20, 0, !dbg !31
  br i1 %986, label %.lr.ph, label %._crit_edge, !dbg !31

.lr.ph:                                           ; preds = %21
  %987 = shl i32 %22, 2
  %988 = xor i32 %987, 128
  %989 = and i32 %481, 7
  %990 = lshr exact i32 %34, 2
  %991 = xor i32 %989, %990
  %992 = shl nuw nsw i32 %991, 2
  %993 = or i32 %992, %483
  %994 = zext i32 %993 to i64
  %995 = getelementptr half, ptr addrspace(3) @global_smem, i64 %994
  %996 = lshr exact i32 %38, 2
  %997 = xor i32 %989, %996
  %998 = shl nuw nsw i32 %997, 2
  %999 = or i32 %998, %483
  %1000 = zext i32 %999 to i64
  %1001 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1000
  %1002 = and i32 %490, 7
  %1003 = xor i32 %1002, %990
  %1004 = shl nuw nsw i32 %1003, 2
  %1005 = or i32 %1004, %483
  %1006 = zext i32 %1005 to i64
  %gep = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 4096), i64 %1006
  %1007 = xor i32 %1002, %996
  %1008 = shl nuw nsw i32 %1007, 2
  %1009 = or i32 %1008, %483
  %1010 = zext i32 %1009 to i64
  %gep256 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 4096), i64 %1010
  %1011 = select i1 %515, i32 4, i32 0
  %1012 = or i32 %1011, 8
  %1013 = or i32 %1011, 16
  %1014 = or i32 %1011, 24
  %1015 = shl nuw nsw i32 %517, 2
  %1016 = and i32 %1015, 28
  %1017 = xor i32 %1016, %1011
  %1018 = or i32 %1017, %521
  %1019 = xor i32 %1012, %1016
  %1020 = or i32 %1019, %521
  %1021 = xor i32 %1013, %1016
  %1022 = or i32 %1021, %521
  %1023 = xor i32 %1014, %1016
  %1024 = or i32 %1023, %521
  %1025 = zext i32 %1018 to i64
  %1026 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1025
  %1027 = zext i32 %1020 to i64
  %1028 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1027
  %1029 = zext i32 %1022 to i64
  %1030 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1029
  %1031 = zext i32 %1024 to i64
  %1032 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1031
  %1033 = or i32 %1018, 1024
  %1034 = zext i32 %1033 to i64
  %1035 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1034
  %1036 = or i32 %1020, 1024
  %1037 = zext i32 %1036 to i64
  %1038 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1037
  %1039 = or i32 %1022, 1024
  %1040 = zext i32 %1039 to i64
  %1041 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1040
  %1042 = or i32 %1024, 1024
  %1043 = zext i32 %1042 to i64
  %1044 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1043
  %1045 = or i32 %1018, 2048
  %1046 = zext i32 %1045 to i64
  %1047 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1046
  %1048 = or i32 %1020, 2048
  %1049 = zext i32 %1048 to i64
  %1050 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1049
  %1051 = or i32 %1022, 2048
  %1052 = zext i32 %1051 to i64
  %1053 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1052
  %1054 = or i32 %1024, 2048
  %1055 = zext i32 %1054 to i64
  %1056 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1055
  %1057 = or i32 %1018, 3072
  %1058 = zext i32 %1057 to i64
  %1059 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1058
  %1060 = or i32 %1020, 3072
  %1061 = zext i32 %1060 to i64
  %1062 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1061
  %1063 = or i32 %1022, 3072
  %1064 = zext i32 %1063 to i64
  %1065 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1064
  %1066 = or i32 %1024, 3072
  %1067 = zext i32 %1066 to i64
  %1068 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1067
  %1069 = shufflevector <16 x float> %983, <16 x float> poison, <2 x i32> <i32 14, i32 15>
  %1070 = shufflevector <16 x float> %983, <16 x float> poison, <2 x i32> <i32 12, i32 13>
  %1071 = shufflevector <16 x float> %983, <16 x float> poison, <2 x i32> <i32 10, i32 11>
  %1072 = shufflevector <16 x float> %983, <16 x float> poison, <2 x i32> <i32 8, i32 9>
  %1073 = shufflevector <16 x float> %983, <16 x float> poison, <2 x i32> <i32 6, i32 7>
  %1074 = shufflevector <16 x float> %971, <16 x float> %975, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1075 = shufflevector <16 x float> %979, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %1076 = shufflevector <16 x float> %979, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %1077 = shufflevector <16 x float> %979, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1078 = shufflevector <16 x float> %979, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1079 = shufflevector <16 x float> %983, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1080 = shufflevector <16 x float> %983, <16 x float> poison, <2 x i32> <i32 4, i32 5>
  br label %1081, !dbg !31

1081:                                             ; preds = %.lr.ph, %1575
  %1082 = phi i64 [ 0, %.lr.ph ], [ %2440, %1575 ]
  %1083 = phi float [ 0xFFF0000000000000, %.lr.ph ], [ %1847, %1575 ]
  %1084 = phi float [ 1.000000e+00, %.lr.ph ], [ %2439, %1575 ]
  %1085 = phi i32 [ 0, %.lr.ph ], [ %2441, %1575 ]
  %1086 = phi <2 x float> [ %1069, %.lr.ph ], [ %1888, %1575 ]
  %1087 = phi <2 x float> [ %1070, %.lr.ph ], [ %1881, %1575 ]
  %1088 = phi <2 x float> [ %1071, %.lr.ph ], [ %1874, %1575 ]
  %1089 = phi <2 x float> [ %1072, %.lr.ph ], [ %1867, %1575 ]
  %1090 = phi <2 x float> [ %1073, %.lr.ph ], [ %1860, %1575 ]
  %1091 = phi <32 x float> [ %1074, %.lr.ph ], [ %1850, %1575 ]
  %1092 = phi <16 x float> [ zeroinitializer, %.lr.ph ], [ %2367, %1575 ]
  %1093 = phi <16 x float> [ zeroinitializer, %.lr.ph ], [ %2363, %1575 ]
  %1094 = phi <16 x float> [ zeroinitializer, %.lr.ph ], [ %2359, %1575 ]
  %1095 = phi <16 x float> [ zeroinitializer, %.lr.ph ], [ %2355, %1575 ]
  %1096 = phi <4 x float> [ %1075, %.lr.ph ], [ %1998, %1575 ]
  %1097 = phi <4 x float> [ %1076, %.lr.ph ], [ %1990, %1575 ]
  %1098 = phi <4 x float> [ %1077, %.lr.ph ], [ %1982, %1575 ]
  %1099 = phi <4 x float> [ %1078, %.lr.ph ], [ %1974, %1575 ]
  %1100 = phi <4 x float> [ %1079, %.lr.ph ], [ %2006, %1575 ]
  %1101 = phi <2 x float> [ %1080, %.lr.ph ], [ %1853, %1575 ]
  %.not = icmp eq i32 %1085, 0, !dbg !32
  br i1 %.not, label %1575, label %1102, !dbg !33

1102:                                             ; preds = %1081
  %1103 = or i64 %1082, %81, !dbg !34
  %1104 = or i64 %1082, %82, !dbg !34
  %1105 = mul i64 %1103, %78, !dbg !34
  %1106 = mul i64 %1104, %78, !dbg !34
  %1107 = getelementptr half, ptr addrspace(1) %185, i64 %1105, !dbg !34
  %1108 = getelementptr half, ptr addrspace(1) %186, i64 %1105, !dbg !34
  %1109 = getelementptr half, ptr addrspace(1) %187, i64 %1105, !dbg !34
  %1110 = getelementptr half, ptr addrspace(1) %188, i64 %1105, !dbg !34
  %1111 = getelementptr half, ptr addrspace(1) %189, i64 %1105, !dbg !34
  %1112 = getelementptr half, ptr addrspace(1) %190, i64 %1105, !dbg !34
  %1113 = getelementptr half, ptr addrspace(1) %191, i64 %1105, !dbg !34
  %1114 = getelementptr half, ptr addrspace(1) %192, i64 %1105, !dbg !34
  %1115 = getelementptr half, ptr addrspace(1) %193, i64 %1105, !dbg !34
  %1116 = getelementptr half, ptr addrspace(1) %194, i64 %1105, !dbg !34
  %1117 = getelementptr half, ptr addrspace(1) %195, i64 %1105, !dbg !34
  %1118 = getelementptr half, ptr addrspace(1) %196, i64 %1105, !dbg !34
  %1119 = getelementptr half, ptr addrspace(1) %197, i64 %1105, !dbg !34
  %1120 = getelementptr half, ptr addrspace(1) %198, i64 %1105, !dbg !34
  %1121 = getelementptr half, ptr addrspace(1) %199, i64 %1105, !dbg !34
  %1122 = getelementptr half, ptr addrspace(1) %200, i64 %1105, !dbg !34
  %1123 = getelementptr half, ptr addrspace(1) %201, i64 %1105, !dbg !34
  %1124 = getelementptr half, ptr addrspace(1) %202, i64 %1105, !dbg !34
  %1125 = getelementptr half, ptr addrspace(1) %203, i64 %1105, !dbg !34
  %1126 = getelementptr half, ptr addrspace(1) %204, i64 %1105, !dbg !34
  %1127 = getelementptr half, ptr addrspace(1) %205, i64 %1105, !dbg !34
  %1128 = getelementptr half, ptr addrspace(1) %206, i64 %1105, !dbg !34
  %1129 = getelementptr half, ptr addrspace(1) %207, i64 %1105, !dbg !34
  %1130 = getelementptr half, ptr addrspace(1) %208, i64 %1105, !dbg !34
  %1131 = getelementptr half, ptr addrspace(1) %209, i64 %1105, !dbg !34
  %1132 = getelementptr half, ptr addrspace(1) %210, i64 %1105, !dbg !34
  %1133 = getelementptr half, ptr addrspace(1) %211, i64 %1105, !dbg !34
  %1134 = getelementptr half, ptr addrspace(1) %212, i64 %1105, !dbg !34
  %1135 = getelementptr half, ptr addrspace(1) %213, i64 %1105, !dbg !34
  %1136 = getelementptr half, ptr addrspace(1) %214, i64 %1105, !dbg !34
  %1137 = getelementptr half, ptr addrspace(1) %215, i64 %1105, !dbg !34
  %1138 = getelementptr half, ptr addrspace(1) %216, i64 %1105, !dbg !34
  %1139 = getelementptr half, ptr addrspace(1) %185, i64 %1106, !dbg !34
  %1140 = getelementptr half, ptr addrspace(1) %186, i64 %1106, !dbg !34
  %1141 = getelementptr half, ptr addrspace(1) %187, i64 %1106, !dbg !34
  %1142 = getelementptr half, ptr addrspace(1) %188, i64 %1106, !dbg !34
  %1143 = getelementptr half, ptr addrspace(1) %189, i64 %1106, !dbg !34
  %1144 = getelementptr half, ptr addrspace(1) %190, i64 %1106, !dbg !34
  %1145 = getelementptr half, ptr addrspace(1) %191, i64 %1106, !dbg !34
  %1146 = getelementptr half, ptr addrspace(1) %192, i64 %1106, !dbg !34
  %1147 = getelementptr half, ptr addrspace(1) %193, i64 %1106, !dbg !34
  %1148 = getelementptr half, ptr addrspace(1) %194, i64 %1106, !dbg !34
  %1149 = getelementptr half, ptr addrspace(1) %195, i64 %1106, !dbg !34
  %1150 = getelementptr half, ptr addrspace(1) %196, i64 %1106, !dbg !34
  %1151 = getelementptr half, ptr addrspace(1) %197, i64 %1106, !dbg !34
  %1152 = getelementptr half, ptr addrspace(1) %198, i64 %1106, !dbg !34
  %1153 = getelementptr half, ptr addrspace(1) %199, i64 %1106, !dbg !34
  %1154 = getelementptr half, ptr addrspace(1) %200, i64 %1106, !dbg !34
  %1155 = getelementptr half, ptr addrspace(1) %201, i64 %1106, !dbg !34
  %1156 = getelementptr half, ptr addrspace(1) %202, i64 %1106, !dbg !34
  %1157 = getelementptr half, ptr addrspace(1) %203, i64 %1106, !dbg !34
  %1158 = getelementptr half, ptr addrspace(1) %204, i64 %1106, !dbg !34
  %1159 = getelementptr half, ptr addrspace(1) %205, i64 %1106, !dbg !34
  %1160 = getelementptr half, ptr addrspace(1) %206, i64 %1106, !dbg !34
  %1161 = getelementptr half, ptr addrspace(1) %207, i64 %1106, !dbg !34
  %1162 = getelementptr half, ptr addrspace(1) %208, i64 %1106, !dbg !34
  %1163 = getelementptr half, ptr addrspace(1) %209, i64 %1106, !dbg !34
  %1164 = getelementptr half, ptr addrspace(1) %210, i64 %1106, !dbg !34
  %1165 = getelementptr half, ptr addrspace(1) %211, i64 %1106, !dbg !34
  %1166 = getelementptr half, ptr addrspace(1) %212, i64 %1106, !dbg !34
  %1167 = getelementptr half, ptr addrspace(1) %213, i64 %1106, !dbg !34
  %1168 = getelementptr half, ptr addrspace(1) %214, i64 %1106, !dbg !34
  %1169 = getelementptr half, ptr addrspace(1) %215, i64 %1106, !dbg !34
  %1170 = getelementptr half, ptr addrspace(1) %216, i64 %1106, !dbg !34
  %1171 = addrspacecast ptr addrspace(1) %1107 to ptr, !dbg !34
  %1172 = load <1 x half>, ptr %1171, align 2, !dbg !34
  %1173 = addrspacecast ptr addrspace(1) %1108 to ptr, !dbg !34
  %1174 = load <1 x half>, ptr %1173, align 2, !dbg !34
  %1175 = addrspacecast ptr addrspace(1) %1109 to ptr, !dbg !34
  %1176 = load <1 x half>, ptr %1175, align 2, !dbg !34
  %1177 = shufflevector <1 x half> %1176, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1178 = addrspacecast ptr addrspace(1) %1110 to ptr, !dbg !34
  %1179 = load <1 x half>, ptr %1178, align 2, !dbg !34
  %1180 = shufflevector <1 x half> %1179, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1181 = addrspacecast ptr addrspace(1) %1111 to ptr, !dbg !34
  %1182 = load <1 x half>, ptr %1181, align 2, !dbg !34
  %1183 = shufflevector <1 x half> %1182, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1184 = addrspacecast ptr addrspace(1) %1112 to ptr, !dbg !34
  %1185 = load <1 x half>, ptr %1184, align 2, !dbg !34
  %1186 = shufflevector <1 x half> %1185, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1187 = addrspacecast ptr addrspace(1) %1113 to ptr, !dbg !34
  %1188 = load <1 x half>, ptr %1187, align 2, !dbg !34
  %1189 = shufflevector <1 x half> %1188, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1190 = addrspacecast ptr addrspace(1) %1114 to ptr, !dbg !34
  %1191 = load <1 x half>, ptr %1190, align 2, !dbg !34
  %1192 = shufflevector <1 x half> %1191, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1193 = addrspacecast ptr addrspace(1) %1139 to ptr, !dbg !34
  %1194 = load <1 x half>, ptr %1193, align 2, !dbg !34
  %1195 = addrspacecast ptr addrspace(1) %1140 to ptr, !dbg !34
  %1196 = load <1 x half>, ptr %1195, align 2, !dbg !34
  %1197 = addrspacecast ptr addrspace(1) %1141 to ptr, !dbg !34
  %1198 = load <1 x half>, ptr %1197, align 2, !dbg !34
  %1199 = shufflevector <1 x half> %1198, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1200 = addrspacecast ptr addrspace(1) %1142 to ptr, !dbg !34
  %1201 = load <1 x half>, ptr %1200, align 2, !dbg !34
  %1202 = shufflevector <1 x half> %1201, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1203 = addrspacecast ptr addrspace(1) %1143 to ptr, !dbg !34
  %1204 = load <1 x half>, ptr %1203, align 2, !dbg !34
  %1205 = shufflevector <1 x half> %1204, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1206 = addrspacecast ptr addrspace(1) %1144 to ptr, !dbg !34
  %1207 = load <1 x half>, ptr %1206, align 2, !dbg !34
  %1208 = shufflevector <1 x half> %1207, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1209 = addrspacecast ptr addrspace(1) %1145 to ptr, !dbg !34
  %1210 = load <1 x half>, ptr %1209, align 2, !dbg !34
  %1211 = shufflevector <1 x half> %1210, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1212 = addrspacecast ptr addrspace(1) %1146 to ptr, !dbg !34
  %1213 = load <1 x half>, ptr %1212, align 2, !dbg !34
  %1214 = shufflevector <1 x half> %1213, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1215 = addrspacecast ptr addrspace(1) %1115 to ptr, !dbg !34
  %1216 = load <1 x half>, ptr %1215, align 2, !dbg !34
  %1217 = addrspacecast ptr addrspace(1) %1116 to ptr, !dbg !34
  %1218 = load <1 x half>, ptr %1217, align 2, !dbg !34
  %1219 = addrspacecast ptr addrspace(1) %1117 to ptr, !dbg !34
  %1220 = load <1 x half>, ptr %1219, align 2, !dbg !34
  %1221 = shufflevector <1 x half> %1220, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1222 = addrspacecast ptr addrspace(1) %1118 to ptr, !dbg !34
  %1223 = load <1 x half>, ptr %1222, align 2, !dbg !34
  %1224 = shufflevector <1 x half> %1223, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1225 = addrspacecast ptr addrspace(1) %1119 to ptr, !dbg !34
  %1226 = load <1 x half>, ptr %1225, align 2, !dbg !34
  %1227 = shufflevector <1 x half> %1226, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1228 = addrspacecast ptr addrspace(1) %1120 to ptr, !dbg !34
  %1229 = load <1 x half>, ptr %1228, align 2, !dbg !34
  %1230 = shufflevector <1 x half> %1229, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1231 = addrspacecast ptr addrspace(1) %1121 to ptr, !dbg !34
  %1232 = load <1 x half>, ptr %1231, align 2, !dbg !34
  %1233 = shufflevector <1 x half> %1232, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1234 = addrspacecast ptr addrspace(1) %1122 to ptr, !dbg !34
  %1235 = load <1 x half>, ptr %1234, align 2, !dbg !34
  %1236 = shufflevector <1 x half> %1235, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1237 = addrspacecast ptr addrspace(1) %1147 to ptr, !dbg !34
  %1238 = load <1 x half>, ptr %1237, align 2, !dbg !34
  %1239 = addrspacecast ptr addrspace(1) %1148 to ptr, !dbg !34
  %1240 = load <1 x half>, ptr %1239, align 2, !dbg !34
  %1241 = addrspacecast ptr addrspace(1) %1149 to ptr, !dbg !34
  %1242 = load <1 x half>, ptr %1241, align 2, !dbg !34
  %1243 = shufflevector <1 x half> %1242, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1244 = addrspacecast ptr addrspace(1) %1150 to ptr, !dbg !34
  %1245 = load <1 x half>, ptr %1244, align 2, !dbg !34
  %1246 = shufflevector <1 x half> %1245, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1247 = addrspacecast ptr addrspace(1) %1151 to ptr, !dbg !34
  %1248 = load <1 x half>, ptr %1247, align 2, !dbg !34
  %1249 = shufflevector <1 x half> %1248, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1250 = addrspacecast ptr addrspace(1) %1152 to ptr, !dbg !34
  %1251 = load <1 x half>, ptr %1250, align 2, !dbg !34
  %1252 = shufflevector <1 x half> %1251, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1253 = addrspacecast ptr addrspace(1) %1153 to ptr, !dbg !34
  %1254 = load <1 x half>, ptr %1253, align 2, !dbg !34
  %1255 = shufflevector <1 x half> %1254, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1256 = addrspacecast ptr addrspace(1) %1154 to ptr, !dbg !34
  %1257 = load <1 x half>, ptr %1256, align 2, !dbg !34
  %1258 = shufflevector <1 x half> %1257, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !34
  tail call void @llvm.amdgcn.s.barrier(), !dbg !34
  fence syncscope("workgroup") acquire, !dbg !34
  %1259 = shufflevector <1 x half> %1172, <1 x half> %1174, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1260 = shufflevector <8 x half> %1259, <8 x half> %1177, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1261 = shufflevector <8 x half> %1260, <8 x half> %1180, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1262 = shufflevector <8 x half> %1261, <8 x half> %1183, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1263 = shufflevector <8 x half> %1262, <8 x half> %1186, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !34
  %1264 = shufflevector <8 x half> %1263, <8 x half> %1189, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !34
  %1265 = shufflevector <8 x half> %1264, <8 x half> %1192, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !34
  store <8 x half> %1265, ptr addrspace(3) %489, align 16, !dbg !34
  %1266 = shufflevector <1 x half> %1194, <1 x half> %1196, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1267 = shufflevector <8 x half> %1266, <8 x half> %1199, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1268 = shufflevector <8 x half> %1267, <8 x half> %1202, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1269 = shufflevector <8 x half> %1268, <8 x half> %1205, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1270 = shufflevector <8 x half> %1269, <8 x half> %1208, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !34
  %1271 = shufflevector <8 x half> %1270, <8 x half> %1211, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !34
  %1272 = shufflevector <8 x half> %1271, <8 x half> %1214, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !34
  store <8 x half> %1272, ptr addrspace(3) %497, align 16, !dbg !34
  fence syncscope("workgroup") release, !dbg !34
  tail call void @llvm.amdgcn.s.barrier(), !dbg !34
  fence syncscope("workgroup") acquire, !dbg !34
  %1273 = load <8 x half>, ptr addrspace(3) %528, align 16, !dbg !34
  %1274 = load <8 x half>, ptr addrspace(3) %531, align 16, !dbg !34
  %1275 = load <8 x half>, ptr addrspace(3) %535, align 16, !dbg !34
  %1276 = load <8 x half>, ptr addrspace(3) %539, align 16, !dbg !34
  %1277 = load <8 x half>, ptr addrspace(3) %543, align 16, !dbg !34
  %1278 = load <8 x half>, ptr addrspace(3) %547, align 16, !dbg !34
  %1279 = load <8 x half>, ptr addrspace(3) %551, align 16, !dbg !34
  %1280 = load <8 x half>, ptr addrspace(3) %555, align 16, !dbg !34
  %1281 = shufflevector <8 x half> %1273, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1282 = shufflevector <8 x half> %1273, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1283 = shufflevector <8 x half> %1274, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1284 = shufflevector <8 x half> %1274, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1285 = shufflevector <8 x half> %1275, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1286 = shufflevector <8 x half> %1275, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1287 = shufflevector <8 x half> %1276, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1288 = shufflevector <8 x half> %1276, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1289 = shufflevector <8 x half> %1277, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1290 = shufflevector <8 x half> %1277, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1291 = shufflevector <8 x half> %1278, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1292 = shufflevector <8 x half> %1278, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1293 = shufflevector <8 x half> %1279, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1294 = shufflevector <8 x half> %1279, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1295 = shufflevector <8 x half> %1280, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1296 = shufflevector <8 x half> %1280, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1297 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1281, <4 x half> %572, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !35
  %1298 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1282, <4 x half> %573, <16 x float> %1297, i32 0, i32 0, i32 0), !dbg !35
  %1299 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1283, <4 x half> %574, <16 x float> %1298, i32 0, i32 0, i32 0), !dbg !35
  %1300 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1284, <4 x half> %575, <16 x float> %1299, i32 0, i32 0, i32 0), !dbg !35
  %1301 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1285, <4 x half> %572, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !35
  %1302 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1286, <4 x half> %573, <16 x float> %1301, i32 0, i32 0, i32 0), !dbg !35
  %1303 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1287, <4 x half> %574, <16 x float> %1302, i32 0, i32 0, i32 0), !dbg !35
  %1304 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1288, <4 x half> %575, <16 x float> %1303, i32 0, i32 0, i32 0), !dbg !35
  %1305 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1289, <4 x half> %572, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !35
  %1306 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1290, <4 x half> %573, <16 x float> %1305, i32 0, i32 0, i32 0), !dbg !35
  %1307 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1291, <4 x half> %574, <16 x float> %1306, i32 0, i32 0, i32 0), !dbg !35
  %1308 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1292, <4 x half> %575, <16 x float> %1307, i32 0, i32 0, i32 0), !dbg !35
  %1309 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1293, <4 x half> %572, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !35
  %1310 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1294, <4 x half> %573, <16 x float> %1309, i32 0, i32 0, i32 0), !dbg !35
  %1311 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1295, <4 x half> %574, <16 x float> %1310, i32 0, i32 0, i32 0), !dbg !35
  %1312 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1296, <4 x half> %575, <16 x float> %1311, i32 0, i32 0, i32 0), !dbg !35
  fence syncscope("workgroup") release, !dbg !34
  tail call void @llvm.amdgcn.s.barrier(), !dbg !34
  fence syncscope("workgroup") acquire, !dbg !34
  %1313 = shufflevector <1 x half> %1216, <1 x half> %1218, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1314 = shufflevector <8 x half> %1313, <8 x half> %1221, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1315 = shufflevector <8 x half> %1314, <8 x half> %1224, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1316 = shufflevector <8 x half> %1315, <8 x half> %1227, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1317 = shufflevector <8 x half> %1316, <8 x half> %1230, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !34
  %1318 = shufflevector <8 x half> %1317, <8 x half> %1233, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !34
  %1319 = shufflevector <8 x half> %1318, <8 x half> %1236, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !34
  store <8 x half> %1319, ptr addrspace(3) %489, align 16, !dbg !34
  %1320 = shufflevector <1 x half> %1238, <1 x half> %1240, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1321 = shufflevector <8 x half> %1320, <8 x half> %1243, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1322 = shufflevector <8 x half> %1321, <8 x half> %1246, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1323 = shufflevector <8 x half> %1322, <8 x half> %1249, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1324 = shufflevector <8 x half> %1323, <8 x half> %1252, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !34
  %1325 = shufflevector <8 x half> %1324, <8 x half> %1255, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !34
  %1326 = shufflevector <8 x half> %1325, <8 x half> %1258, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !34
  store <8 x half> %1326, ptr addrspace(3) %497, align 16, !dbg !34
  %1327 = addrspacecast ptr addrspace(1) %1123 to ptr, !dbg !34
  %1328 = load <1 x half>, ptr %1327, align 2, !dbg !34
  %1329 = addrspacecast ptr addrspace(1) %1124 to ptr, !dbg !34
  %1330 = load <1 x half>, ptr %1329, align 2, !dbg !34
  %1331 = addrspacecast ptr addrspace(1) %1125 to ptr, !dbg !34
  %1332 = load <1 x half>, ptr %1331, align 2, !dbg !34
  %1333 = shufflevector <1 x half> %1332, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1334 = addrspacecast ptr addrspace(1) %1126 to ptr, !dbg !34
  %1335 = load <1 x half>, ptr %1334, align 2, !dbg !34
  %1336 = shufflevector <1 x half> %1335, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1337 = addrspacecast ptr addrspace(1) %1127 to ptr, !dbg !34
  %1338 = load <1 x half>, ptr %1337, align 2, !dbg !34
  %1339 = shufflevector <1 x half> %1338, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1340 = addrspacecast ptr addrspace(1) %1128 to ptr, !dbg !34
  %1341 = load <1 x half>, ptr %1340, align 2, !dbg !34
  %1342 = shufflevector <1 x half> %1341, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1343 = addrspacecast ptr addrspace(1) %1129 to ptr, !dbg !34
  %1344 = load <1 x half>, ptr %1343, align 2, !dbg !34
  %1345 = shufflevector <1 x half> %1344, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1346 = addrspacecast ptr addrspace(1) %1130 to ptr, !dbg !34
  %1347 = load <1 x half>, ptr %1346, align 2, !dbg !34
  %1348 = shufflevector <1 x half> %1347, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1349 = addrspacecast ptr addrspace(1) %1155 to ptr, !dbg !34
  %1350 = load <1 x half>, ptr %1349, align 2, !dbg !34
  %1351 = addrspacecast ptr addrspace(1) %1156 to ptr, !dbg !34
  %1352 = load <1 x half>, ptr %1351, align 2, !dbg !34
  %1353 = addrspacecast ptr addrspace(1) %1157 to ptr, !dbg !34
  %1354 = load <1 x half>, ptr %1353, align 2, !dbg !34
  %1355 = shufflevector <1 x half> %1354, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1356 = addrspacecast ptr addrspace(1) %1158 to ptr, !dbg !34
  %1357 = load <1 x half>, ptr %1356, align 2, !dbg !34
  %1358 = shufflevector <1 x half> %1357, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1359 = addrspacecast ptr addrspace(1) %1159 to ptr, !dbg !34
  %1360 = load <1 x half>, ptr %1359, align 2, !dbg !34
  %1361 = shufflevector <1 x half> %1360, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1362 = addrspacecast ptr addrspace(1) %1160 to ptr, !dbg !34
  %1363 = load <1 x half>, ptr %1362, align 2, !dbg !34
  %1364 = shufflevector <1 x half> %1363, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1365 = addrspacecast ptr addrspace(1) %1161 to ptr, !dbg !34
  %1366 = load <1 x half>, ptr %1365, align 2, !dbg !34
  %1367 = shufflevector <1 x half> %1366, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1368 = addrspacecast ptr addrspace(1) %1162 to ptr, !dbg !34
  %1369 = load <1 x half>, ptr %1368, align 2, !dbg !34
  %1370 = shufflevector <1 x half> %1369, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !34
  tail call void @llvm.amdgcn.s.barrier(), !dbg !34
  fence syncscope("workgroup") acquire, !dbg !34
  %1371 = load <8 x half>, ptr addrspace(3) %528, align 16, !dbg !34
  %1372 = load <8 x half>, ptr addrspace(3) %531, align 16, !dbg !34
  %1373 = load <8 x half>, ptr addrspace(3) %535, align 16, !dbg !34
  %1374 = load <8 x half>, ptr addrspace(3) %539, align 16, !dbg !34
  %1375 = load <8 x half>, ptr addrspace(3) %543, align 16, !dbg !34
  %1376 = load <8 x half>, ptr addrspace(3) %547, align 16, !dbg !34
  %1377 = load <8 x half>, ptr addrspace(3) %551, align 16, !dbg !34
  %1378 = load <8 x half>, ptr addrspace(3) %555, align 16, !dbg !34
  %1379 = shufflevector <8 x half> %1371, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1380 = shufflevector <8 x half> %1371, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1381 = shufflevector <8 x half> %1372, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1382 = shufflevector <8 x half> %1372, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1383 = shufflevector <8 x half> %1373, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1384 = shufflevector <8 x half> %1373, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1385 = shufflevector <8 x half> %1374, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1386 = shufflevector <8 x half> %1374, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1387 = shufflevector <8 x half> %1375, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1388 = shufflevector <8 x half> %1375, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1389 = shufflevector <8 x half> %1376, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1390 = shufflevector <8 x half> %1376, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1391 = shufflevector <8 x half> %1377, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1392 = shufflevector <8 x half> %1377, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1393 = shufflevector <8 x half> %1378, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1394 = shufflevector <8 x half> %1378, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1395 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1379, <4 x half> %730, <16 x float> %1300, i32 0, i32 0, i32 0), !dbg !35
  %1396 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1380, <4 x half> %731, <16 x float> %1395, i32 0, i32 0, i32 0), !dbg !35
  %1397 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1381, <4 x half> %732, <16 x float> %1396, i32 0, i32 0, i32 0), !dbg !35
  %1398 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1382, <4 x half> %733, <16 x float> %1397, i32 0, i32 0, i32 0), !dbg !35
  %1399 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1383, <4 x half> %730, <16 x float> %1304, i32 0, i32 0, i32 0), !dbg !35
  %1400 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1384, <4 x half> %731, <16 x float> %1399, i32 0, i32 0, i32 0), !dbg !35
  %1401 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1385, <4 x half> %732, <16 x float> %1400, i32 0, i32 0, i32 0), !dbg !35
  %1402 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1386, <4 x half> %733, <16 x float> %1401, i32 0, i32 0, i32 0), !dbg !35
  %1403 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1387, <4 x half> %730, <16 x float> %1308, i32 0, i32 0, i32 0), !dbg !35
  %1404 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1388, <4 x half> %731, <16 x float> %1403, i32 0, i32 0, i32 0), !dbg !35
  %1405 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1389, <4 x half> %732, <16 x float> %1404, i32 0, i32 0, i32 0), !dbg !35
  %1406 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1390, <4 x half> %733, <16 x float> %1405, i32 0, i32 0, i32 0), !dbg !35
  %1407 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1391, <4 x half> %730, <16 x float> %1312, i32 0, i32 0, i32 0), !dbg !35
  %1408 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1392, <4 x half> %731, <16 x float> %1407, i32 0, i32 0, i32 0), !dbg !35
  %1409 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1393, <4 x half> %732, <16 x float> %1408, i32 0, i32 0, i32 0), !dbg !35
  %1410 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1394, <4 x half> %733, <16 x float> %1409, i32 0, i32 0, i32 0), !dbg !35
  fence syncscope("workgroup") release, !dbg !34
  tail call void @llvm.amdgcn.s.barrier(), !dbg !34
  fence syncscope("workgroup") acquire, !dbg !34
  %1411 = shufflevector <1 x half> %1328, <1 x half> %1330, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1412 = shufflevector <8 x half> %1411, <8 x half> %1333, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1413 = shufflevector <8 x half> %1412, <8 x half> %1336, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1414 = shufflevector <8 x half> %1413, <8 x half> %1339, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1415 = shufflevector <8 x half> %1414, <8 x half> %1342, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !34
  %1416 = shufflevector <8 x half> %1415, <8 x half> %1345, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !34
  %1417 = shufflevector <8 x half> %1416, <8 x half> %1348, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !34
  store <8 x half> %1417, ptr addrspace(3) %489, align 16, !dbg !34
  %1418 = shufflevector <1 x half> %1350, <1 x half> %1352, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1419 = shufflevector <8 x half> %1418, <8 x half> %1355, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1420 = shufflevector <8 x half> %1419, <8 x half> %1358, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1421 = shufflevector <8 x half> %1420, <8 x half> %1361, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1422 = shufflevector <8 x half> %1421, <8 x half> %1364, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !34
  %1423 = shufflevector <8 x half> %1422, <8 x half> %1367, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !34
  %1424 = shufflevector <8 x half> %1423, <8 x half> %1370, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !34
  store <8 x half> %1424, ptr addrspace(3) %497, align 16, !dbg !34
  %1425 = addrspacecast ptr addrspace(1) %1131 to ptr, !dbg !34
  %1426 = load <1 x half>, ptr %1425, align 2, !dbg !34
  %1427 = addrspacecast ptr addrspace(1) %1132 to ptr, !dbg !34
  %1428 = load <1 x half>, ptr %1427, align 2, !dbg !34
  %1429 = addrspacecast ptr addrspace(1) %1133 to ptr, !dbg !34
  %1430 = load <1 x half>, ptr %1429, align 2, !dbg !34
  %1431 = shufflevector <1 x half> %1430, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1432 = addrspacecast ptr addrspace(1) %1134 to ptr, !dbg !34
  %1433 = load <1 x half>, ptr %1432, align 2, !dbg !34
  %1434 = shufflevector <1 x half> %1433, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1435 = addrspacecast ptr addrspace(1) %1135 to ptr, !dbg !34
  %1436 = load <1 x half>, ptr %1435, align 2, !dbg !34
  %1437 = shufflevector <1 x half> %1436, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1438 = addrspacecast ptr addrspace(1) %1136 to ptr, !dbg !34
  %1439 = load <1 x half>, ptr %1438, align 2, !dbg !34
  %1440 = shufflevector <1 x half> %1439, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1441 = addrspacecast ptr addrspace(1) %1137 to ptr, !dbg !34
  %1442 = load <1 x half>, ptr %1441, align 2, !dbg !34
  %1443 = shufflevector <1 x half> %1442, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1444 = addrspacecast ptr addrspace(1) %1138 to ptr, !dbg !34
  %1445 = load <1 x half>, ptr %1444, align 2, !dbg !34
  %1446 = shufflevector <1 x half> %1445, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1447 = addrspacecast ptr addrspace(1) %1163 to ptr, !dbg !34
  %1448 = load <1 x half>, ptr %1447, align 2, !dbg !34
  %1449 = addrspacecast ptr addrspace(1) %1164 to ptr, !dbg !34
  %1450 = load <1 x half>, ptr %1449, align 2, !dbg !34
  %1451 = addrspacecast ptr addrspace(1) %1165 to ptr, !dbg !34
  %1452 = load <1 x half>, ptr %1451, align 2, !dbg !34
  %1453 = shufflevector <1 x half> %1452, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1454 = addrspacecast ptr addrspace(1) %1166 to ptr, !dbg !34
  %1455 = load <1 x half>, ptr %1454, align 2, !dbg !34
  %1456 = shufflevector <1 x half> %1455, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1457 = addrspacecast ptr addrspace(1) %1167 to ptr, !dbg !34
  %1458 = load <1 x half>, ptr %1457, align 2, !dbg !34
  %1459 = shufflevector <1 x half> %1458, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1460 = addrspacecast ptr addrspace(1) %1168 to ptr, !dbg !34
  %1461 = load <1 x half>, ptr %1460, align 2, !dbg !34
  %1462 = shufflevector <1 x half> %1461, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1463 = addrspacecast ptr addrspace(1) %1169 to ptr, !dbg !34
  %1464 = load <1 x half>, ptr %1463, align 2, !dbg !34
  %1465 = shufflevector <1 x half> %1464, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1466 = addrspacecast ptr addrspace(1) %1170 to ptr, !dbg !34
  %1467 = load <1 x half>, ptr %1466, align 2, !dbg !34
  %1468 = shufflevector <1 x half> %1467, <1 x half> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !34
  tail call void @llvm.amdgcn.s.barrier(), !dbg !34
  fence syncscope("workgroup") acquire, !dbg !34
  %1469 = load <8 x half>, ptr addrspace(3) %528, align 16, !dbg !34
  %1470 = load <8 x half>, ptr addrspace(3) %531, align 16, !dbg !34
  %1471 = load <8 x half>, ptr addrspace(3) %535, align 16, !dbg !34
  %1472 = load <8 x half>, ptr addrspace(3) %539, align 16, !dbg !34
  %1473 = load <8 x half>, ptr addrspace(3) %543, align 16, !dbg !34
  %1474 = load <8 x half>, ptr addrspace(3) %547, align 16, !dbg !34
  %1475 = load <8 x half>, ptr addrspace(3) %551, align 16, !dbg !34
  %1476 = load <8 x half>, ptr addrspace(3) %555, align 16, !dbg !34
  %1477 = shufflevector <8 x half> %1469, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1478 = shufflevector <8 x half> %1469, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1479 = shufflevector <8 x half> %1470, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1480 = shufflevector <8 x half> %1470, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1481 = shufflevector <8 x half> %1471, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1482 = shufflevector <8 x half> %1471, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1483 = shufflevector <8 x half> %1472, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1484 = shufflevector <8 x half> %1472, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1485 = shufflevector <8 x half> %1473, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1486 = shufflevector <8 x half> %1473, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1487 = shufflevector <8 x half> %1474, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1488 = shufflevector <8 x half> %1474, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1489 = shufflevector <8 x half> %1475, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1490 = shufflevector <8 x half> %1475, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1491 = shufflevector <8 x half> %1476, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1492 = shufflevector <8 x half> %1476, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1493 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1477, <4 x half> %888, <16 x float> %1398, i32 0, i32 0, i32 0), !dbg !35
  %1494 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1478, <4 x half> %889, <16 x float> %1493, i32 0, i32 0, i32 0), !dbg !35
  %1495 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1479, <4 x half> %890, <16 x float> %1494, i32 0, i32 0, i32 0), !dbg !35
  %1496 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1480, <4 x half> %891, <16 x float> %1495, i32 0, i32 0, i32 0), !dbg !35
  %1497 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1481, <4 x half> %888, <16 x float> %1402, i32 0, i32 0, i32 0), !dbg !35
  %1498 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1482, <4 x half> %889, <16 x float> %1497, i32 0, i32 0, i32 0), !dbg !35
  %1499 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1483, <4 x half> %890, <16 x float> %1498, i32 0, i32 0, i32 0), !dbg !35
  %1500 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1484, <4 x half> %891, <16 x float> %1499, i32 0, i32 0, i32 0), !dbg !35
  %1501 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1485, <4 x half> %888, <16 x float> %1406, i32 0, i32 0, i32 0), !dbg !35
  %1502 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1486, <4 x half> %889, <16 x float> %1501, i32 0, i32 0, i32 0), !dbg !35
  %1503 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1487, <4 x half> %890, <16 x float> %1502, i32 0, i32 0, i32 0), !dbg !35
  %1504 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1488, <4 x half> %891, <16 x float> %1503, i32 0, i32 0, i32 0), !dbg !35
  %1505 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1489, <4 x half> %888, <16 x float> %1410, i32 0, i32 0, i32 0), !dbg !35
  %1506 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1490, <4 x half> %889, <16 x float> %1505, i32 0, i32 0, i32 0), !dbg !35
  %1507 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1491, <4 x half> %890, <16 x float> %1506, i32 0, i32 0, i32 0), !dbg !35
  %1508 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1492, <4 x half> %891, <16 x float> %1507, i32 0, i32 0, i32 0), !dbg !35
  fence syncscope("workgroup") release, !dbg !34
  tail call void @llvm.amdgcn.s.barrier(), !dbg !34
  fence syncscope("workgroup") acquire, !dbg !34
  %1509 = shufflevector <1 x half> %1426, <1 x half> %1428, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1510 = shufflevector <8 x half> %1509, <8 x half> %1431, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1511 = shufflevector <8 x half> %1510, <8 x half> %1434, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1512 = shufflevector <8 x half> %1511, <8 x half> %1437, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1513 = shufflevector <8 x half> %1512, <8 x half> %1440, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !34
  %1514 = shufflevector <8 x half> %1513, <8 x half> %1443, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !34
  %1515 = shufflevector <8 x half> %1514, <8 x half> %1446, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !34
  store <8 x half> %1515, ptr addrspace(3) %489, align 16, !dbg !34
  %1516 = shufflevector <1 x half> %1448, <1 x half> %1450, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1517 = shufflevector <8 x half> %1516, <8 x half> %1453, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1518 = shufflevector <8 x half> %1517, <8 x half> %1456, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1519 = shufflevector <8 x half> %1518, <8 x half> %1459, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !34
  %1520 = shufflevector <8 x half> %1519, <8 x half> %1462, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !34
  %1521 = shufflevector <8 x half> %1520, <8 x half> %1465, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !34
  %1522 = shufflevector <8 x half> %1521, <8 x half> %1468, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !34
  store <8 x half> %1522, ptr addrspace(3) %497, align 16, !dbg !34
  fence syncscope("workgroup") release, !dbg !34
  tail call void @llvm.amdgcn.s.barrier(), !dbg !34
  fence syncscope("workgroup") acquire, !dbg !34
  %1523 = load <8 x half>, ptr addrspace(3) %528, align 16, !dbg !34
  %1524 = load <8 x half>, ptr addrspace(3) %531, align 16, !dbg !34
  %1525 = load <8 x half>, ptr addrspace(3) %535, align 16, !dbg !34
  %1526 = load <8 x half>, ptr addrspace(3) %539, align 16, !dbg !34
  %1527 = load <8 x half>, ptr addrspace(3) %543, align 16, !dbg !34
  %1528 = load <8 x half>, ptr addrspace(3) %547, align 16, !dbg !34
  %1529 = load <8 x half>, ptr addrspace(3) %551, align 16, !dbg !34
  %1530 = load <8 x half>, ptr addrspace(3) %555, align 16, !dbg !34
  %1531 = shufflevector <8 x half> %1523, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1532 = shufflevector <8 x half> %1523, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1533 = shufflevector <8 x half> %1524, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1534 = shufflevector <8 x half> %1524, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1535 = shufflevector <8 x half> %1525, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1536 = shufflevector <8 x half> %1525, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1537 = shufflevector <8 x half> %1526, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1538 = shufflevector <8 x half> %1526, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1539 = shufflevector <8 x half> %1527, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1540 = shufflevector <8 x half> %1527, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1541 = shufflevector <8 x half> %1528, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1542 = shufflevector <8 x half> %1528, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1543 = shufflevector <8 x half> %1529, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1544 = shufflevector <8 x half> %1529, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1545 = shufflevector <8 x half> %1530, <8 x half> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !35
  %1546 = shufflevector <8 x half> %1530, <8 x half> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !35
  %1547 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1531, <4 x half> %948, <16 x float> %1496, i32 0, i32 0, i32 0), !dbg !35
  %1548 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1532, <4 x half> %949, <16 x float> %1547, i32 0, i32 0, i32 0), !dbg !35
  %1549 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1533, <4 x half> %950, <16 x float> %1548, i32 0, i32 0, i32 0), !dbg !35
  %1550 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1534, <4 x half> %951, <16 x float> %1549, i32 0, i32 0, i32 0), !dbg !35
  %1551 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1535, <4 x half> %948, <16 x float> %1500, i32 0, i32 0, i32 0), !dbg !35
  %1552 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1536, <4 x half> %949, <16 x float> %1551, i32 0, i32 0, i32 0), !dbg !35
  %1553 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1537, <4 x half> %950, <16 x float> %1552, i32 0, i32 0, i32 0), !dbg !35
  %1554 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1538, <4 x half> %951, <16 x float> %1553, i32 0, i32 0, i32 0), !dbg !35
  %1555 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1539, <4 x half> %948, <16 x float> %1504, i32 0, i32 0, i32 0), !dbg !35
  %1556 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1540, <4 x half> %949, <16 x float> %1555, i32 0, i32 0, i32 0), !dbg !35
  %1557 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1541, <4 x half> %950, <16 x float> %1556, i32 0, i32 0, i32 0), !dbg !35
  %1558 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1542, <4 x half> %951, <16 x float> %1557, i32 0, i32 0, i32 0), !dbg !35
  %1559 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1543, <4 x half> %948, <16 x float> %1508, i32 0, i32 0, i32 0), !dbg !35
  %1560 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1544, <4 x half> %949, <16 x float> %1559, i32 0, i32 0, i32 0), !dbg !35
  %1561 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1545, <4 x half> %950, <16 x float> %1560, i32 0, i32 0, i32 0), !dbg !35
  %1562 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1546, <4 x half> %951, <16 x float> %1561, i32 0, i32 0, i32 0), !dbg !35
  %1563 = shufflevector <16 x float> %1562, <16 x float> poison, <2 x i32> <i32 14, i32 15>
  %1564 = shufflevector <16 x float> %1562, <16 x float> poison, <2 x i32> <i32 12, i32 13>
  %1565 = shufflevector <16 x float> %1562, <16 x float> poison, <2 x i32> <i32 10, i32 11>
  %1566 = shufflevector <16 x float> %1562, <16 x float> poison, <2 x i32> <i32 8, i32 9>
  %1567 = shufflevector <16 x float> %1562, <16 x float> poison, <2 x i32> <i32 6, i32 7>
  %1568 = shufflevector <16 x float> %1550, <16 x float> %1554, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1569 = shufflevector <16 x float> %1558, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %1570 = shufflevector <16 x float> %1558, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %1571 = shufflevector <16 x float> %1558, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %1572 = shufflevector <16 x float> %1558, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1573 = shufflevector <16 x float> %1562, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %1574 = shufflevector <16 x float> %1562, <16 x float> poison, <2 x i32> <i32 4, i32 5>
  br label %1575, !dbg !33

1575:                                             ; preds = %1102, %1081
  %1576 = phi <2 x float> [ %1563, %1102 ], [ %1086, %1081 ]
  %1577 = phi <2 x float> [ %1564, %1102 ], [ %1087, %1081 ]
  %1578 = phi <2 x float> [ %1565, %1102 ], [ %1088, %1081 ]
  %1579 = phi <2 x float> [ %1566, %1102 ], [ %1089, %1081 ]
  %1580 = phi <2 x float> [ %1567, %1102 ], [ %1090, %1081 ]
  %1581 = phi <32 x float> [ %1568, %1102 ], [ %1091, %1081 ]
  %1582 = phi <4 x float> [ %1569, %1102 ], [ %1096, %1081 ]
  %1583 = phi <4 x float> [ %1570, %1102 ], [ %1097, %1081 ]
  %1584 = phi <4 x float> [ %1571, %1102 ], [ %1098, %1081 ]
  %1585 = phi <4 x float> [ %1572, %1102 ], [ %1099, %1081 ]
  %1586 = phi <4 x float> [ %1573, %1102 ], [ %1100, %1081 ]
  %1587 = phi <2 x float> [ %1574, %1102 ], [ %1101, %1081 ]
  %1588 = or i64 %1082, %89, !dbg !30
  %1589 = or i64 %1082, %90, !dbg !30
  %1590 = or i64 %1082, %91, !dbg !30
  %1591 = or i64 %1082, %92, !dbg !30
  %1592 = or i64 %1082, %93, !dbg !30
  %1593 = or i64 %1082, %94, !dbg !30
  %1594 = or i64 %1082, %95, !dbg !30
  %1595 = or i64 %1082, %96, !dbg !30
  %1596 = or i64 %1082, %97, !dbg !30
  %1597 = or i64 %1082, %98, !dbg !30
  %1598 = or i64 %1082, %99, !dbg !30
  %1599 = or i64 %1082, %100, !dbg !30
  %1600 = or i64 %1082, %101, !dbg !30
  %1601 = or i64 %1082, %102, !dbg !30
  %1602 = or i64 %1082, %103, !dbg !30
  %1603 = or i64 %1082, %104, !dbg !30
  %1604 = or i64 %1082, %105, !dbg !30
  %1605 = or i64 %1082, %106, !dbg !30
  %1606 = or i64 %1082, %107, !dbg !30
  %1607 = or i64 %1082, %108, !dbg !30
  %1608 = or i64 %1082, %109, !dbg !30
  %1609 = or i64 %1082, %110, !dbg !30
  %1610 = or i64 %1082, %111, !dbg !30
  %1611 = or i64 %1082, %112, !dbg !30
  %1612 = or i64 %1082, %113, !dbg !30
  %1613 = or i64 %1082, %114, !dbg !30
  %1614 = or i64 %1082, %115, !dbg !30
  %1615 = or i64 %1082, %116, !dbg !30
  %1616 = or i64 %1082, %117, !dbg !30
  %1617 = or i64 %1082, %118, !dbg !30
  %1618 = or i64 %1082, %119, !dbg !30
  %1619 = or i64 %1082, %120, !dbg !30
  %1620 = getelementptr half, ptr addrspace(1) %79, i64 %1588, !dbg !30
  %1621 = getelementptr half, ptr addrspace(1) %79, i64 %1589, !dbg !30
  %1622 = getelementptr half, ptr addrspace(1) %79, i64 %1590, !dbg !30
  %1623 = getelementptr half, ptr addrspace(1) %79, i64 %1591, !dbg !30
  %1624 = getelementptr half, ptr addrspace(1) %79, i64 %1592, !dbg !30
  %1625 = getelementptr half, ptr addrspace(1) %79, i64 %1593, !dbg !30
  %1626 = getelementptr half, ptr addrspace(1) %79, i64 %1594, !dbg !30
  %1627 = getelementptr half, ptr addrspace(1) %79, i64 %1595, !dbg !30
  %1628 = getelementptr half, ptr addrspace(1) %79, i64 %1596, !dbg !30
  %1629 = getelementptr half, ptr addrspace(1) %79, i64 %1597, !dbg !30
  %1630 = getelementptr half, ptr addrspace(1) %79, i64 %1598, !dbg !30
  %1631 = getelementptr half, ptr addrspace(1) %79, i64 %1599, !dbg !30
  %1632 = getelementptr half, ptr addrspace(1) %79, i64 %1600, !dbg !30
  %1633 = getelementptr half, ptr addrspace(1) %79, i64 %1601, !dbg !30
  %1634 = getelementptr half, ptr addrspace(1) %79, i64 %1602, !dbg !30
  %1635 = getelementptr half, ptr addrspace(1) %79, i64 %1603, !dbg !30
  %1636 = getelementptr half, ptr addrspace(1) %79, i64 %1604, !dbg !30
  %1637 = getelementptr half, ptr addrspace(1) %79, i64 %1605, !dbg !30
  %1638 = getelementptr half, ptr addrspace(1) %79, i64 %1606, !dbg !30
  %1639 = getelementptr half, ptr addrspace(1) %79, i64 %1607, !dbg !30
  %1640 = getelementptr half, ptr addrspace(1) %79, i64 %1608, !dbg !30
  %1641 = getelementptr half, ptr addrspace(1) %79, i64 %1609, !dbg !30
  %1642 = getelementptr half, ptr addrspace(1) %79, i64 %1610, !dbg !30
  %1643 = getelementptr half, ptr addrspace(1) %79, i64 %1611, !dbg !30
  %1644 = getelementptr half, ptr addrspace(1) %79, i64 %1612, !dbg !30
  %1645 = getelementptr half, ptr addrspace(1) %79, i64 %1613, !dbg !30
  %1646 = getelementptr half, ptr addrspace(1) %79, i64 %1614, !dbg !30
  %1647 = getelementptr half, ptr addrspace(1) %79, i64 %1615, !dbg !30
  %1648 = getelementptr half, ptr addrspace(1) %79, i64 %1616, !dbg !30
  %1649 = getelementptr half, ptr addrspace(1) %79, i64 %1617, !dbg !30
  %1650 = getelementptr half, ptr addrspace(1) %79, i64 %1618, !dbg !30
  %1651 = getelementptr half, ptr addrspace(1) %79, i64 %1619, !dbg !30
  %1652 = getelementptr half, ptr addrspace(1) %1620, i64 %984, !dbg !30
  %1653 = getelementptr half, ptr addrspace(1) %1621, i64 %984, !dbg !30
  %1654 = getelementptr half, ptr addrspace(1) %1622, i64 %984, !dbg !30
  %1655 = getelementptr half, ptr addrspace(1) %1623, i64 %984, !dbg !30
  %1656 = getelementptr half, ptr addrspace(1) %1624, i64 %984, !dbg !30
  %1657 = getelementptr half, ptr addrspace(1) %1625, i64 %984, !dbg !30
  %1658 = getelementptr half, ptr addrspace(1) %1626, i64 %984, !dbg !30
  %1659 = getelementptr half, ptr addrspace(1) %1627, i64 %984, !dbg !30
  %1660 = getelementptr half, ptr addrspace(1) %1628, i64 %984, !dbg !30
  %1661 = getelementptr half, ptr addrspace(1) %1629, i64 %984, !dbg !30
  %1662 = getelementptr half, ptr addrspace(1) %1630, i64 %984, !dbg !30
  %1663 = getelementptr half, ptr addrspace(1) %1631, i64 %984, !dbg !30
  %1664 = getelementptr half, ptr addrspace(1) %1632, i64 %984, !dbg !30
  %1665 = getelementptr half, ptr addrspace(1) %1633, i64 %984, !dbg !30
  %1666 = getelementptr half, ptr addrspace(1) %1634, i64 %984, !dbg !30
  %1667 = getelementptr half, ptr addrspace(1) %1635, i64 %984, !dbg !30
  %1668 = getelementptr half, ptr addrspace(1) %1636, i64 %984, !dbg !30
  %1669 = getelementptr half, ptr addrspace(1) %1637, i64 %984, !dbg !30
  %1670 = getelementptr half, ptr addrspace(1) %1638, i64 %984, !dbg !30
  %1671 = getelementptr half, ptr addrspace(1) %1639, i64 %984, !dbg !30
  %1672 = getelementptr half, ptr addrspace(1) %1640, i64 %984, !dbg !30
  %1673 = getelementptr half, ptr addrspace(1) %1641, i64 %984, !dbg !30
  %1674 = getelementptr half, ptr addrspace(1) %1642, i64 %984, !dbg !30
  %1675 = getelementptr half, ptr addrspace(1) %1643, i64 %984, !dbg !30
  %1676 = getelementptr half, ptr addrspace(1) %1644, i64 %984, !dbg !30
  %1677 = getelementptr half, ptr addrspace(1) %1645, i64 %984, !dbg !30
  %1678 = getelementptr half, ptr addrspace(1) %1646, i64 %984, !dbg !30
  %1679 = getelementptr half, ptr addrspace(1) %1647, i64 %984, !dbg !30
  %1680 = getelementptr half, ptr addrspace(1) %1648, i64 %984, !dbg !30
  %1681 = getelementptr half, ptr addrspace(1) %1649, i64 %984, !dbg !30
  %1682 = getelementptr half, ptr addrspace(1) %1650, i64 %984, !dbg !30
  %1683 = getelementptr half, ptr addrspace(1) %1651, i64 %984, !dbg !30
  %1684 = getelementptr half, ptr addrspace(1) %1620, i64 %985, !dbg !30
  %1685 = getelementptr half, ptr addrspace(1) %1621, i64 %985, !dbg !30
  %1686 = getelementptr half, ptr addrspace(1) %1622, i64 %985, !dbg !30
  %1687 = getelementptr half, ptr addrspace(1) %1623, i64 %985, !dbg !30
  %1688 = getelementptr half, ptr addrspace(1) %1624, i64 %985, !dbg !30
  %1689 = getelementptr half, ptr addrspace(1) %1625, i64 %985, !dbg !30
  %1690 = getelementptr half, ptr addrspace(1) %1626, i64 %985, !dbg !30
  %1691 = getelementptr half, ptr addrspace(1) %1627, i64 %985, !dbg !30
  %1692 = getelementptr half, ptr addrspace(1) %1628, i64 %985, !dbg !30
  %1693 = getelementptr half, ptr addrspace(1) %1629, i64 %985, !dbg !30
  %1694 = getelementptr half, ptr addrspace(1) %1630, i64 %985, !dbg !30
  %1695 = getelementptr half, ptr addrspace(1) %1631, i64 %985, !dbg !30
  %1696 = getelementptr half, ptr addrspace(1) %1632, i64 %985, !dbg !30
  %1697 = getelementptr half, ptr addrspace(1) %1633, i64 %985, !dbg !30
  %1698 = getelementptr half, ptr addrspace(1) %1634, i64 %985, !dbg !30
  %1699 = getelementptr half, ptr addrspace(1) %1635, i64 %985, !dbg !30
  %1700 = getelementptr half, ptr addrspace(1) %1636, i64 %985, !dbg !30
  %1701 = getelementptr half, ptr addrspace(1) %1637, i64 %985, !dbg !30
  %1702 = getelementptr half, ptr addrspace(1) %1638, i64 %985, !dbg !30
  %1703 = getelementptr half, ptr addrspace(1) %1639, i64 %985, !dbg !30
  %1704 = getelementptr half, ptr addrspace(1) %1640, i64 %985, !dbg !30
  %1705 = getelementptr half, ptr addrspace(1) %1641, i64 %985, !dbg !30
  %1706 = getelementptr half, ptr addrspace(1) %1642, i64 %985, !dbg !30
  %1707 = getelementptr half, ptr addrspace(1) %1643, i64 %985, !dbg !30
  %1708 = getelementptr half, ptr addrspace(1) %1644, i64 %985, !dbg !30
  %1709 = getelementptr half, ptr addrspace(1) %1645, i64 %985, !dbg !30
  %1710 = getelementptr half, ptr addrspace(1) %1646, i64 %985, !dbg !30
  %1711 = getelementptr half, ptr addrspace(1) %1647, i64 %985, !dbg !30
  %1712 = getelementptr half, ptr addrspace(1) %1648, i64 %985, !dbg !30
  %1713 = getelementptr half, ptr addrspace(1) %1649, i64 %985, !dbg !30
  %1714 = getelementptr half, ptr addrspace(1) %1650, i64 %985, !dbg !30
  %1715 = getelementptr half, ptr addrspace(1) %1651, i64 %985, !dbg !30
  %1716 = extractelement <32 x float> %1581, i64 0, !dbg !36
  %1717 = extractelement <32 x float> %1581, i64 1, !dbg !36
  %1718 = tail call float @llvm.maxnum.f32(float %1716, float %1717), !dbg !36
  %1719 = extractelement <32 x float> %1581, i64 2, !dbg !36
  %1720 = tail call float @llvm.maxnum.f32(float %1718, float %1719), !dbg !36
  %1721 = extractelement <32 x float> %1581, i64 3, !dbg !36
  %1722 = tail call float @llvm.maxnum.f32(float %1720, float %1721), !dbg !36
  %1723 = extractelement <32 x float> %1581, i64 4, !dbg !36
  %1724 = tail call float @llvm.maxnum.f32(float %1722, float %1723), !dbg !36
  %1725 = extractelement <32 x float> %1581, i64 5, !dbg !36
  %1726 = tail call float @llvm.maxnum.f32(float %1724, float %1725), !dbg !36
  %1727 = extractelement <32 x float> %1581, i64 6, !dbg !36
  %1728 = tail call float @llvm.maxnum.f32(float %1726, float %1727), !dbg !36
  %1729 = extractelement <32 x float> %1581, i64 7, !dbg !36
  %1730 = tail call float @llvm.maxnum.f32(float %1728, float %1729), !dbg !36
  %1731 = extractelement <32 x float> %1581, i64 8, !dbg !36
  %1732 = tail call float @llvm.maxnum.f32(float %1730, float %1731), !dbg !36
  %1733 = extractelement <32 x float> %1581, i64 9, !dbg !36
  %1734 = tail call float @llvm.maxnum.f32(float %1732, float %1733), !dbg !36
  %1735 = extractelement <32 x float> %1581, i64 10, !dbg !36
  %1736 = tail call float @llvm.maxnum.f32(float %1734, float %1735), !dbg !36
  %1737 = extractelement <32 x float> %1581, i64 11, !dbg !36
  %1738 = tail call float @llvm.maxnum.f32(float %1736, float %1737), !dbg !36
  %1739 = extractelement <32 x float> %1581, i64 12, !dbg !36
  %1740 = tail call float @llvm.maxnum.f32(float %1738, float %1739), !dbg !36
  %1741 = extractelement <32 x float> %1581, i64 13, !dbg !36
  %1742 = tail call float @llvm.maxnum.f32(float %1740, float %1741), !dbg !36
  %1743 = extractelement <32 x float> %1581, i64 14, !dbg !36
  %1744 = tail call float @llvm.maxnum.f32(float %1742, float %1743), !dbg !36
  %1745 = extractelement <32 x float> %1581, i64 15, !dbg !36
  %1746 = tail call float @llvm.maxnum.f32(float %1744, float %1745), !dbg !36
  %1747 = extractelement <32 x float> %1581, i64 16, !dbg !36
  %1748 = tail call float @llvm.maxnum.f32(float %1746, float %1747), !dbg !36
  %1749 = extractelement <32 x float> %1581, i64 17, !dbg !36
  %1750 = tail call float @llvm.maxnum.f32(float %1748, float %1749), !dbg !36
  %1751 = extractelement <32 x float> %1581, i64 18, !dbg !36
  %1752 = tail call float @llvm.maxnum.f32(float %1750, float %1751), !dbg !36
  %1753 = extractelement <32 x float> %1581, i64 19, !dbg !36
  %1754 = tail call float @llvm.maxnum.f32(float %1752, float %1753), !dbg !36
  %1755 = extractelement <32 x float> %1581, i64 20, !dbg !36
  %1756 = tail call float @llvm.maxnum.f32(float %1754, float %1755), !dbg !36
  %1757 = extractelement <32 x float> %1581, i64 21, !dbg !36
  %1758 = tail call float @llvm.maxnum.f32(float %1756, float %1757), !dbg !36
  %1759 = extractelement <32 x float> %1581, i64 22, !dbg !36
  %1760 = tail call float @llvm.maxnum.f32(float %1758, float %1759), !dbg !36
  %1761 = extractelement <32 x float> %1581, i64 23, !dbg !36
  %1762 = tail call float @llvm.maxnum.f32(float %1760, float %1761), !dbg !36
  %1763 = extractelement <32 x float> %1581, i64 24, !dbg !36
  %1764 = tail call float @llvm.maxnum.f32(float %1762, float %1763), !dbg !36
  %1765 = extractelement <32 x float> %1581, i64 25, !dbg !36
  %1766 = tail call float @llvm.maxnum.f32(float %1764, float %1765), !dbg !36
  %1767 = extractelement <32 x float> %1581, i64 26, !dbg !36
  %1768 = tail call float @llvm.maxnum.f32(float %1766, float %1767), !dbg !36
  %1769 = extractelement <32 x float> %1581, i64 27, !dbg !36
  %1770 = tail call float @llvm.maxnum.f32(float %1768, float %1769), !dbg !36
  %1771 = extractelement <32 x float> %1581, i64 28, !dbg !36
  %1772 = tail call float @llvm.maxnum.f32(float %1770, float %1771), !dbg !36
  %1773 = extractelement <32 x float> %1581, i64 29, !dbg !36
  %1774 = tail call float @llvm.maxnum.f32(float %1772, float %1773), !dbg !36
  %1775 = extractelement <32 x float> %1581, i64 30, !dbg !36
  %1776 = tail call float @llvm.maxnum.f32(float %1774, float %1775), !dbg !36
  %1777 = extractelement <32 x float> %1581, i64 31, !dbg !36
  %1778 = tail call float @llvm.maxnum.f32(float %1776, float %1777), !dbg !36
  %1779 = extractelement <4 x float> %1585, i64 0, !dbg !36
  %1780 = tail call float @llvm.maxnum.f32(float %1778, float %1779), !dbg !36
  %1781 = extractelement <4 x float> %1585, i64 1, !dbg !36
  %1782 = tail call float @llvm.maxnum.f32(float %1780, float %1781), !dbg !36
  %1783 = extractelement <4 x float> %1585, i64 2, !dbg !36
  %1784 = tail call float @llvm.maxnum.f32(float %1782, float %1783), !dbg !36
  %1785 = extractelement <4 x float> %1585, i64 3, !dbg !36
  %1786 = tail call float @llvm.maxnum.f32(float %1784, float %1785), !dbg !36
  %1787 = extractelement <4 x float> %1584, i64 0, !dbg !36
  %1788 = tail call float @llvm.maxnum.f32(float %1786, float %1787), !dbg !36
  %1789 = extractelement <4 x float> %1584, i64 1, !dbg !36
  %1790 = tail call float @llvm.maxnum.f32(float %1788, float %1789), !dbg !36
  %1791 = extractelement <4 x float> %1584, i64 2, !dbg !36
  %1792 = tail call float @llvm.maxnum.f32(float %1790, float %1791), !dbg !36
  %1793 = extractelement <4 x float> %1584, i64 3, !dbg !36
  %1794 = tail call float @llvm.maxnum.f32(float %1792, float %1793), !dbg !36
  %1795 = extractelement <4 x float> %1583, i64 0, !dbg !36
  %1796 = tail call float @llvm.maxnum.f32(float %1794, float %1795), !dbg !36
  %1797 = extractelement <4 x float> %1583, i64 1, !dbg !36
  %1798 = tail call float @llvm.maxnum.f32(float %1796, float %1797), !dbg !36
  %1799 = extractelement <4 x float> %1583, i64 2, !dbg !36
  %1800 = tail call float @llvm.maxnum.f32(float %1798, float %1799), !dbg !36
  %1801 = extractelement <4 x float> %1583, i64 3, !dbg !36
  %1802 = tail call float @llvm.maxnum.f32(float %1800, float %1801), !dbg !36
  %1803 = extractelement <4 x float> %1582, i64 0, !dbg !36
  %1804 = tail call float @llvm.maxnum.f32(float %1802, float %1803), !dbg !36
  %1805 = extractelement <4 x float> %1582, i64 1, !dbg !36
  %1806 = tail call float @llvm.maxnum.f32(float %1804, float %1805), !dbg !36
  %1807 = extractelement <4 x float> %1582, i64 2, !dbg !36
  %1808 = tail call float @llvm.maxnum.f32(float %1806, float %1807), !dbg !36
  %1809 = extractelement <4 x float> %1582, i64 3, !dbg !36
  %1810 = tail call float @llvm.maxnum.f32(float %1808, float %1809), !dbg !36
  %1811 = extractelement <4 x float> %1586, i64 0, !dbg !36
  %1812 = tail call float @llvm.maxnum.f32(float %1810, float %1811), !dbg !36
  %1813 = extractelement <4 x float> %1586, i64 1, !dbg !36
  %1814 = tail call float @llvm.maxnum.f32(float %1812, float %1813), !dbg !36
  %1815 = extractelement <4 x float> %1586, i64 2, !dbg !36
  %1816 = tail call float @llvm.maxnum.f32(float %1814, float %1815), !dbg !36
  %1817 = extractelement <4 x float> %1586, i64 3, !dbg !36
  %1818 = tail call float @llvm.maxnum.f32(float %1816, float %1817), !dbg !36
  %1819 = extractelement <2 x float> %1587, i64 0, !dbg !36
  %1820 = tail call float @llvm.maxnum.f32(float %1818, float %1819), !dbg !36
  %1821 = extractelement <2 x float> %1587, i64 1, !dbg !36
  %1822 = tail call float @llvm.maxnum.f32(float %1820, float %1821), !dbg !36
  %1823 = extractelement <2 x float> %1580, i64 0, !dbg !36
  %1824 = tail call float @llvm.maxnum.f32(float %1822, float %1823), !dbg !36
  %1825 = extractelement <2 x float> %1580, i64 1, !dbg !36
  %1826 = tail call float @llvm.maxnum.f32(float %1824, float %1825), !dbg !36
  %1827 = extractelement <2 x float> %1579, i64 0, !dbg !36
  %1828 = tail call float @llvm.maxnum.f32(float %1826, float %1827), !dbg !36
  %1829 = extractelement <2 x float> %1579, i64 1, !dbg !36
  %1830 = tail call float @llvm.maxnum.f32(float %1828, float %1829), !dbg !36
  %1831 = extractelement <2 x float> %1578, i64 0, !dbg !36
  %1832 = tail call float @llvm.maxnum.f32(float %1830, float %1831), !dbg !36
  %1833 = extractelement <2 x float> %1578, i64 1, !dbg !36
  %1834 = tail call float @llvm.maxnum.f32(float %1832, float %1833), !dbg !36
  %1835 = extractelement <2 x float> %1577, i64 0, !dbg !36
  %1836 = tail call float @llvm.maxnum.f32(float %1834, float %1835), !dbg !36
  %1837 = extractelement <2 x float> %1577, i64 1, !dbg !36
  %1838 = tail call float @llvm.maxnum.f32(float %1836, float %1837), !dbg !36
  %1839 = extractelement <2 x float> %1576, i64 0, !dbg !36
  %1840 = tail call float @llvm.maxnum.f32(float %1838, float %1839), !dbg !36
  %1841 = extractelement <2 x float> %1576, i64 1, !dbg !36
  %1842 = tail call float @llvm.maxnum.f32(float %1840, float %1841), !dbg !36
  %1843 = bitcast float %1842 to i32, !dbg !42
  %1844 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %988, i32 %1843), !dbg !42
  %1845 = bitcast i32 %1844 to float, !dbg !42
  %1846 = tail call float @llvm.maxnum.f32(float %1842, float %1845), !dbg !36
  %1847 = tail call float @llvm.maxnum.f32(float %1083, float %1846), !dbg !44
  %1848 = insertelement <32 x float> poison, float %1847, i64 0, !dbg !46
  %1849 = shufflevector <32 x float> %1848, <32 x float> poison, <32 x i32> zeroinitializer, !dbg !46
  %1850 = fsub <32 x float> %1581, %1849, !dbg !46
  %1851 = insertelement <2 x float> poison, float %1847, i64 0, !dbg !46
  %1852 = shufflevector <2 x float> %1851, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !46
  %1853 = fsub <2 x float> %1587, %1852, !dbg !46
  %1854 = fcmp olt <2 x float> %1853, <float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1855 = select <2 x i1> %1854, <2 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1856 = select <2 x i1> %1854, <2 x float> <float 6.400000e+01, float 6.400000e+01>, <2 x float> zeroinitializer, !dbg !47
  %1857 = fadd <2 x float> %1853, %1856, !dbg !47
  %1858 = tail call <2 x float> @llvm.exp2.v2f32(<2 x float> %1857), !dbg !47
  %1859 = fmul <2 x float> %1855, %1858, !dbg !47
  %1860 = fsub <2 x float> %1580, %1852, !dbg !46
  %1861 = fcmp olt <2 x float> %1860, <float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1862 = select <2 x i1> %1861, <2 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1863 = select <2 x i1> %1861, <2 x float> <float 6.400000e+01, float 6.400000e+01>, <2 x float> zeroinitializer, !dbg !47
  %1864 = fadd <2 x float> %1860, %1863, !dbg !47
  %1865 = tail call <2 x float> @llvm.exp2.v2f32(<2 x float> %1864), !dbg !47
  %1866 = fmul <2 x float> %1862, %1865, !dbg !47
  %1867 = fsub <2 x float> %1579, %1852, !dbg !46
  %1868 = fcmp olt <2 x float> %1867, <float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1869 = select <2 x i1> %1868, <2 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1870 = select <2 x i1> %1868, <2 x float> <float 6.400000e+01, float 6.400000e+01>, <2 x float> zeroinitializer, !dbg !47
  %1871 = fadd <2 x float> %1867, %1870, !dbg !47
  %1872 = tail call <2 x float> @llvm.exp2.v2f32(<2 x float> %1871), !dbg !47
  %1873 = fmul <2 x float> %1869, %1872, !dbg !47
  %1874 = fsub <2 x float> %1578, %1852, !dbg !46
  %1875 = fcmp olt <2 x float> %1874, <float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1876 = select <2 x i1> %1875, <2 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1877 = select <2 x i1> %1875, <2 x float> <float 6.400000e+01, float 6.400000e+01>, <2 x float> zeroinitializer, !dbg !47
  %1878 = fadd <2 x float> %1874, %1877, !dbg !47
  %1879 = tail call <2 x float> @llvm.exp2.v2f32(<2 x float> %1878), !dbg !47
  %1880 = fmul <2 x float> %1876, %1879, !dbg !47
  %1881 = fsub <2 x float> %1577, %1852, !dbg !46
  %1882 = fcmp olt <2 x float> %1881, <float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1883 = select <2 x i1> %1882, <2 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1884 = select <2 x i1> %1882, <2 x float> <float 6.400000e+01, float 6.400000e+01>, <2 x float> zeroinitializer, !dbg !47
  %1885 = fadd <2 x float> %1881, %1884, !dbg !47
  %1886 = tail call <2 x float> @llvm.exp2.v2f32(<2 x float> %1885), !dbg !47
  %1887 = fmul <2 x float> %1883, %1886, !dbg !47
  %1888 = fsub <2 x float> %1576, %1852, !dbg !46
  %1889 = fcmp olt <2 x float> %1888, <float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1890 = select <2 x i1> %1889, <2 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1891 = select <2 x i1> %1889, <2 x float> <float 6.400000e+01, float 6.400000e+01>, <2 x float> zeroinitializer, !dbg !47
  %1892 = fadd <2 x float> %1888, %1891, !dbg !47
  %1893 = tail call <2 x float> @llvm.exp2.v2f32(<2 x float> %1892), !dbg !47
  %1894 = fmul <2 x float> %1890, %1893, !dbg !47
  %1895 = fsub float %1083, %1847, !dbg !48
  %1896 = fcmp olt float %1895, -1.260000e+02, !dbg !49
  %1897 = select i1 %1896, float 0x3BF0000000000000, float 1.000000e+00, !dbg !49
  %1898 = select i1 %1896, float 6.400000e+01, float 0.000000e+00, !dbg !49
  %1899 = fadd float %1895, %1898, !dbg !49
  %1900 = tail call float @llvm.exp2.f32(float %1899), !dbg !49
  %1901 = fmul float %1897, %1900, !dbg !49
  %1902 = insertelement <16 x float> poison, float %1901, i64 0, !dbg !50
  %1903 = shufflevector <16 x float> %1902, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !50
  %1904 = fmul <16 x float> %1095, %1903, !dbg !50
  %1905 = fmul <16 x float> %1094, %1903, !dbg !50
  %1906 = fmul <16 x float> %1093, %1903, !dbg !50
  %1907 = fmul <16 x float> %1092, %1903, !dbg !50
  %1908 = shufflevector <32 x float> %1850, <32 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !47
  %1909 = fcmp olt <4 x float> %1908, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1910 = select <4 x i1> %1909, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1911 = select <4 x i1> %1909, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %1912 = fadd <4 x float> %1908, %1911, !dbg !47
  %1913 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1912), !dbg !47
  %1914 = fmul <4 x float> %1910, %1913, !dbg !47
  %1915 = fptrunc <4 x float> %1914 to <4 x half>, !dbg !51
  %1916 = shufflevector <32 x float> %1850, <32 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !47
  %1917 = fcmp olt <4 x float> %1916, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1918 = select <4 x i1> %1917, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1919 = select <4 x i1> %1917, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %1920 = fadd <4 x float> %1916, %1919, !dbg !47
  %1921 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1920), !dbg !47
  %1922 = fmul <4 x float> %1918, %1921, !dbg !47
  %1923 = fptrunc <4 x float> %1922 to <4 x half>, !dbg !51
  %1924 = shufflevector <32 x float> %1850, <32 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !47
  %1925 = fcmp olt <4 x float> %1924, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1926 = select <4 x i1> %1925, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1927 = select <4 x i1> %1925, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %1928 = fadd <4 x float> %1924, %1927, !dbg !47
  %1929 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1928), !dbg !47
  %1930 = fmul <4 x float> %1926, %1929, !dbg !47
  %1931 = fptrunc <4 x float> %1930 to <4 x half>, !dbg !51
  %1932 = shufflevector <32 x float> %1850, <32 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !47
  %1933 = fcmp olt <4 x float> %1932, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1934 = select <4 x i1> %1933, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1935 = select <4 x i1> %1933, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %1936 = fadd <4 x float> %1932, %1935, !dbg !47
  %1937 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1936), !dbg !47
  %1938 = fmul <4 x float> %1934, %1937, !dbg !47
  %1939 = fptrunc <4 x float> %1938 to <4 x half>, !dbg !51
  %1940 = shufflevector <32 x float> %1850, <32 x float> poison, <4 x i32> <i32 16, i32 17, i32 18, i32 19>, !dbg !47
  %1941 = fcmp olt <4 x float> %1940, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1942 = select <4 x i1> %1941, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1943 = select <4 x i1> %1941, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %1944 = fadd <4 x float> %1940, %1943, !dbg !47
  %1945 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1944), !dbg !47
  %1946 = fmul <4 x float> %1942, %1945, !dbg !47
  %1947 = fptrunc <4 x float> %1946 to <4 x half>, !dbg !51
  %1948 = shufflevector <32 x float> %1850, <32 x float> poison, <4 x i32> <i32 20, i32 21, i32 22, i32 23>, !dbg !47
  %1949 = fcmp olt <4 x float> %1948, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1950 = select <4 x i1> %1949, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1951 = select <4 x i1> %1949, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %1952 = fadd <4 x float> %1948, %1951, !dbg !47
  %1953 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1952), !dbg !47
  %1954 = fmul <4 x float> %1950, %1953, !dbg !47
  %1955 = fptrunc <4 x float> %1954 to <4 x half>, !dbg !51
  %1956 = shufflevector <32 x float> %1850, <32 x float> poison, <4 x i32> <i32 24, i32 25, i32 26, i32 27>, !dbg !47
  %1957 = fcmp olt <4 x float> %1956, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1958 = select <4 x i1> %1957, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1959 = select <4 x i1> %1957, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %1960 = fadd <4 x float> %1956, %1959, !dbg !47
  %1961 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1960), !dbg !47
  %1962 = fmul <4 x float> %1958, %1961, !dbg !47
  %1963 = fptrunc <4 x float> %1962 to <4 x half>, !dbg !51
  %1964 = shufflevector <32 x float> %1850, <32 x float> poison, <4 x i32> <i32 28, i32 29, i32 30, i32 31>, !dbg !47
  %1965 = fcmp olt <4 x float> %1964, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1966 = select <4 x i1> %1965, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1967 = select <4 x i1> %1965, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %1968 = fadd <4 x float> %1964, %1967, !dbg !47
  %1969 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1968), !dbg !47
  %1970 = fmul <4 x float> %1966, %1969, !dbg !47
  %1971 = fptrunc <4 x float> %1970 to <4 x half>, !dbg !51
  %1972 = insertelement <4 x float> poison, float %1847, i64 0, !dbg !46
  %1973 = shufflevector <4 x float> %1972, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !46
  %1974 = fsub <4 x float> %1585, %1973, !dbg !46
  %1975 = fcmp olt <4 x float> %1974, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1976 = select <4 x i1> %1975, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1977 = select <4 x i1> %1975, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %1978 = fadd <4 x float> %1974, %1977, !dbg !47
  %1979 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1978), !dbg !47
  %1980 = fmul <4 x float> %1976, %1979, !dbg !47
  %1981 = fptrunc <4 x float> %1980 to <4 x half>, !dbg !51
  %1982 = fsub <4 x float> %1584, %1973, !dbg !46
  %1983 = fcmp olt <4 x float> %1982, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1984 = select <4 x i1> %1983, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1985 = select <4 x i1> %1983, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %1986 = fadd <4 x float> %1982, %1985, !dbg !47
  %1987 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1986), !dbg !47
  %1988 = fmul <4 x float> %1984, %1987, !dbg !47
  %1989 = fptrunc <4 x float> %1988 to <4 x half>, !dbg !51
  %1990 = fsub <4 x float> %1583, %1973, !dbg !46
  %1991 = fcmp olt <4 x float> %1990, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %1992 = select <4 x i1> %1991, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %1993 = select <4 x i1> %1991, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %1994 = fadd <4 x float> %1990, %1993, !dbg !47
  %1995 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1994), !dbg !47
  %1996 = fmul <4 x float> %1992, %1995, !dbg !47
  %1997 = fptrunc <4 x float> %1996 to <4 x half>, !dbg !51
  %1998 = fsub <4 x float> %1582, %1973, !dbg !46
  %1999 = fcmp olt <4 x float> %1998, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %2000 = select <4 x i1> %1999, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %2001 = select <4 x i1> %1999, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %2002 = fadd <4 x float> %1998, %2001, !dbg !47
  %2003 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2002), !dbg !47
  %2004 = fmul <4 x float> %2000, %2003, !dbg !47
  %2005 = fptrunc <4 x float> %2004 to <4 x half>, !dbg !51
  %2006 = fsub <4 x float> %1586, %1973, !dbg !46
  %2007 = fcmp olt <4 x float> %2006, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !47
  %2008 = select <4 x i1> %2007, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !47
  %2009 = select <4 x i1> %2007, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !47
  %2010 = fadd <4 x float> %2006, %2009, !dbg !47
  %2011 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2010), !dbg !47
  %2012 = fmul <4 x float> %2008, %2011, !dbg !47
  %2013 = fptrunc <4 x float> %2012 to <4 x half>, !dbg !51
  %2014 = extractelement <2 x float> %1866, i64 0, !dbg !51
  %2015 = extractelement <2 x float> %1866, i64 1, !dbg !51
  %2016 = shufflevector <2 x float> %1866, <2 x float> poison, <4 x i32> <i32 poison, i32 poison, i32 0, i32 1>, !dbg !51
  %2017 = shufflevector <2 x float> %1859, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !51
  %2018 = shufflevector <4 x float> %2017, <4 x float> %2016, <4 x i32> <i32 0, i32 1, i32 6, i32 7>, !dbg !51
  %2019 = fptrunc <4 x float> %2018 to <4 x half>, !dbg !51
  %2020 = extractelement <2 x float> %1873, i64 0, !dbg !51
  %2021 = extractelement <2 x float> %1873, i64 1, !dbg !51
  %2022 = extractelement <2 x float> %1880, i64 0, !dbg !51
  %2023 = extractelement <2 x float> %1880, i64 1, !dbg !51
  %2024 = shufflevector <2 x float> %1873, <2 x float> %1880, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !51
  %2025 = fptrunc <4 x float> %2024 to <4 x half>, !dbg !51
  %2026 = extractelement <2 x float> %1887, i64 0, !dbg !51
  %2027 = extractelement <2 x float> %1887, i64 1, !dbg !51
  %2028 = extractelement <2 x float> %1894, i64 0, !dbg !51
  %2029 = extractelement <2 x float> %1894, i64 1, !dbg !51
  %2030 = shufflevector <2 x float> %1887, <2 x float> %1894, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !51
  %2031 = fptrunc <4 x float> %2030 to <4 x half>, !dbg !51
  fence syncscope("workgroup") release, !dbg !51
  tail call void @llvm.amdgcn.s.barrier(), !dbg !51
  fence syncscope("workgroup") acquire, !dbg !51
  %2032 = addrspacecast ptr addrspace(1) %1652 to ptr, !dbg !30
  %2033 = load <1 x half>, ptr %2032, align 2, !dbg !30
  %2034 = addrspacecast ptr addrspace(1) %1653 to ptr, !dbg !30
  %2035 = load <1 x half>, ptr %2034, align 2, !dbg !30
  %2036 = addrspacecast ptr addrspace(1) %1654 to ptr, !dbg !30
  %2037 = load <1 x half>, ptr %2036, align 2, !dbg !30
  %2038 = shufflevector <1 x half> %2037, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2039 = addrspacecast ptr addrspace(1) %1655 to ptr, !dbg !30
  %2040 = load <1 x half>, ptr %2039, align 2, !dbg !30
  %2041 = shufflevector <1 x half> %2040, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2042 = addrspacecast ptr addrspace(1) %1656 to ptr, !dbg !30
  %2043 = load <1 x half>, ptr %2042, align 2, !dbg !30
  %2044 = addrspacecast ptr addrspace(1) %1657 to ptr, !dbg !30
  %2045 = load <1 x half>, ptr %2044, align 2, !dbg !30
  %2046 = addrspacecast ptr addrspace(1) %1658 to ptr, !dbg !30
  %2047 = load <1 x half>, ptr %2046, align 2, !dbg !30
  %2048 = shufflevector <1 x half> %2047, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2049 = addrspacecast ptr addrspace(1) %1659 to ptr, !dbg !30
  %2050 = load <1 x half>, ptr %2049, align 2, !dbg !30
  %2051 = shufflevector <1 x half> %2050, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2052 = addrspacecast ptr addrspace(1) %1684 to ptr, !dbg !30
  %2053 = load <1 x half>, ptr %2052, align 2, !dbg !30
  %2054 = addrspacecast ptr addrspace(1) %1685 to ptr, !dbg !30
  %2055 = load <1 x half>, ptr %2054, align 2, !dbg !30
  %2056 = addrspacecast ptr addrspace(1) %1686 to ptr, !dbg !30
  %2057 = load <1 x half>, ptr %2056, align 2, !dbg !30
  %2058 = shufflevector <1 x half> %2057, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2059 = addrspacecast ptr addrspace(1) %1687 to ptr, !dbg !30
  %2060 = load <1 x half>, ptr %2059, align 2, !dbg !30
  %2061 = shufflevector <1 x half> %2060, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2062 = addrspacecast ptr addrspace(1) %1688 to ptr, !dbg !30
  %2063 = load <1 x half>, ptr %2062, align 2, !dbg !30
  %2064 = addrspacecast ptr addrspace(1) %1689 to ptr, !dbg !30
  %2065 = load <1 x half>, ptr %2064, align 2, !dbg !30
  %2066 = addrspacecast ptr addrspace(1) %1690 to ptr, !dbg !30
  %2067 = load <1 x half>, ptr %2066, align 2, !dbg !30
  %2068 = shufflevector <1 x half> %2067, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2069 = addrspacecast ptr addrspace(1) %1691 to ptr, !dbg !30
  %2070 = load <1 x half>, ptr %2069, align 2, !dbg !30
  %2071 = shufflevector <1 x half> %2070, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2072 = addrspacecast ptr addrspace(1) %1660 to ptr, !dbg !30
  %2073 = load <1 x half>, ptr %2072, align 2, !dbg !30
  %2074 = addrspacecast ptr addrspace(1) %1661 to ptr, !dbg !30
  %2075 = load <1 x half>, ptr %2074, align 2, !dbg !30
  %2076 = addrspacecast ptr addrspace(1) %1662 to ptr, !dbg !30
  %2077 = load <1 x half>, ptr %2076, align 2, !dbg !30
  %2078 = shufflevector <1 x half> %2077, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2079 = addrspacecast ptr addrspace(1) %1663 to ptr, !dbg !30
  %2080 = load <1 x half>, ptr %2079, align 2, !dbg !30
  %2081 = shufflevector <1 x half> %2080, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2082 = addrspacecast ptr addrspace(1) %1664 to ptr, !dbg !30
  %2083 = load <1 x half>, ptr %2082, align 2, !dbg !30
  %2084 = addrspacecast ptr addrspace(1) %1665 to ptr, !dbg !30
  %2085 = load <1 x half>, ptr %2084, align 2, !dbg !30
  %2086 = addrspacecast ptr addrspace(1) %1666 to ptr, !dbg !30
  %2087 = load <1 x half>, ptr %2086, align 2, !dbg !30
  %2088 = shufflevector <1 x half> %2087, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2089 = addrspacecast ptr addrspace(1) %1667 to ptr, !dbg !30
  %2090 = load <1 x half>, ptr %2089, align 2, !dbg !30
  %2091 = shufflevector <1 x half> %2090, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2092 = addrspacecast ptr addrspace(1) %1692 to ptr, !dbg !30
  %2093 = load <1 x half>, ptr %2092, align 2, !dbg !30
  %2094 = addrspacecast ptr addrspace(1) %1693 to ptr, !dbg !30
  %2095 = load <1 x half>, ptr %2094, align 2, !dbg !30
  %2096 = addrspacecast ptr addrspace(1) %1694 to ptr, !dbg !30
  %2097 = load <1 x half>, ptr %2096, align 2, !dbg !30
  %2098 = shufflevector <1 x half> %2097, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2099 = addrspacecast ptr addrspace(1) %1695 to ptr, !dbg !30
  %2100 = load <1 x half>, ptr %2099, align 2, !dbg !30
  %2101 = shufflevector <1 x half> %2100, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2102 = addrspacecast ptr addrspace(1) %1696 to ptr, !dbg !30
  %2103 = load <1 x half>, ptr %2102, align 2, !dbg !30
  %2104 = addrspacecast ptr addrspace(1) %1697 to ptr, !dbg !30
  %2105 = load <1 x half>, ptr %2104, align 2, !dbg !30
  %2106 = addrspacecast ptr addrspace(1) %1698 to ptr, !dbg !30
  %2107 = load <1 x half>, ptr %2106, align 2, !dbg !30
  %2108 = shufflevector <1 x half> %2107, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2109 = addrspacecast ptr addrspace(1) %1699 to ptr, !dbg !30
  %2110 = load <1 x half>, ptr %2109, align 2, !dbg !30
  %2111 = shufflevector <1 x half> %2110, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !30
  tail call void @llvm.amdgcn.s.barrier(), !dbg !30
  fence syncscope("workgroup") acquire, !dbg !30
  %2112 = shufflevector <1 x half> %2033, <1 x half> %2035, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2113 = shufflevector <4 x half> %2112, <4 x half> %2038, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2114 = shufflevector <4 x half> %2113, <4 x half> %2041, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2114, ptr addrspace(3) %995, align 8, !dbg !30
  %2115 = shufflevector <1 x half> %2043, <1 x half> %2045, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2116 = shufflevector <4 x half> %2115, <4 x half> %2048, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2117 = shufflevector <4 x half> %2116, <4 x half> %2051, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2117, ptr addrspace(3) %1001, align 8, !dbg !30
  %2118 = shufflevector <1 x half> %2053, <1 x half> %2055, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2119 = shufflevector <4 x half> %2118, <4 x half> %2058, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2120 = shufflevector <4 x half> %2119, <4 x half> %2061, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2120, ptr addrspace(3) %gep, align 8, !dbg !30
  %2121 = shufflevector <1 x half> %2063, <1 x half> %2065, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2122 = shufflevector <4 x half> %2121, <4 x half> %2068, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2123 = shufflevector <4 x half> %2122, <4 x half> %2071, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2123, ptr addrspace(3) %gep256, align 8, !dbg !30
  fence syncscope("workgroup") release, !dbg !30
  tail call void @llvm.amdgcn.s.barrier(), !dbg !30
  fence syncscope("workgroup") acquire, !dbg !30
  %2124 = load <4 x half>, ptr addrspace(3) %1026, align 8, !dbg !30
  %2125 = load <4 x half>, ptr addrspace(3) %1028, align 8, !dbg !30
  %2126 = load <4 x half>, ptr addrspace(3) %1030, align 8, !dbg !30
  %2127 = load <4 x half>, ptr addrspace(3) %1032, align 8, !dbg !30
  %2128 = load <4 x half>, ptr addrspace(3) %1035, align 8, !dbg !30
  %2129 = load <4 x half>, ptr addrspace(3) %1038, align 8, !dbg !30
  %2130 = load <4 x half>, ptr addrspace(3) %1041, align 8, !dbg !30
  %2131 = load <4 x half>, ptr addrspace(3) %1044, align 8, !dbg !30
  %2132 = load <4 x half>, ptr addrspace(3) %1047, align 8, !dbg !30
  %2133 = load <4 x half>, ptr addrspace(3) %1050, align 8, !dbg !30
  %2134 = load <4 x half>, ptr addrspace(3) %1053, align 8, !dbg !30
  %2135 = load <4 x half>, ptr addrspace(3) %1056, align 8, !dbg !30
  %2136 = load <4 x half>, ptr addrspace(3) %1059, align 8, !dbg !30
  %2137 = load <4 x half>, ptr addrspace(3) %1062, align 8, !dbg !30
  %2138 = load <4 x half>, ptr addrspace(3) %1065, align 8, !dbg !30
  %2139 = load <4 x half>, ptr addrspace(3) %1068, align 8, !dbg !30
  %2140 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2124, <4 x half> %1915, <16 x float> %1904, i32 0, i32 0, i32 0), !dbg !52
  %2141 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2125, <4 x half> %1923, <16 x float> %2140, i32 0, i32 0, i32 0), !dbg !52
  %2142 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2126, <4 x half> %1931, <16 x float> %2141, i32 0, i32 0, i32 0), !dbg !52
  %2143 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2127, <4 x half> %1939, <16 x float> %2142, i32 0, i32 0, i32 0), !dbg !52
  %2144 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2128, <4 x half> %1915, <16 x float> %1905, i32 0, i32 0, i32 0), !dbg !52
  %2145 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2129, <4 x half> %1923, <16 x float> %2144, i32 0, i32 0, i32 0), !dbg !52
  %2146 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2130, <4 x half> %1931, <16 x float> %2145, i32 0, i32 0, i32 0), !dbg !52
  %2147 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2131, <4 x half> %1939, <16 x float> %2146, i32 0, i32 0, i32 0), !dbg !52
  %2148 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2132, <4 x half> %1915, <16 x float> %1906, i32 0, i32 0, i32 0), !dbg !52
  %2149 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2133, <4 x half> %1923, <16 x float> %2148, i32 0, i32 0, i32 0), !dbg !52
  %2150 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2134, <4 x half> %1931, <16 x float> %2149, i32 0, i32 0, i32 0), !dbg !52
  %2151 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2135, <4 x half> %1939, <16 x float> %2150, i32 0, i32 0, i32 0), !dbg !52
  %2152 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2136, <4 x half> %1915, <16 x float> %1907, i32 0, i32 0, i32 0), !dbg !52
  %2153 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2137, <4 x half> %1923, <16 x float> %2152, i32 0, i32 0, i32 0), !dbg !52
  %2154 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2138, <4 x half> %1931, <16 x float> %2153, i32 0, i32 0, i32 0), !dbg !52
  %2155 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2139, <4 x half> %1939, <16 x float> %2154, i32 0, i32 0, i32 0), !dbg !52
  fence syncscope("workgroup") release, !dbg !30
  tail call void @llvm.amdgcn.s.barrier(), !dbg !30
  fence syncscope("workgroup") acquire, !dbg !30
  %2156 = shufflevector <1 x half> %2073, <1 x half> %2075, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2157 = shufflevector <4 x half> %2156, <4 x half> %2078, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2158 = shufflevector <4 x half> %2157, <4 x half> %2081, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2158, ptr addrspace(3) %995, align 8, !dbg !30
  %2159 = shufflevector <1 x half> %2083, <1 x half> %2085, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2160 = shufflevector <4 x half> %2159, <4 x half> %2088, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2161 = shufflevector <4 x half> %2160, <4 x half> %2091, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2161, ptr addrspace(3) %1001, align 8, !dbg !30
  %2162 = shufflevector <1 x half> %2093, <1 x half> %2095, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2163 = shufflevector <4 x half> %2162, <4 x half> %2098, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2164 = shufflevector <4 x half> %2163, <4 x half> %2101, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2164, ptr addrspace(3) %gep, align 8, !dbg !30
  %2165 = shufflevector <1 x half> %2103, <1 x half> %2105, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2166 = shufflevector <4 x half> %2165, <4 x half> %2108, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2167 = shufflevector <4 x half> %2166, <4 x half> %2111, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2167, ptr addrspace(3) %gep256, align 8, !dbg !30
  %2168 = addrspacecast ptr addrspace(1) %1668 to ptr, !dbg !30
  %2169 = load <1 x half>, ptr %2168, align 2, !dbg !30
  %2170 = addrspacecast ptr addrspace(1) %1669 to ptr, !dbg !30
  %2171 = load <1 x half>, ptr %2170, align 2, !dbg !30
  %2172 = addrspacecast ptr addrspace(1) %1670 to ptr, !dbg !30
  %2173 = load <1 x half>, ptr %2172, align 2, !dbg !30
  %2174 = shufflevector <1 x half> %2173, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2175 = addrspacecast ptr addrspace(1) %1671 to ptr, !dbg !30
  %2176 = load <1 x half>, ptr %2175, align 2, !dbg !30
  %2177 = shufflevector <1 x half> %2176, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2178 = addrspacecast ptr addrspace(1) %1672 to ptr, !dbg !30
  %2179 = load <1 x half>, ptr %2178, align 2, !dbg !30
  %2180 = addrspacecast ptr addrspace(1) %1673 to ptr, !dbg !30
  %2181 = load <1 x half>, ptr %2180, align 2, !dbg !30
  %2182 = addrspacecast ptr addrspace(1) %1674 to ptr, !dbg !30
  %2183 = load <1 x half>, ptr %2182, align 2, !dbg !30
  %2184 = shufflevector <1 x half> %2183, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2185 = addrspacecast ptr addrspace(1) %1675 to ptr, !dbg !30
  %2186 = load <1 x half>, ptr %2185, align 2, !dbg !30
  %2187 = shufflevector <1 x half> %2186, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2188 = addrspacecast ptr addrspace(1) %1700 to ptr, !dbg !30
  %2189 = load <1 x half>, ptr %2188, align 2, !dbg !30
  %2190 = addrspacecast ptr addrspace(1) %1701 to ptr, !dbg !30
  %2191 = load <1 x half>, ptr %2190, align 2, !dbg !30
  %2192 = addrspacecast ptr addrspace(1) %1702 to ptr, !dbg !30
  %2193 = load <1 x half>, ptr %2192, align 2, !dbg !30
  %2194 = shufflevector <1 x half> %2193, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2195 = addrspacecast ptr addrspace(1) %1703 to ptr, !dbg !30
  %2196 = load <1 x half>, ptr %2195, align 2, !dbg !30
  %2197 = shufflevector <1 x half> %2196, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2198 = addrspacecast ptr addrspace(1) %1704 to ptr, !dbg !30
  %2199 = load <1 x half>, ptr %2198, align 2, !dbg !30
  %2200 = addrspacecast ptr addrspace(1) %1705 to ptr, !dbg !30
  %2201 = load <1 x half>, ptr %2200, align 2, !dbg !30
  %2202 = addrspacecast ptr addrspace(1) %1706 to ptr, !dbg !30
  %2203 = load <1 x half>, ptr %2202, align 2, !dbg !30
  %2204 = shufflevector <1 x half> %2203, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2205 = addrspacecast ptr addrspace(1) %1707 to ptr, !dbg !30
  %2206 = load <1 x half>, ptr %2205, align 2, !dbg !30
  %2207 = shufflevector <1 x half> %2206, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !30
  tail call void @llvm.amdgcn.s.barrier(), !dbg !30
  fence syncscope("workgroup") acquire, !dbg !30
  %2208 = load <4 x half>, ptr addrspace(3) %1026, align 8, !dbg !30
  %2209 = load <4 x half>, ptr addrspace(3) %1028, align 8, !dbg !30
  %2210 = load <4 x half>, ptr addrspace(3) %1030, align 8, !dbg !30
  %2211 = load <4 x half>, ptr addrspace(3) %1032, align 8, !dbg !30
  %2212 = load <4 x half>, ptr addrspace(3) %1035, align 8, !dbg !30
  %2213 = load <4 x half>, ptr addrspace(3) %1038, align 8, !dbg !30
  %2214 = load <4 x half>, ptr addrspace(3) %1041, align 8, !dbg !30
  %2215 = load <4 x half>, ptr addrspace(3) %1044, align 8, !dbg !30
  %2216 = load <4 x half>, ptr addrspace(3) %1047, align 8, !dbg !30
  %2217 = load <4 x half>, ptr addrspace(3) %1050, align 8, !dbg !30
  %2218 = load <4 x half>, ptr addrspace(3) %1053, align 8, !dbg !30
  %2219 = load <4 x half>, ptr addrspace(3) %1056, align 8, !dbg !30
  %2220 = load <4 x half>, ptr addrspace(3) %1059, align 8, !dbg !30
  %2221 = load <4 x half>, ptr addrspace(3) %1062, align 8, !dbg !30
  %2222 = load <4 x half>, ptr addrspace(3) %1065, align 8, !dbg !30
  %2223 = load <4 x half>, ptr addrspace(3) %1068, align 8, !dbg !30
  fence syncscope("workgroup") release, !dbg !51
  tail call void @llvm.amdgcn.s.barrier(), !dbg !51
  fence syncscope("workgroup") acquire, !dbg !51
  %2224 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2208, <4 x half> %1947, <16 x float> %2143, i32 0, i32 0, i32 0), !dbg !52
  %2225 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2209, <4 x half> %1955, <16 x float> %2224, i32 0, i32 0, i32 0), !dbg !52
  %2226 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2210, <4 x half> %1963, <16 x float> %2225, i32 0, i32 0, i32 0), !dbg !52
  %2227 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2211, <4 x half> %1971, <16 x float> %2226, i32 0, i32 0, i32 0), !dbg !52
  %2228 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2212, <4 x half> %1947, <16 x float> %2147, i32 0, i32 0, i32 0), !dbg !52
  %2229 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2213, <4 x half> %1955, <16 x float> %2228, i32 0, i32 0, i32 0), !dbg !52
  %2230 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2214, <4 x half> %1963, <16 x float> %2229, i32 0, i32 0, i32 0), !dbg !52
  %2231 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2215, <4 x half> %1971, <16 x float> %2230, i32 0, i32 0, i32 0), !dbg !52
  %2232 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2216, <4 x half> %1947, <16 x float> %2151, i32 0, i32 0, i32 0), !dbg !52
  %2233 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2217, <4 x half> %1955, <16 x float> %2232, i32 0, i32 0, i32 0), !dbg !52
  %2234 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2218, <4 x half> %1963, <16 x float> %2233, i32 0, i32 0, i32 0), !dbg !52
  %2235 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2219, <4 x half> %1971, <16 x float> %2234, i32 0, i32 0, i32 0), !dbg !52
  %2236 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2220, <4 x half> %1947, <16 x float> %2155, i32 0, i32 0, i32 0), !dbg !52
  %2237 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2221, <4 x half> %1955, <16 x float> %2236, i32 0, i32 0, i32 0), !dbg !52
  %2238 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2222, <4 x half> %1963, <16 x float> %2237, i32 0, i32 0, i32 0), !dbg !52
  %2239 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2223, <4 x half> %1971, <16 x float> %2238, i32 0, i32 0, i32 0), !dbg !52
  fence syncscope("workgroup") release, !dbg !30
  tail call void @llvm.amdgcn.s.barrier(), !dbg !30
  fence syncscope("workgroup") acquire, !dbg !30
  %2240 = shufflevector <1 x half> %2169, <1 x half> %2171, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2241 = shufflevector <4 x half> %2240, <4 x half> %2174, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2242 = shufflevector <4 x half> %2241, <4 x half> %2177, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2242, ptr addrspace(3) %995, align 8, !dbg !30
  %2243 = shufflevector <1 x half> %2179, <1 x half> %2181, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2244 = shufflevector <4 x half> %2243, <4 x half> %2184, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2245 = shufflevector <4 x half> %2244, <4 x half> %2187, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2245, ptr addrspace(3) %1001, align 8, !dbg !30
  %2246 = shufflevector <1 x half> %2189, <1 x half> %2191, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2247 = shufflevector <4 x half> %2246, <4 x half> %2194, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2248 = shufflevector <4 x half> %2247, <4 x half> %2197, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2248, ptr addrspace(3) %gep, align 8, !dbg !30
  %2249 = shufflevector <1 x half> %2199, <1 x half> %2201, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2250 = shufflevector <4 x half> %2249, <4 x half> %2204, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2251 = shufflevector <4 x half> %2250, <4 x half> %2207, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2251, ptr addrspace(3) %gep256, align 8, !dbg !30
  %2252 = addrspacecast ptr addrspace(1) %1676 to ptr, !dbg !30
  %2253 = load <1 x half>, ptr %2252, align 2, !dbg !30
  %2254 = addrspacecast ptr addrspace(1) %1677 to ptr, !dbg !30
  %2255 = load <1 x half>, ptr %2254, align 2, !dbg !30
  %2256 = addrspacecast ptr addrspace(1) %1678 to ptr, !dbg !30
  %2257 = load <1 x half>, ptr %2256, align 2, !dbg !30
  %2258 = shufflevector <1 x half> %2257, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2259 = addrspacecast ptr addrspace(1) %1679 to ptr, !dbg !30
  %2260 = load <1 x half>, ptr %2259, align 2, !dbg !30
  %2261 = shufflevector <1 x half> %2260, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2262 = addrspacecast ptr addrspace(1) %1680 to ptr, !dbg !30
  %2263 = load <1 x half>, ptr %2262, align 2, !dbg !30
  %2264 = addrspacecast ptr addrspace(1) %1681 to ptr, !dbg !30
  %2265 = load <1 x half>, ptr %2264, align 2, !dbg !30
  %2266 = addrspacecast ptr addrspace(1) %1682 to ptr, !dbg !30
  %2267 = load <1 x half>, ptr %2266, align 2, !dbg !30
  %2268 = shufflevector <1 x half> %2267, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2269 = addrspacecast ptr addrspace(1) %1683 to ptr, !dbg !30
  %2270 = load <1 x half>, ptr %2269, align 2, !dbg !30
  %2271 = shufflevector <1 x half> %2270, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2272 = addrspacecast ptr addrspace(1) %1708 to ptr, !dbg !30
  %2273 = load <1 x half>, ptr %2272, align 2, !dbg !30
  %2274 = addrspacecast ptr addrspace(1) %1709 to ptr, !dbg !30
  %2275 = load <1 x half>, ptr %2274, align 2, !dbg !30
  %2276 = addrspacecast ptr addrspace(1) %1710 to ptr, !dbg !30
  %2277 = load <1 x half>, ptr %2276, align 2, !dbg !30
  %2278 = shufflevector <1 x half> %2277, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2279 = addrspacecast ptr addrspace(1) %1711 to ptr, !dbg !30
  %2280 = load <1 x half>, ptr %2279, align 2, !dbg !30
  %2281 = shufflevector <1 x half> %2280, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2282 = addrspacecast ptr addrspace(1) %1712 to ptr, !dbg !30
  %2283 = load <1 x half>, ptr %2282, align 2, !dbg !30
  %2284 = addrspacecast ptr addrspace(1) %1713 to ptr, !dbg !30
  %2285 = load <1 x half>, ptr %2284, align 2, !dbg !30
  %2286 = addrspacecast ptr addrspace(1) %1714 to ptr, !dbg !30
  %2287 = load <1 x half>, ptr %2286, align 2, !dbg !30
  %2288 = shufflevector <1 x half> %2287, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2289 = addrspacecast ptr addrspace(1) %1715 to ptr, !dbg !30
  %2290 = load <1 x half>, ptr %2289, align 2, !dbg !30
  %2291 = shufflevector <1 x half> %2290, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !30
  tail call void @llvm.amdgcn.s.barrier(), !dbg !30
  fence syncscope("workgroup") acquire, !dbg !30
  %2292 = load <4 x half>, ptr addrspace(3) %1026, align 8, !dbg !30
  %2293 = load <4 x half>, ptr addrspace(3) %1028, align 8, !dbg !30
  %2294 = load <4 x half>, ptr addrspace(3) %1030, align 8, !dbg !30
  %2295 = load <4 x half>, ptr addrspace(3) %1032, align 8, !dbg !30
  %2296 = load <4 x half>, ptr addrspace(3) %1035, align 8, !dbg !30
  %2297 = load <4 x half>, ptr addrspace(3) %1038, align 8, !dbg !30
  %2298 = load <4 x half>, ptr addrspace(3) %1041, align 8, !dbg !30
  %2299 = load <4 x half>, ptr addrspace(3) %1044, align 8, !dbg !30
  %2300 = load <4 x half>, ptr addrspace(3) %1047, align 8, !dbg !30
  %2301 = load <4 x half>, ptr addrspace(3) %1050, align 8, !dbg !30
  %2302 = load <4 x half>, ptr addrspace(3) %1053, align 8, !dbg !30
  %2303 = load <4 x half>, ptr addrspace(3) %1056, align 8, !dbg !30
  %2304 = load <4 x half>, ptr addrspace(3) %1059, align 8, !dbg !30
  %2305 = load <4 x half>, ptr addrspace(3) %1062, align 8, !dbg !30
  %2306 = load <4 x half>, ptr addrspace(3) %1065, align 8, !dbg !30
  %2307 = load <4 x half>, ptr addrspace(3) %1068, align 8, !dbg !30
  fence syncscope("workgroup") release, !dbg !51
  tail call void @llvm.amdgcn.s.barrier(), !dbg !51
  fence syncscope("workgroup") acquire, !dbg !51
  %2308 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2292, <4 x half> %1981, <16 x float> %2227, i32 0, i32 0, i32 0), !dbg !52
  %2309 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2293, <4 x half> %1989, <16 x float> %2308, i32 0, i32 0, i32 0), !dbg !52
  %2310 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2294, <4 x half> %1997, <16 x float> %2309, i32 0, i32 0, i32 0), !dbg !52
  %2311 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2295, <4 x half> %2005, <16 x float> %2310, i32 0, i32 0, i32 0), !dbg !52
  %2312 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2296, <4 x half> %1981, <16 x float> %2231, i32 0, i32 0, i32 0), !dbg !52
  %2313 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2297, <4 x half> %1989, <16 x float> %2312, i32 0, i32 0, i32 0), !dbg !52
  %2314 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2298, <4 x half> %1997, <16 x float> %2313, i32 0, i32 0, i32 0), !dbg !52
  %2315 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2299, <4 x half> %2005, <16 x float> %2314, i32 0, i32 0, i32 0), !dbg !52
  %2316 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2300, <4 x half> %1981, <16 x float> %2235, i32 0, i32 0, i32 0), !dbg !52
  %2317 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2301, <4 x half> %1989, <16 x float> %2316, i32 0, i32 0, i32 0), !dbg !52
  %2318 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2302, <4 x half> %1997, <16 x float> %2317, i32 0, i32 0, i32 0), !dbg !52
  %2319 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2303, <4 x half> %2005, <16 x float> %2318, i32 0, i32 0, i32 0), !dbg !52
  %2320 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2304, <4 x half> %1981, <16 x float> %2239, i32 0, i32 0, i32 0), !dbg !52
  %2321 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2305, <4 x half> %1989, <16 x float> %2320, i32 0, i32 0, i32 0), !dbg !52
  %2322 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2306, <4 x half> %1997, <16 x float> %2321, i32 0, i32 0, i32 0), !dbg !52
  %2323 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2307, <4 x half> %2005, <16 x float> %2322, i32 0, i32 0, i32 0), !dbg !52
  fence syncscope("workgroup") release, !dbg !30
  tail call void @llvm.amdgcn.s.barrier(), !dbg !30
  fence syncscope("workgroup") acquire, !dbg !30
  %2324 = shufflevector <1 x half> %2253, <1 x half> %2255, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2325 = shufflevector <4 x half> %2324, <4 x half> %2258, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2326 = shufflevector <4 x half> %2325, <4 x half> %2261, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2326, ptr addrspace(3) %995, align 8, !dbg !30
  %2327 = shufflevector <1 x half> %2263, <1 x half> %2265, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2328 = shufflevector <4 x half> %2327, <4 x half> %2268, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2329 = shufflevector <4 x half> %2328, <4 x half> %2271, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2329, ptr addrspace(3) %1001, align 8, !dbg !30
  %2330 = shufflevector <1 x half> %2273, <1 x half> %2275, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2331 = shufflevector <4 x half> %2330, <4 x half> %2278, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2332 = shufflevector <4 x half> %2331, <4 x half> %2281, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2332, ptr addrspace(3) %gep, align 8, !dbg !30
  %2333 = shufflevector <1 x half> %2283, <1 x half> %2285, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !30
  %2334 = shufflevector <4 x half> %2333, <4 x half> %2288, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !30
  %2335 = shufflevector <4 x half> %2334, <4 x half> %2291, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !30
  store <4 x half> %2335, ptr addrspace(3) %gep256, align 8, !dbg !30
  fence syncscope("workgroup") release, !dbg !30
  tail call void @llvm.amdgcn.s.barrier(), !dbg !30
  fence syncscope("workgroup") acquire, !dbg !30
  %2336 = load <4 x half>, ptr addrspace(3) %1026, align 8, !dbg !30
  %2337 = load <4 x half>, ptr addrspace(3) %1028, align 8, !dbg !30
  %2338 = load <4 x half>, ptr addrspace(3) %1030, align 8, !dbg !30
  %2339 = load <4 x half>, ptr addrspace(3) %1032, align 8, !dbg !30
  %2340 = load <4 x half>, ptr addrspace(3) %1035, align 8, !dbg !30
  %2341 = load <4 x half>, ptr addrspace(3) %1038, align 8, !dbg !30
  %2342 = load <4 x half>, ptr addrspace(3) %1041, align 8, !dbg !30
  %2343 = load <4 x half>, ptr addrspace(3) %1044, align 8, !dbg !30
  %2344 = load <4 x half>, ptr addrspace(3) %1047, align 8, !dbg !30
  %2345 = load <4 x half>, ptr addrspace(3) %1050, align 8, !dbg !30
  %2346 = load <4 x half>, ptr addrspace(3) %1053, align 8, !dbg !30
  %2347 = load <4 x half>, ptr addrspace(3) %1056, align 8, !dbg !30
  %2348 = load <4 x half>, ptr addrspace(3) %1059, align 8, !dbg !30
  %2349 = load <4 x half>, ptr addrspace(3) %1062, align 8, !dbg !30
  %2350 = load <4 x half>, ptr addrspace(3) %1065, align 8, !dbg !30
  %2351 = load <4 x half>, ptr addrspace(3) %1068, align 8, !dbg !30
  fence syncscope("workgroup") release, !dbg !51
  tail call void @llvm.amdgcn.s.barrier(), !dbg !51
  fence syncscope("workgroup") acquire, !dbg !51
  %2352 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2336, <4 x half> %2013, <16 x float> %2311, i32 0, i32 0, i32 0), !dbg !52
  %2353 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2337, <4 x half> %2019, <16 x float> %2352, i32 0, i32 0, i32 0), !dbg !52
  %2354 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2338, <4 x half> %2025, <16 x float> %2353, i32 0, i32 0, i32 0), !dbg !52
  %2355 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2339, <4 x half> %2031, <16 x float> %2354, i32 0, i32 0, i32 0), !dbg !52
  %2356 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2340, <4 x half> %2013, <16 x float> %2315, i32 0, i32 0, i32 0), !dbg !52
  %2357 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2341, <4 x half> %2019, <16 x float> %2356, i32 0, i32 0, i32 0), !dbg !52
  %2358 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2342, <4 x half> %2025, <16 x float> %2357, i32 0, i32 0, i32 0), !dbg !52
  %2359 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2343, <4 x half> %2031, <16 x float> %2358, i32 0, i32 0, i32 0), !dbg !52
  %2360 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2344, <4 x half> %2013, <16 x float> %2319, i32 0, i32 0, i32 0), !dbg !52
  %2361 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2345, <4 x half> %2019, <16 x float> %2360, i32 0, i32 0, i32 0), !dbg !52
  %2362 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2346, <4 x half> %2025, <16 x float> %2361, i32 0, i32 0, i32 0), !dbg !52
  %2363 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2347, <4 x half> %2031, <16 x float> %2362, i32 0, i32 0, i32 0), !dbg !52
  %2364 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2348, <4 x half> %2013, <16 x float> %2323, i32 0, i32 0, i32 0), !dbg !52
  %2365 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2349, <4 x half> %2019, <16 x float> %2364, i32 0, i32 0, i32 0), !dbg !52
  %2366 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2350, <4 x half> %2025, <16 x float> %2365, i32 0, i32 0, i32 0), !dbg !52
  %2367 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2351, <4 x half> %2031, <16 x float> %2366, i32 0, i32 0, i32 0), !dbg !52
  %shift = shufflevector <4 x float> %1914, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2368 = fadd <4 x float> %1914, %shift, !dbg !53
  %shift391 = shufflevector <4 x float> %1914, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2369 = fadd <4 x float> %shift391, %2368, !dbg !53
  %shift392 = shufflevector <4 x float> %1914, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2370 = fadd <4 x float> %shift392, %2369, !dbg !53
  %2371 = fadd <4 x float> %1922, %2370, !dbg !53
  %shift393 = shufflevector <4 x float> %1922, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2372 = fadd <4 x float> %shift393, %2371, !dbg !53
  %shift394 = shufflevector <4 x float> %1922, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2373 = fadd <4 x float> %shift394, %2372, !dbg !53
  %shift395 = shufflevector <4 x float> %1922, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2374 = fadd <4 x float> %shift395, %2373, !dbg !53
  %2375 = fadd <4 x float> %1930, %2374, !dbg !53
  %shift396 = shufflevector <4 x float> %1930, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2376 = fadd <4 x float> %shift396, %2375, !dbg !53
  %shift397 = shufflevector <4 x float> %1930, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2377 = fadd <4 x float> %shift397, %2376, !dbg !53
  %shift398 = shufflevector <4 x float> %1930, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2378 = fadd <4 x float> %shift398, %2377, !dbg !53
  %2379 = fadd <4 x float> %1938, %2378, !dbg !53
  %shift399 = shufflevector <4 x float> %1938, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2380 = fadd <4 x float> %shift399, %2379, !dbg !53
  %shift400 = shufflevector <4 x float> %1938, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2381 = fadd <4 x float> %shift400, %2380, !dbg !53
  %shift401 = shufflevector <4 x float> %1938, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2382 = fadd <4 x float> %shift401, %2381, !dbg !53
  %2383 = fadd <4 x float> %1946, %2382, !dbg !53
  %shift402 = shufflevector <4 x float> %1946, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2384 = fadd <4 x float> %shift402, %2383, !dbg !53
  %shift403 = shufflevector <4 x float> %1946, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2385 = fadd <4 x float> %shift403, %2384, !dbg !53
  %shift404 = shufflevector <4 x float> %1946, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2386 = fadd <4 x float> %shift404, %2385, !dbg !53
  %2387 = fadd <4 x float> %1954, %2386, !dbg !53
  %shift405 = shufflevector <4 x float> %1954, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2388 = fadd <4 x float> %shift405, %2387, !dbg !53
  %shift406 = shufflevector <4 x float> %1954, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2389 = fadd <4 x float> %shift406, %2388, !dbg !53
  %shift407 = shufflevector <4 x float> %1954, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2390 = fadd <4 x float> %shift407, %2389, !dbg !53
  %2391 = fadd <4 x float> %1962, %2390, !dbg !53
  %shift408 = shufflevector <4 x float> %1962, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2392 = fadd <4 x float> %shift408, %2391, !dbg !53
  %shift409 = shufflevector <4 x float> %1962, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2393 = fadd <4 x float> %shift409, %2392, !dbg !53
  %shift410 = shufflevector <4 x float> %1962, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2394 = fadd <4 x float> %shift410, %2393, !dbg !53
  %2395 = fadd <4 x float> %1970, %2394, !dbg !53
  %shift411 = shufflevector <4 x float> %1970, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2396 = fadd <4 x float> %shift411, %2395, !dbg !53
  %shift412 = shufflevector <4 x float> %1970, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2397 = fadd <4 x float> %shift412, %2396, !dbg !53
  %shift413 = shufflevector <4 x float> %1970, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2398 = fadd <4 x float> %shift413, %2397, !dbg !53
  %2399 = fadd <4 x float> %1980, %2398, !dbg !53
  %shift414 = shufflevector <4 x float> %1980, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2400 = fadd <4 x float> %shift414, %2399, !dbg !53
  %shift415 = shufflevector <4 x float> %1980, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2401 = fadd <4 x float> %shift415, %2400, !dbg !53
  %shift416 = shufflevector <4 x float> %1980, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2402 = fadd <4 x float> %shift416, %2401, !dbg !53
  %2403 = fadd <4 x float> %1988, %2402, !dbg !53
  %shift417 = shufflevector <4 x float> %1988, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2404 = fadd <4 x float> %shift417, %2403, !dbg !53
  %shift418 = shufflevector <4 x float> %1988, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2405 = fadd <4 x float> %shift418, %2404, !dbg !53
  %shift419 = shufflevector <4 x float> %1988, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2406 = fadd <4 x float> %shift419, %2405, !dbg !53
  %2407 = fadd <4 x float> %1996, %2406, !dbg !53
  %shift420 = shufflevector <4 x float> %1996, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2408 = fadd <4 x float> %shift420, %2407, !dbg !53
  %shift421 = shufflevector <4 x float> %1996, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2409 = fadd <4 x float> %shift421, %2408, !dbg !53
  %shift422 = shufflevector <4 x float> %1996, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2410 = fadd <4 x float> %shift422, %2409, !dbg !53
  %2411 = fadd <4 x float> %2004, %2410, !dbg !53
  %shift423 = shufflevector <4 x float> %2004, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2412 = fadd <4 x float> %shift423, %2411, !dbg !53
  %shift424 = shufflevector <4 x float> %2004, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2413 = fadd <4 x float> %shift424, %2412, !dbg !53
  %shift425 = shufflevector <4 x float> %2004, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2414 = fadd <4 x float> %shift425, %2413, !dbg !53
  %2415 = fadd <4 x float> %2012, %2414, !dbg !53
  %shift426 = shufflevector <4 x float> %2012, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2416 = fadd <4 x float> %shift426, %2415, !dbg !53
  %shift427 = shufflevector <4 x float> %2012, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2417 = fadd <4 x float> %shift427, %2416, !dbg !53
  %shift428 = shufflevector <4 x float> %2012, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !53
  %2418 = fadd <4 x float> %shift428, %2417, !dbg !53
  %2419 = extractelement <4 x float> %2418, i64 0, !dbg !53
  %2420 = extractelement <2 x float> %1859, i64 0, !dbg !53
  %2421 = fadd float %2420, %2419, !dbg !53
  %2422 = extractelement <2 x float> %1859, i64 1, !dbg !53
  %2423 = fadd float %2422, %2421, !dbg !53
  %2424 = fadd float %2014, %2423, !dbg !53
  %2425 = fadd float %2015, %2424, !dbg !53
  %2426 = fadd float %2020, %2425, !dbg !53
  %2427 = fadd float %2021, %2426, !dbg !53
  %2428 = fadd float %2022, %2427, !dbg !53
  %2429 = fadd float %2023, %2428, !dbg !53
  %2430 = fadd float %2026, %2429, !dbg !53
  %2431 = fadd float %2027, %2430, !dbg !53
  %2432 = fadd float %2028, %2431, !dbg !53
  %2433 = fadd float %2029, %2432, !dbg !53
  %2434 = bitcast float %2433 to i32, !dbg !56
  %2435 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %988, i32 %2434), !dbg !56
  %2436 = bitcast i32 %2435 to float, !dbg !56
  %2437 = fadd float %2433, %2436, !dbg !53
  %2438 = fmul float %1084, %1901, !dbg !58
  %2439 = fadd float %2438, %2437, !dbg !59
  %2440 = add i64 %1082, 128, !dbg !60
  %2441 = add i32 %1085, 128, !dbg !31
  %2442 = icmp slt i32 %2441, %20, !dbg !31
  br i1 %2442, label %1081, label %._crit_edge.loopexit, !dbg !31

._crit_edge.loopexit:                             ; preds = %1575
  %2443 = extractelement <16 x float> %2355, i64 15, !dbg !31
  %2444 = extractelement <16 x float> %2355, i64 14, !dbg !31
  %2445 = extractelement <16 x float> %2355, i64 13, !dbg !31
  %2446 = extractelement <16 x float> %2355, i64 12, !dbg !31
  %2447 = extractelement <16 x float> %2355, i64 11, !dbg !31
  %2448 = extractelement <16 x float> %2355, i64 10, !dbg !31
  %2449 = extractelement <16 x float> %2355, i64 9, !dbg !31
  %2450 = extractelement <16 x float> %2355, i64 8, !dbg !31
  %2451 = extractelement <16 x float> %2355, i64 7, !dbg !31
  %2452 = extractelement <16 x float> %2355, i64 6, !dbg !31
  %2453 = extractelement <16 x float> %2355, i64 5, !dbg !31
  %2454 = extractelement <16 x float> %2355, i64 4, !dbg !31
  %2455 = extractelement <16 x float> %2355, i64 3, !dbg !31
  %2456 = extractelement <16 x float> %2355, i64 2, !dbg !31
  %2457 = extractelement <16 x float> %2355, i64 1, !dbg !31
  %2458 = extractelement <16 x float> %2355, i64 0, !dbg !31
  %2459 = extractelement <16 x float> %2359, i64 15, !dbg !31
  %2460 = extractelement <16 x float> %2359, i64 14, !dbg !31
  %2461 = extractelement <16 x float> %2359, i64 13, !dbg !31
  %2462 = extractelement <16 x float> %2359, i64 12, !dbg !31
  %2463 = extractelement <16 x float> %2359, i64 11, !dbg !31
  %2464 = extractelement <16 x float> %2359, i64 10, !dbg !31
  %2465 = extractelement <16 x float> %2359, i64 9, !dbg !31
  %2466 = extractelement <16 x float> %2359, i64 8, !dbg !31
  %2467 = extractelement <16 x float> %2359, i64 7, !dbg !31
  %2468 = extractelement <16 x float> %2359, i64 6, !dbg !31
  %2469 = extractelement <16 x float> %2359, i64 5, !dbg !31
  %2470 = extractelement <16 x float> %2359, i64 4, !dbg !31
  %2471 = extractelement <16 x float> %2359, i64 3, !dbg !31
  %2472 = extractelement <16 x float> %2359, i64 2, !dbg !31
  %2473 = extractelement <16 x float> %2359, i64 1, !dbg !31
  %2474 = extractelement <16 x float> %2359, i64 0, !dbg !31
  %2475 = extractelement <16 x float> %2363, i64 15, !dbg !31
  %2476 = extractelement <16 x float> %2363, i64 14, !dbg !31
  %2477 = extractelement <16 x float> %2363, i64 13, !dbg !31
  %2478 = extractelement <16 x float> %2363, i64 12, !dbg !31
  %2479 = extractelement <16 x float> %2363, i64 11, !dbg !31
  %2480 = extractelement <16 x float> %2363, i64 10, !dbg !31
  %2481 = extractelement <16 x float> %2363, i64 9, !dbg !31
  %2482 = extractelement <16 x float> %2363, i64 8, !dbg !31
  %2483 = extractelement <16 x float> %2363, i64 7, !dbg !31
  %2484 = extractelement <16 x float> %2363, i64 6, !dbg !31
  %2485 = extractelement <16 x float> %2363, i64 5, !dbg !31
  %2486 = extractelement <16 x float> %2363, i64 4, !dbg !31
  %2487 = extractelement <16 x float> %2363, i64 3, !dbg !31
  %2488 = extractelement <16 x float> %2363, i64 2, !dbg !31
  %2489 = extractelement <16 x float> %2363, i64 1, !dbg !31
  %2490 = extractelement <16 x float> %2363, i64 0, !dbg !31
  %2491 = extractelement <16 x float> %2367, i64 15, !dbg !31
  %2492 = extractelement <16 x float> %2367, i64 14, !dbg !31
  %2493 = extractelement <16 x float> %2367, i64 13, !dbg !31
  %2494 = extractelement <16 x float> %2367, i64 12, !dbg !31
  %2495 = extractelement <16 x float> %2367, i64 11, !dbg !31
  %2496 = extractelement <16 x float> %2367, i64 10, !dbg !31
  %2497 = extractelement <16 x float> %2367, i64 9, !dbg !31
  %2498 = extractelement <16 x float> %2367, i64 8, !dbg !31
  %2499 = extractelement <16 x float> %2367, i64 7, !dbg !31
  %2500 = extractelement <16 x float> %2367, i64 6, !dbg !31
  %2501 = extractelement <16 x float> %2367, i64 5, !dbg !31
  %2502 = extractelement <16 x float> %2367, i64 4, !dbg !31
  %2503 = extractelement <16 x float> %2367, i64 3, !dbg !31
  %2504 = extractelement <16 x float> %2367, i64 2, !dbg !31
  %2505 = extractelement <16 x float> %2367, i64 1, !dbg !31
  %2506 = extractelement <16 x float> %2367, i64 0, !dbg !31
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %21
  %2507 = phi float [ 0.000000e+00, %21 ], [ %2458, %._crit_edge.loopexit ]
  %2508 = phi float [ 0.000000e+00, %21 ], [ %2457, %._crit_edge.loopexit ]
  %2509 = phi float [ 0.000000e+00, %21 ], [ %2456, %._crit_edge.loopexit ]
  %2510 = phi float [ 0.000000e+00, %21 ], [ %2455, %._crit_edge.loopexit ]
  %2511 = phi float [ 0.000000e+00, %21 ], [ %2454, %._crit_edge.loopexit ]
  %2512 = phi float [ 0.000000e+00, %21 ], [ %2453, %._crit_edge.loopexit ]
  %2513 = phi float [ 0.000000e+00, %21 ], [ %2452, %._crit_edge.loopexit ]
  %2514 = phi float [ 0.000000e+00, %21 ], [ %2451, %._crit_edge.loopexit ]
  %2515 = phi float [ 0.000000e+00, %21 ], [ %2450, %._crit_edge.loopexit ]
  %2516 = phi float [ 0.000000e+00, %21 ], [ %2449, %._crit_edge.loopexit ]
  %2517 = phi float [ 0.000000e+00, %21 ], [ %2448, %._crit_edge.loopexit ]
  %2518 = phi float [ 0.000000e+00, %21 ], [ %2447, %._crit_edge.loopexit ]
  %2519 = phi float [ 0.000000e+00, %21 ], [ %2446, %._crit_edge.loopexit ]
  %2520 = phi float [ 0.000000e+00, %21 ], [ %2445, %._crit_edge.loopexit ]
  %2521 = phi float [ 0.000000e+00, %21 ], [ %2444, %._crit_edge.loopexit ]
  %2522 = phi float [ 0.000000e+00, %21 ], [ %2443, %._crit_edge.loopexit ]
  %2523 = phi float [ 0.000000e+00, %21 ], [ %2474, %._crit_edge.loopexit ]
  %2524 = phi float [ 0.000000e+00, %21 ], [ %2473, %._crit_edge.loopexit ]
  %2525 = phi float [ 0.000000e+00, %21 ], [ %2472, %._crit_edge.loopexit ]
  %2526 = phi float [ 0.000000e+00, %21 ], [ %2471, %._crit_edge.loopexit ]
  %2527 = phi float [ 0.000000e+00, %21 ], [ %2470, %._crit_edge.loopexit ]
  %2528 = phi float [ 0.000000e+00, %21 ], [ %2469, %._crit_edge.loopexit ]
  %2529 = phi float [ 0.000000e+00, %21 ], [ %2468, %._crit_edge.loopexit ]
  %2530 = phi float [ 0.000000e+00, %21 ], [ %2467, %._crit_edge.loopexit ]
  %2531 = phi float [ 0.000000e+00, %21 ], [ %2466, %._crit_edge.loopexit ]
  %2532 = phi float [ 0.000000e+00, %21 ], [ %2465, %._crit_edge.loopexit ]
  %2533 = phi float [ 0.000000e+00, %21 ], [ %2464, %._crit_edge.loopexit ]
  %2534 = phi float [ 0.000000e+00, %21 ], [ %2463, %._crit_edge.loopexit ]
  %2535 = phi float [ 0.000000e+00, %21 ], [ %2462, %._crit_edge.loopexit ]
  %2536 = phi float [ 0.000000e+00, %21 ], [ %2461, %._crit_edge.loopexit ]
  %2537 = phi float [ 0.000000e+00, %21 ], [ %2460, %._crit_edge.loopexit ]
  %2538 = phi float [ 0.000000e+00, %21 ], [ %2459, %._crit_edge.loopexit ]
  %2539 = phi float [ 0.000000e+00, %21 ], [ %2490, %._crit_edge.loopexit ]
  %2540 = phi float [ 0.000000e+00, %21 ], [ %2489, %._crit_edge.loopexit ]
  %2541 = phi float [ 0.000000e+00, %21 ], [ %2488, %._crit_edge.loopexit ]
  %2542 = phi float [ 0.000000e+00, %21 ], [ %2487, %._crit_edge.loopexit ]
  %2543 = phi float [ 0.000000e+00, %21 ], [ %2486, %._crit_edge.loopexit ]
  %2544 = phi float [ 0.000000e+00, %21 ], [ %2485, %._crit_edge.loopexit ]
  %2545 = phi float [ 0.000000e+00, %21 ], [ %2484, %._crit_edge.loopexit ]
  %2546 = phi float [ 0.000000e+00, %21 ], [ %2483, %._crit_edge.loopexit ]
  %2547 = phi float [ 0.000000e+00, %21 ], [ %2482, %._crit_edge.loopexit ]
  %2548 = phi float [ 0.000000e+00, %21 ], [ %2481, %._crit_edge.loopexit ]
  %2549 = phi float [ 0.000000e+00, %21 ], [ %2480, %._crit_edge.loopexit ]
  %2550 = phi float [ 0.000000e+00, %21 ], [ %2479, %._crit_edge.loopexit ]
  %2551 = phi float [ 0.000000e+00, %21 ], [ %2478, %._crit_edge.loopexit ]
  %2552 = phi float [ 0.000000e+00, %21 ], [ %2477, %._crit_edge.loopexit ]
  %2553 = phi float [ 0.000000e+00, %21 ], [ %2476, %._crit_edge.loopexit ]
  %2554 = phi float [ 0.000000e+00, %21 ], [ %2475, %._crit_edge.loopexit ]
  %2555 = phi float [ 0.000000e+00, %21 ], [ %2506, %._crit_edge.loopexit ]
  %2556 = phi float [ 0.000000e+00, %21 ], [ %2505, %._crit_edge.loopexit ]
  %2557 = phi float [ 0.000000e+00, %21 ], [ %2504, %._crit_edge.loopexit ]
  %2558 = phi float [ 0.000000e+00, %21 ], [ %2503, %._crit_edge.loopexit ]
  %2559 = phi float [ 0.000000e+00, %21 ], [ %2502, %._crit_edge.loopexit ]
  %2560 = phi float [ 0.000000e+00, %21 ], [ %2501, %._crit_edge.loopexit ]
  %2561 = phi float [ 0.000000e+00, %21 ], [ %2500, %._crit_edge.loopexit ]
  %2562 = phi float [ 0.000000e+00, %21 ], [ %2499, %._crit_edge.loopexit ]
  %2563 = phi float [ 0.000000e+00, %21 ], [ %2498, %._crit_edge.loopexit ]
  %2564 = phi float [ 0.000000e+00, %21 ], [ %2497, %._crit_edge.loopexit ]
  %2565 = phi float [ 0.000000e+00, %21 ], [ %2496, %._crit_edge.loopexit ]
  %2566 = phi float [ 0.000000e+00, %21 ], [ %2495, %._crit_edge.loopexit ]
  %2567 = phi float [ 0.000000e+00, %21 ], [ %2494, %._crit_edge.loopexit ]
  %2568 = phi float [ 0.000000e+00, %21 ], [ %2493, %._crit_edge.loopexit ]
  %2569 = phi float [ 0.000000e+00, %21 ], [ %2492, %._crit_edge.loopexit ]
  %2570 = phi float [ 0.000000e+00, %21 ], [ %2491, %._crit_edge.loopexit ]
  %.lcssa = phi float [ 1.000000e+00, %21 ], [ %2439, %._crit_edge.loopexit ]
  %2571 = zext i32 %32 to i64
  %2572 = or i64 %2571, %71, !dbg !14
  %2573 = or i32 %67, 123, !dbg !14
  %2574 = zext i32 %2573 to i64
  %2575 = or i32 %67, 122, !dbg !14
  %2576 = zext i32 %2575 to i64
  %2577 = or i32 %67, 121, !dbg !14
  %2578 = zext i32 %2577 to i64
  %2579 = or i32 %67, 120, !dbg !14
  %2580 = zext i32 %2579 to i64
  %2581 = or i32 %67, 115, !dbg !14
  %2582 = zext i32 %2581 to i64
  %2583 = or i32 %67, 114, !dbg !14
  %2584 = zext i32 %2583 to i64
  %2585 = or i32 %67, 113, !dbg !14
  %2586 = zext i32 %2585 to i64
  %2587 = or i32 %67, 112, !dbg !14
  %2588 = zext i32 %2587 to i64
  %2589 = or i32 %67, 107, !dbg !14
  %2590 = zext i32 %2589 to i64
  %2591 = or i32 %67, 106, !dbg !14
  %2592 = zext i32 %2591 to i64
  %2593 = or i32 %67, 105, !dbg !14
  %2594 = zext i32 %2593 to i64
  %2595 = or i32 %67, 104, !dbg !14
  %2596 = zext i32 %2595 to i64
  %2597 = or i32 %67, 99, !dbg !14
  %2598 = zext i32 %2597 to i64
  %2599 = or i32 %67, 98, !dbg !14
  %2600 = zext i32 %2599 to i64
  %2601 = or i32 %67, 97, !dbg !14
  %2602 = zext i32 %2601 to i64
  %2603 = or i32 %67, 96, !dbg !14
  %2604 = zext i32 %2603 to i64
  %2605 = or i32 %67, 91, !dbg !14
  %2606 = zext i32 %2605 to i64
  %2607 = or i32 %67, 90, !dbg !14
  %2608 = zext i32 %2607 to i64
  %2609 = or i32 %67, 89, !dbg !14
  %2610 = zext i32 %2609 to i64
  %2611 = or i32 %67, 88, !dbg !14
  %2612 = zext i32 %2611 to i64
  %2613 = or i32 %67, 83, !dbg !14
  %2614 = zext i32 %2613 to i64
  %2615 = or i32 %67, 82, !dbg !14
  %2616 = zext i32 %2615 to i64
  %2617 = or i32 %67, 81, !dbg !14
  %2618 = zext i32 %2617 to i64
  %2619 = or i32 %67, 80, !dbg !14
  %2620 = zext i32 %2619 to i64
  %2621 = or i32 %67, 75, !dbg !14
  %2622 = zext i32 %2621 to i64
  %2623 = or i32 %67, 74, !dbg !14
  %2624 = zext i32 %2623 to i64
  %2625 = or i32 %67, 73, !dbg !14
  %2626 = zext i32 %2625 to i64
  %2627 = or i32 %67, 72, !dbg !14
  %2628 = zext i32 %2627 to i64
  %2629 = or i32 %67, 67, !dbg !14
  %2630 = zext i32 %2629 to i64
  %2631 = or i32 %67, 66, !dbg !14
  %2632 = zext i32 %2631 to i64
  %2633 = or i32 %67, 65, !dbg !14
  %2634 = zext i32 %2633 to i64
  %2635 = or i32 %67, 64, !dbg !14
  %2636 = zext i32 %2635 to i64
  %2637 = or i32 %67, 59, !dbg !14
  %2638 = zext i32 %2637 to i64
  %2639 = or i32 %67, 58, !dbg !14
  %2640 = zext i32 %2639 to i64
  %2641 = or i32 %67, 57, !dbg !14
  %2642 = zext i32 %2641 to i64
  %2643 = or i32 %67, 56, !dbg !14
  %2644 = zext i32 %2643 to i64
  %2645 = or i32 %67, 51, !dbg !14
  %2646 = zext i32 %2645 to i64
  %2647 = or i32 %67, 50, !dbg !14
  %2648 = zext i32 %2647 to i64
  %2649 = or i32 %67, 49, !dbg !14
  %2650 = zext i32 %2649 to i64
  %2651 = or i32 %67, 48, !dbg !14
  %2652 = zext i32 %2651 to i64
  %2653 = or i32 %67, 43, !dbg !14
  %2654 = zext i32 %2653 to i64
  %2655 = or i32 %67, 42, !dbg !14
  %2656 = zext i32 %2655 to i64
  %2657 = or i32 %67, 41, !dbg !14
  %2658 = zext i32 %2657 to i64
  %2659 = or i32 %67, 40, !dbg !14
  %2660 = zext i32 %2659 to i64
  %2661 = or i32 %67, 35, !dbg !14
  %2662 = zext i32 %2661 to i64
  %2663 = or i32 %67, 34, !dbg !14
  %2664 = zext i32 %2663 to i64
  %2665 = or i32 %67, 33, !dbg !14
  %2666 = zext i32 %2665 to i64
  %2667 = or i32 %67, 32, !dbg !14
  %2668 = zext i32 %2667 to i64
  %2669 = or i32 %67, 27, !dbg !14
  %2670 = zext i32 %2669 to i64
  %2671 = or i32 %67, 26, !dbg !14
  %2672 = zext i32 %2671 to i64
  %2673 = or i32 %67, 25, !dbg !14
  %2674 = zext i32 %2673 to i64
  %2675 = or i32 %67, 24, !dbg !14
  %2676 = zext i32 %2675 to i64
  %2677 = or i32 %67, 19, !dbg !14
  %2678 = zext i32 %2677 to i64
  %2679 = or i32 %67, 18, !dbg !14
  %2680 = zext i32 %2679 to i64
  %2681 = or i32 %67, 17, !dbg !14
  %2682 = zext i32 %2681 to i64
  %2683 = or i32 %67, 16, !dbg !14
  %2684 = zext i32 %2683 to i64
  %2685 = or i32 %67, 11, !dbg !14
  %2686 = zext i32 %2685 to i64
  %2687 = or i32 %67, 10, !dbg !14
  %2688 = zext i32 %2687 to i64
  %2689 = or i32 %67, 9, !dbg !14
  %2690 = zext i32 %2689 to i64
  %2691 = or i32 %67, 8, !dbg !14
  %2692 = zext i32 %2691 to i64
  %2693 = or i32 %67, 3, !dbg !14
  %2694 = zext i32 %2693 to i64
  %2695 = or i32 %67, 2, !dbg !14
  %2696 = zext i32 %2695 to i64
  %2697 = or i32 %67, 1, !dbg !14
  %2698 = zext i32 %2697 to i64
  %2699 = zext i32 %67 to i64
  %2700 = fdiv float %2507, %.lcssa, !dbg !61
  %2701 = fdiv float %2508, %.lcssa, !dbg !61
  %2702 = fdiv float %2509, %.lcssa, !dbg !61
  %2703 = fdiv float %2510, %.lcssa, !dbg !61
  %2704 = fdiv float %2511, %.lcssa, !dbg !61
  %2705 = fdiv float %2512, %.lcssa, !dbg !61
  %2706 = fdiv float %2513, %.lcssa, !dbg !61
  %2707 = fdiv float %2514, %.lcssa, !dbg !61
  %2708 = fdiv float %2515, %.lcssa, !dbg !61
  %2709 = fdiv float %2516, %.lcssa, !dbg !61
  %2710 = fdiv float %2517, %.lcssa, !dbg !61
  %2711 = fdiv float %2518, %.lcssa, !dbg !61
  %2712 = fdiv float %2519, %.lcssa, !dbg !61
  %2713 = fdiv float %2520, %.lcssa, !dbg !61
  %2714 = fdiv float %2521, %.lcssa, !dbg !61
  %2715 = fdiv float %2522, %.lcssa, !dbg !61
  %2716 = fdiv float %2523, %.lcssa, !dbg !61
  %2717 = fdiv float %2524, %.lcssa, !dbg !61
  %2718 = fdiv float %2525, %.lcssa, !dbg !61
  %2719 = fdiv float %2526, %.lcssa, !dbg !61
  %2720 = fdiv float %2527, %.lcssa, !dbg !61
  %2721 = fdiv float %2528, %.lcssa, !dbg !61
  %2722 = fdiv float %2529, %.lcssa, !dbg !61
  %2723 = fdiv float %2530, %.lcssa, !dbg !61
  %2724 = fdiv float %2531, %.lcssa, !dbg !61
  %2725 = fdiv float %2532, %.lcssa, !dbg !61
  %2726 = fdiv float %2533, %.lcssa, !dbg !61
  %2727 = fdiv float %2534, %.lcssa, !dbg !61
  %2728 = fdiv float %2535, %.lcssa, !dbg !61
  %2729 = fdiv float %2536, %.lcssa, !dbg !61
  %2730 = fdiv float %2537, %.lcssa, !dbg !61
  %2731 = fdiv float %2538, %.lcssa, !dbg !61
  %2732 = fdiv float %2539, %.lcssa, !dbg !61
  %2733 = fdiv float %2540, %.lcssa, !dbg !61
  %2734 = fdiv float %2541, %.lcssa, !dbg !61
  %2735 = fdiv float %2542, %.lcssa, !dbg !61
  %2736 = fdiv float %2543, %.lcssa, !dbg !61
  %2737 = fdiv float %2544, %.lcssa, !dbg !61
  %2738 = fdiv float %2545, %.lcssa, !dbg !61
  %2739 = fdiv float %2546, %.lcssa, !dbg !61
  %2740 = fdiv float %2547, %.lcssa, !dbg !61
  %2741 = fdiv float %2548, %.lcssa, !dbg !61
  %2742 = fdiv float %2549, %.lcssa, !dbg !61
  %2743 = fdiv float %2550, %.lcssa, !dbg !61
  %2744 = fdiv float %2551, %.lcssa, !dbg !61
  %2745 = fdiv float %2552, %.lcssa, !dbg !61
  %2746 = fdiv float %2553, %.lcssa, !dbg !61
  %2747 = fdiv float %2554, %.lcssa, !dbg !61
  %2748 = fdiv float %2555, %.lcssa, !dbg !61
  %2749 = fdiv float %2556, %.lcssa, !dbg !61
  %2750 = fdiv float %2557, %.lcssa, !dbg !61
  %2751 = fdiv float %2558, %.lcssa, !dbg !61
  %2752 = fdiv float %2559, %.lcssa, !dbg !61
  %2753 = fdiv float %2560, %.lcssa, !dbg !61
  %2754 = fdiv float %2561, %.lcssa, !dbg !61
  %2755 = fdiv float %2562, %.lcssa, !dbg !61
  %2756 = fdiv float %2563, %.lcssa, !dbg !61
  %2757 = fdiv float %2564, %.lcssa, !dbg !61
  %2758 = fdiv float %2565, %.lcssa, !dbg !61
  %2759 = fdiv float %2566, %.lcssa, !dbg !61
  %2760 = fdiv float %2567, %.lcssa, !dbg !61
  %2761 = fdiv float %2568, %.lcssa, !dbg !61
  %2762 = fdiv float %2569, %.lcssa, !dbg !61
  %2763 = fdiv float %2570, %.lcssa, !dbg !61
  %2764 = getelementptr half, ptr addrspace(1) %5, i64 %74, !dbg !62
  %2765 = sext i32 %17 to i64, !dbg !63
  %2766 = fptrunc float %2700 to half, !dbg !64
  %2767 = fptrunc float %2701 to half, !dbg !64
  %2768 = fptrunc float %2702 to half, !dbg !64
  %2769 = fptrunc float %2703 to half, !dbg !64
  %2770 = fptrunc float %2704 to half, !dbg !64
  %2771 = fptrunc float %2705 to half, !dbg !64
  %2772 = fptrunc float %2706 to half, !dbg !64
  %2773 = fptrunc float %2707 to half, !dbg !64
  %2774 = fptrunc float %2708 to half, !dbg !64
  %2775 = fptrunc float %2709 to half, !dbg !64
  %2776 = fptrunc float %2710 to half, !dbg !64
  %2777 = fptrunc float %2711 to half, !dbg !64
  %2778 = fptrunc float %2712 to half, !dbg !64
  %2779 = fptrunc float %2713 to half, !dbg !64
  %2780 = fptrunc float %2714 to half, !dbg !64
  %2781 = fptrunc float %2715 to half, !dbg !64
  %2782 = fptrunc float %2716 to half, !dbg !64
  %2783 = fptrunc float %2717 to half, !dbg !64
  %2784 = fptrunc float %2718 to half, !dbg !64
  %2785 = fptrunc float %2719 to half, !dbg !64
  %2786 = fptrunc float %2720 to half, !dbg !64
  %2787 = fptrunc float %2721 to half, !dbg !64
  %2788 = fptrunc float %2722 to half, !dbg !64
  %2789 = fptrunc float %2723 to half, !dbg !64
  %2790 = fptrunc float %2724 to half, !dbg !64
  %2791 = fptrunc float %2725 to half, !dbg !64
  %2792 = fptrunc float %2726 to half, !dbg !64
  %2793 = fptrunc float %2727 to half, !dbg !64
  %2794 = fptrunc float %2728 to half, !dbg !64
  %2795 = fptrunc float %2729 to half, !dbg !64
  %2796 = fptrunc float %2730 to half, !dbg !64
  %2797 = fptrunc float %2731 to half, !dbg !64
  %2798 = fptrunc float %2732 to half, !dbg !64
  %2799 = fptrunc float %2733 to half, !dbg !64
  %2800 = fptrunc float %2734 to half, !dbg !64
  %2801 = fptrunc float %2735 to half, !dbg !64
  %2802 = fptrunc float %2736 to half, !dbg !64
  %2803 = fptrunc float %2737 to half, !dbg !64
  %2804 = fptrunc float %2738 to half, !dbg !64
  %2805 = fptrunc float %2739 to half, !dbg !64
  %2806 = fptrunc float %2740 to half, !dbg !64
  %2807 = fptrunc float %2741 to half, !dbg !64
  %2808 = fptrunc float %2742 to half, !dbg !64
  %2809 = fptrunc float %2743 to half, !dbg !64
  %2810 = fptrunc float %2744 to half, !dbg !64
  %2811 = fptrunc float %2745 to half, !dbg !64
  %2812 = fptrunc float %2746 to half, !dbg !64
  %2813 = fptrunc float %2747 to half, !dbg !64
  %2814 = fptrunc float %2748 to half, !dbg !64
  %2815 = fptrunc float %2749 to half, !dbg !64
  %2816 = fptrunc float %2750 to half, !dbg !64
  %2817 = fptrunc float %2751 to half, !dbg !64
  %2818 = fptrunc float %2752 to half, !dbg !64
  %2819 = fptrunc float %2753 to half, !dbg !64
  %2820 = fptrunc float %2754 to half, !dbg !64
  %2821 = fptrunc float %2755 to half, !dbg !64
  %2822 = fptrunc float %2756 to half, !dbg !64
  %2823 = fptrunc float %2757 to half, !dbg !64
  %2824 = fptrunc float %2758 to half, !dbg !64
  %2825 = fptrunc float %2759 to half, !dbg !64
  %2826 = fptrunc float %2760 to half, !dbg !64
  %2827 = fptrunc float %2761 to half, !dbg !64
  %2828 = fptrunc float %2762 to half, !dbg !64
  %2829 = fptrunc float %2763 to half, !dbg !64
  %2830 = mul nsw i64 %2572, %2765, !dbg !65
  %2831 = getelementptr half, ptr addrspace(1) %2764, i64 %2830, !dbg !65
  %2832 = getelementptr half, ptr addrspace(1) %2831, i64 %2699, !dbg !65
  %2833 = getelementptr half, ptr addrspace(1) %2831, i64 %2698, !dbg !65
  %2834 = getelementptr half, ptr addrspace(1) %2831, i64 %2696, !dbg !65
  %2835 = getelementptr half, ptr addrspace(1) %2831, i64 %2694, !dbg !65
  %2836 = getelementptr half, ptr addrspace(1) %2831, i64 %2692, !dbg !65
  %2837 = getelementptr half, ptr addrspace(1) %2831, i64 %2690, !dbg !65
  %2838 = getelementptr half, ptr addrspace(1) %2831, i64 %2688, !dbg !65
  %2839 = getelementptr half, ptr addrspace(1) %2831, i64 %2686, !dbg !65
  %2840 = getelementptr half, ptr addrspace(1) %2831, i64 %2684, !dbg !65
  %2841 = getelementptr half, ptr addrspace(1) %2831, i64 %2682, !dbg !65
  %2842 = getelementptr half, ptr addrspace(1) %2831, i64 %2680, !dbg !65
  %2843 = getelementptr half, ptr addrspace(1) %2831, i64 %2678, !dbg !65
  %2844 = getelementptr half, ptr addrspace(1) %2831, i64 %2676, !dbg !65
  %2845 = getelementptr half, ptr addrspace(1) %2831, i64 %2674, !dbg !65
  %2846 = getelementptr half, ptr addrspace(1) %2831, i64 %2672, !dbg !65
  %2847 = getelementptr half, ptr addrspace(1) %2831, i64 %2670, !dbg !65
  %2848 = getelementptr half, ptr addrspace(1) %2831, i64 %2668, !dbg !65
  %2849 = getelementptr half, ptr addrspace(1) %2831, i64 %2666, !dbg !65
  %2850 = getelementptr half, ptr addrspace(1) %2831, i64 %2664, !dbg !65
  %2851 = getelementptr half, ptr addrspace(1) %2831, i64 %2662, !dbg !65
  %2852 = getelementptr half, ptr addrspace(1) %2831, i64 %2660, !dbg !65
  %2853 = getelementptr half, ptr addrspace(1) %2831, i64 %2658, !dbg !65
  %2854 = getelementptr half, ptr addrspace(1) %2831, i64 %2656, !dbg !65
  %2855 = getelementptr half, ptr addrspace(1) %2831, i64 %2654, !dbg !65
  %2856 = getelementptr half, ptr addrspace(1) %2831, i64 %2652, !dbg !65
  %2857 = getelementptr half, ptr addrspace(1) %2831, i64 %2650, !dbg !65
  %2858 = getelementptr half, ptr addrspace(1) %2831, i64 %2648, !dbg !65
  %2859 = getelementptr half, ptr addrspace(1) %2831, i64 %2646, !dbg !65
  %2860 = getelementptr half, ptr addrspace(1) %2831, i64 %2644, !dbg !65
  %2861 = getelementptr half, ptr addrspace(1) %2831, i64 %2642, !dbg !65
  %2862 = getelementptr half, ptr addrspace(1) %2831, i64 %2640, !dbg !65
  %2863 = getelementptr half, ptr addrspace(1) %2831, i64 %2638, !dbg !65
  %2864 = getelementptr half, ptr addrspace(1) %2831, i64 %2636, !dbg !65
  %2865 = getelementptr half, ptr addrspace(1) %2831, i64 %2634, !dbg !65
  %2866 = getelementptr half, ptr addrspace(1) %2831, i64 %2632, !dbg !65
  %2867 = getelementptr half, ptr addrspace(1) %2831, i64 %2630, !dbg !65
  %2868 = getelementptr half, ptr addrspace(1) %2831, i64 %2628, !dbg !65
  %2869 = getelementptr half, ptr addrspace(1) %2831, i64 %2626, !dbg !65
  %2870 = getelementptr half, ptr addrspace(1) %2831, i64 %2624, !dbg !65
  %2871 = getelementptr half, ptr addrspace(1) %2831, i64 %2622, !dbg !65
  %2872 = getelementptr half, ptr addrspace(1) %2831, i64 %2620, !dbg !65
  %2873 = getelementptr half, ptr addrspace(1) %2831, i64 %2618, !dbg !65
  %2874 = getelementptr half, ptr addrspace(1) %2831, i64 %2616, !dbg !65
  %2875 = getelementptr half, ptr addrspace(1) %2831, i64 %2614, !dbg !65
  %2876 = getelementptr half, ptr addrspace(1) %2831, i64 %2612, !dbg !65
  %2877 = getelementptr half, ptr addrspace(1) %2831, i64 %2610, !dbg !65
  %2878 = getelementptr half, ptr addrspace(1) %2831, i64 %2608, !dbg !65
  %2879 = getelementptr half, ptr addrspace(1) %2831, i64 %2606, !dbg !65
  %2880 = getelementptr half, ptr addrspace(1) %2831, i64 %2604, !dbg !65
  %2881 = getelementptr half, ptr addrspace(1) %2831, i64 %2602, !dbg !65
  %2882 = getelementptr half, ptr addrspace(1) %2831, i64 %2600, !dbg !65
  %2883 = getelementptr half, ptr addrspace(1) %2831, i64 %2598, !dbg !65
  %2884 = getelementptr half, ptr addrspace(1) %2831, i64 %2596, !dbg !65
  %2885 = getelementptr half, ptr addrspace(1) %2831, i64 %2594, !dbg !65
  %2886 = getelementptr half, ptr addrspace(1) %2831, i64 %2592, !dbg !65
  %2887 = getelementptr half, ptr addrspace(1) %2831, i64 %2590, !dbg !65
  %2888 = getelementptr half, ptr addrspace(1) %2831, i64 %2588, !dbg !65
  %2889 = getelementptr half, ptr addrspace(1) %2831, i64 %2586, !dbg !65
  %2890 = getelementptr half, ptr addrspace(1) %2831, i64 %2584, !dbg !65
  %2891 = getelementptr half, ptr addrspace(1) %2831, i64 %2582, !dbg !65
  %2892 = getelementptr half, ptr addrspace(1) %2831, i64 %2580, !dbg !65
  %2893 = getelementptr half, ptr addrspace(1) %2831, i64 %2578, !dbg !65
  %2894 = getelementptr half, ptr addrspace(1) %2831, i64 %2576, !dbg !65
  %2895 = getelementptr half, ptr addrspace(1) %2831, i64 %2574, !dbg !65
  store half %2766, ptr addrspace(1) %2832, align 2, !dbg !65
  store half %2767, ptr addrspace(1) %2833, align 2, !dbg !65
  store half %2768, ptr addrspace(1) %2834, align 2, !dbg !65
  store half %2769, ptr addrspace(1) %2835, align 2, !dbg !65
  store half %2770, ptr addrspace(1) %2836, align 2, !dbg !65
  store half %2771, ptr addrspace(1) %2837, align 2, !dbg !65
  store half %2772, ptr addrspace(1) %2838, align 2, !dbg !65
  store half %2773, ptr addrspace(1) %2839, align 2, !dbg !65
  store half %2774, ptr addrspace(1) %2840, align 2, !dbg !65
  store half %2775, ptr addrspace(1) %2841, align 2, !dbg !65
  store half %2776, ptr addrspace(1) %2842, align 2, !dbg !65
  store half %2777, ptr addrspace(1) %2843, align 2, !dbg !65
  store half %2778, ptr addrspace(1) %2844, align 2, !dbg !65
  store half %2779, ptr addrspace(1) %2845, align 2, !dbg !65
  store half %2780, ptr addrspace(1) %2846, align 2, !dbg !65
  store half %2781, ptr addrspace(1) %2847, align 2, !dbg !65
  store half %2782, ptr addrspace(1) %2848, align 2, !dbg !65
  store half %2783, ptr addrspace(1) %2849, align 2, !dbg !65
  store half %2784, ptr addrspace(1) %2850, align 2, !dbg !65
  store half %2785, ptr addrspace(1) %2851, align 2, !dbg !65
  store half %2786, ptr addrspace(1) %2852, align 2, !dbg !65
  store half %2787, ptr addrspace(1) %2853, align 2, !dbg !65
  store half %2788, ptr addrspace(1) %2854, align 2, !dbg !65
  store half %2789, ptr addrspace(1) %2855, align 2, !dbg !65
  store half %2790, ptr addrspace(1) %2856, align 2, !dbg !65
  store half %2791, ptr addrspace(1) %2857, align 2, !dbg !65
  store half %2792, ptr addrspace(1) %2858, align 2, !dbg !65
  store half %2793, ptr addrspace(1) %2859, align 2, !dbg !65
  store half %2794, ptr addrspace(1) %2860, align 2, !dbg !65
  store half %2795, ptr addrspace(1) %2861, align 2, !dbg !65
  store half %2796, ptr addrspace(1) %2862, align 2, !dbg !65
  store half %2797, ptr addrspace(1) %2863, align 2, !dbg !65
  store half %2798, ptr addrspace(1) %2864, align 2, !dbg !65
  store half %2799, ptr addrspace(1) %2865, align 2, !dbg !65
  store half %2800, ptr addrspace(1) %2866, align 2, !dbg !65
  store half %2801, ptr addrspace(1) %2867, align 2, !dbg !65
  store half %2802, ptr addrspace(1) %2868, align 2, !dbg !65
  store half %2803, ptr addrspace(1) %2869, align 2, !dbg !65
  store half %2804, ptr addrspace(1) %2870, align 2, !dbg !65
  store half %2805, ptr addrspace(1) %2871, align 2, !dbg !65
  store half %2806, ptr addrspace(1) %2872, align 2, !dbg !65
  store half %2807, ptr addrspace(1) %2873, align 2, !dbg !65
  store half %2808, ptr addrspace(1) %2874, align 2, !dbg !65
  store half %2809, ptr addrspace(1) %2875, align 2, !dbg !65
  store half %2810, ptr addrspace(1) %2876, align 2, !dbg !65
  store half %2811, ptr addrspace(1) %2877, align 2, !dbg !65
  store half %2812, ptr addrspace(1) %2878, align 2, !dbg !65
  store half %2813, ptr addrspace(1) %2879, align 2, !dbg !65
  store half %2814, ptr addrspace(1) %2880, align 2, !dbg !65
  store half %2815, ptr addrspace(1) %2881, align 2, !dbg !65
  store half %2816, ptr addrspace(1) %2882, align 2, !dbg !65
  store half %2817, ptr addrspace(1) %2883, align 2, !dbg !65
  store half %2818, ptr addrspace(1) %2884, align 2, !dbg !65
  store half %2819, ptr addrspace(1) %2885, align 2, !dbg !65
  store half %2820, ptr addrspace(1) %2886, align 2, !dbg !65
  store half %2821, ptr addrspace(1) %2887, align 2, !dbg !65
  store half %2822, ptr addrspace(1) %2888, align 2, !dbg !65
  store half %2823, ptr addrspace(1) %2889, align 2, !dbg !65
  store half %2824, ptr addrspace(1) %2890, align 2, !dbg !65
  store half %2825, ptr addrspace(1) %2891, align 2, !dbg !65
  store half %2826, ptr addrspace(1) %2892, align 2, !dbg !65
  store half %2827, ptr addrspace(1) %2893, align 2, !dbg !65
  store half %2828, ptr addrspace(1) %2894, align 2, !dbg !65
  store half %2829, ptr addrspace(1) %2895, align 2, !dbg !65
  ret void, !dbg !66
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workgroup.id.y() #1

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #2

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half>, <4 x half>, <16 x float>, i32 immarg, i32 immarg, i32 immarg) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #1

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i32 @llvm.amdgcn.ds.bpermute(i32, i32) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.exp2.f32(float) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.exp2.v2f32(<2 x float>) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x float> @llvm.exp2.v4f32(<4 x float>) #5

attributes #0 = { nofree nounwind "amdgpu-flat-work-group-size"="1, 256" "amdgpu-unsafe-fp-atomics"="true" "amdgpu-waves-per-eu"="2" "denormal-fp-math-f32"="preserve-sign" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #3 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { convergent mustprogress nocallback nofree nounwind willreturn memory(none) }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.dbg.cu = !{!4}
!nvvm.annotations = !{!6}
!opencl.ocl.version = !{}
!llvm.ident = !{!8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !10}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 8, !"PIC Level", i32 0}
!3 = !{i32 4, !"amdgpu_hostcall", i32 1}
!4 = distinct !DICompileUnit(language: DW_LANG_C, file: !5, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!5 = !DIFile(filename: "06-fused-attention-fwd-transV.py", directory: "/triton/python/perf-kernels")
!6 = !{ptr @_attn_fwd_0d1d2d34d5d6de7de8de9c10de11de12de13c14de15de16de17c18de19de20de21c2223de24de, !"kernel", i32 1}
!7 = !{i32 2, i32 0}
!8 = !{!"clang version 14.0.0"}
!9 = !{!"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"}
!10 = !{!"AMD clang version 17.0.0 (ssh://gerritgit/lightning/ec/llvm-project amd-mainline-open 23425 56ebc6a00586c4107105c18e3dc4cc0966d7e8e2)"}
!11 = distinct !DISubprogram(name: "_attn_fwd_0d1d2d34d5d6de7de8de9c10de11de12de13c14de15de16de17c18de19de20de21c2223de24de", linkageName: "_attn_fwd_0d1d2d34d5d6de7de8de9c10de11de12de13c14de15de16de17c18de19de20de21c2223de24de", scope: !5, file: !5, line: 37, type: !12, scopeLine: 37, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4)
!12 = !DISubroutineType(cc: DW_CC_normal, types: !13)
!13 = !{}
!14 = !DILocation(line: 88, column: 16, scope: !11)
!15 = !DILocation(line: 87, column: 26, scope: !11)
!16 = !DILocation(line: 50, column: 28, scope: !11)
!17 = !DILocation(line: 57, column: 27, scope: !11)
!18 = !DILocation(line: 59, column: 8, scope: !11)
!19 = !DILocation(line: 51, column: 27, scope: !11)
!20 = !DILocation(line: 52, column: 26, scope: !11)
!21 = !DILocation(line: 54, column: 17, scope: !11)
!22 = !DILocation(line: 62, column: 17, scope: !11)
!23 = !DILocation(line: 67, column: 8, scope: !11)
!24 = !DILocation(line: 70, column: 17, scope: !11)
!25 = !DILocation(line: 75, column: 8, scope: !11)
!26 = !DILocation(line: 94, column: 16, scope: !11)
!27 = !DILocation(line: 92, column: 13, scope: !11)
!28 = !DILocation(line: 92, column: 26, scope: !11)
!29 = !DILocation(line: 96, scope: !11)
!30 = !DILocation(line: 107, column: 20, scope: !11)
!31 = !DILocation(line: 100, column: 33, scope: !11)
!32 = !DILocation(line: 102, column: 22, scope: !11)
!33 = !DILocation(line: 102, column: 11, scope: !11)
!34 = !DILocation(line: 103, column: 24, scope: !11)
!35 = !DILocation(line: 105, scope: !11)
!36 = !DILocation(line: 124, column: 23, scope: !37, inlinedAt: !40)
!37 = distinct !DILexicalBlockFile(scope: !39, file: !38, discriminator: 0)
!38 = !DIFile(filename: "standard.py", directory: "/triton/python/triton/language")
!39 = distinct !DILexicalBlockFile(scope: !11, file: !38, discriminator: 0)
!40 = !DILocation(line: 168, column: 40, scope: !37, inlinedAt: !41)
!41 = !DILocation(line: 108, column: 42, scope: !37)
!42 = !DILocation(line: 168, column: 40, scope: !39, inlinedAt: !43)
!43 = !DILocation(line: 108, column: 42, scope: !39)
!44 = !DILocation(line: 124, column: 23, scope: !39, inlinedAt: !45)
!45 = !DILocation(line: 108, column: 31, scope: !39)
!46 = !DILocation(line: 109, column: 18, scope: !11)
!47 = !DILocation(line: 110, column: 25, scope: !11)
!48 = !DILocation(line: 112, column: 35, scope: !11)
!49 = !DILocation(line: 112, column: 29, scope: !11)
!50 = !DILocation(line: 113, column: 20, scope: !11)
!51 = !DILocation(line: 116, column: 27, scope: !11)
!52 = !DILocation(line: 116, scope: !11)
!53 = !DILocation(line: 233, column: 15, scope: !37, inlinedAt: !54)
!54 = !DILocation(line: 243, column: 36, scope: !37, inlinedAt: !55)
!55 = !DILocation(line: 118, column: 25, scope: !37)
!56 = !DILocation(line: 243, column: 36, scope: !39, inlinedAt: !57)
!57 = !DILocation(line: 118, column: 25, scope: !39)
!58 = !DILocation(line: 119, column: 20, scope: !11)
!59 = !DILocation(line: 119, column: 28, scope: !11)
!60 = !DILocation(line: 123, column: 46, scope: !11)
!61 = !DILocation(line: 124, column: 16, scope: !11)
!62 = !DILocation(line: 127, column: 19, scope: !11)
!63 = !DILocation(line: 132, column: 8, scope: !11)
!64 = !DILocation(line: 134, column: 33, scope: !11)
!65 = !DILocation(line: 134, column: 26, scope: !11)
!66 = !DILocation(line: 134, column: 4, scope: !11)
