; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8], align 16

define amdgpu_kernel void @fused_moe_kernel(ptr addrspace(1) nocapture readonly %0, ptr addrspace(1) nocapture readonly %1, ptr addrspace(1) writeonly %2, ptr addrspace(1) nocapture readonly %3, ptr addrspace(1) nocapture readonly %4, ptr addrspace(1) nocapture readnone %5, ptr addrspace(1) nocapture readonly %6, ptr addrspace(1) nocapture readonly %7, ptr addrspace(1) nocapture readonly %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14, i32 %15, i32 %16) local_unnamed_addr #0 !dbg !4 {
  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !7
  %19 = add i32 %11, 255, !dbg !8
  %20 = sdiv i32 %19, 256, !dbg !12
  %21 = add i32 %9, 255, !dbg !13
  %22 = sdiv i32 %21, 256, !dbg !15
  %23 = shl nsw i32 %22, 2, !dbg !16
  %.frozen = freeze i32 %23
  %24 = sdiv i32 %18, %.frozen, !dbg !17
  %25 = shl i32 %24, 2, !dbg !18
  %26 = sub i32 %20, %25, !dbg !19
  %27 = tail call i32 @llvm.smin.i32(i32 %26, i32 4), !dbg !20
  %28 = mul i32 %24, %.frozen
  %.decomposed = sub i32 %18, %28
  %.frozen968 = freeze i32 %27
  %29 = sdiv i32 %.decomposed, %.frozen968, !dbg !21
  %30 = mul i32 %29, %.frozen968
  %.decomposed969 = sub i32 %.decomposed, %30
  %31 = add i32 %.decomposed969, %25, !dbg !22
  %32 = addrspacecast ptr addrspace(1) %8 to ptr, !dbg !23
  %33 = load i32, ptr %32, align 4, !dbg !23
  %34 = shl i32 %31, 8, !dbg !24
  %.not = icmp slt i32 %34, %33, !dbg !25
  br i1 %.not, label %36, label %35, !dbg !25

35:                                               ; preds = %2579, %2578, %17
  ret void, !dbg !26

36:                                               ; preds = %17
  %37 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !27
  %38 = and i32 %37, 63, !dbg !27
  %39 = lshr i32 %37, 6, !dbg !27
  %40 = lshr i32 %38, 3, !dbg !27
  %41 = shl nuw nsw i32 %39, 3, !dbg !27
  %42 = and i32 %41, 56, !dbg !27
  %43 = or disjoint i32 %42, %40, !dbg !27
  %44 = or disjoint i32 %43, 64, !dbg !27
  %45 = or disjoint i32 %43, 128, !dbg !27
  %46 = or disjoint i32 %43, 192, !dbg !27
  %47 = lshr i32 %37, 4, !dbg !27
  %48 = and i32 %47, 16, !dbg !27
  %49 = lshr i32 %38, 4, !dbg !27
  %50 = shl nuw nsw i32 %49, 2, !dbg !27
  %51 = or disjoint i32 %50, %48, !dbg !27
  %52 = shl nuw nsw i32 %39, 4, !dbg !27
  %53 = and i32 %52, 48, !dbg !27
  %54 = and i32 %37, 15, !dbg !27
  %55 = or disjoint i32 %53, %54, !dbg !27
  %56 = or disjoint i32 %34, %43, !dbg !28
  %57 = or disjoint i32 %34, %44, !dbg !28
  %58 = or disjoint i32 %34, %45, !dbg !28
  %59 = or disjoint i32 %34, %46, !dbg !28
  %60 = or disjoint i32 %34, %51, !dbg !28
  %61 = or disjoint i32 %60, 32, !dbg !28
  %62 = or disjoint i32 %60, 64, !dbg !28
  %63 = or disjoint i32 %60, 96, !dbg !28
  %64 = or disjoint i32 %60, 128, !dbg !28
  %65 = or disjoint i32 %60, 160, !dbg !28
  %66 = or disjoint i32 %60, 192, !dbg !28
  %67 = or disjoint i32 %60, 224, !dbg !28
  %68 = sext i32 %56 to i64, !dbg !29
  %69 = getelementptr i32, ptr addrspace(1) %6, i64 %68, !dbg !29
  %70 = sext i32 %57 to i64, !dbg !29
  %71 = getelementptr i32, ptr addrspace(1) %6, i64 %70, !dbg !29
  %72 = sext i32 %58 to i64, !dbg !29
  %73 = getelementptr i32, ptr addrspace(1) %6, i64 %72, !dbg !29
  %74 = sext i32 %59 to i64, !dbg !29
  %75 = getelementptr i32, ptr addrspace(1) %6, i64 %74, !dbg !29
  %76 = sext i32 %60 to i64, !dbg !29
  %77 = getelementptr i32, ptr addrspace(1) %6, i64 %76, !dbg !29
  %78 = sext i32 %61 to i64, !dbg !29
  %79 = getelementptr i32, ptr addrspace(1) %6, i64 %78, !dbg !29
  %80 = sext i32 %62 to i64, !dbg !29
  %81 = getelementptr i32, ptr addrspace(1) %6, i64 %80, !dbg !29
  %82 = sext i32 %63 to i64, !dbg !29
  %83 = getelementptr i32, ptr addrspace(1) %6, i64 %82, !dbg !29
  %84 = sext i32 %64 to i64, !dbg !29
  %85 = getelementptr i32, ptr addrspace(1) %6, i64 %84, !dbg !29
  %86 = sext i32 %65 to i64, !dbg !29
  %87 = getelementptr i32, ptr addrspace(1) %6, i64 %86, !dbg !29
  %88 = sext i32 %66 to i64, !dbg !29
  %89 = getelementptr i32, ptr addrspace(1) %6, i64 %88, !dbg !29
  %90 = sext i32 %67 to i64, !dbg !29
  %91 = getelementptr i32, ptr addrspace(1) %6, i64 %90, !dbg !29
  %92 = addrspacecast ptr addrspace(1) %69 to ptr, !dbg !30
  %93 = load i32, ptr %92, align 4, !dbg !30
  %94 = addrspacecast ptr addrspace(1) %71 to ptr, !dbg !30
  %95 = load i32, ptr %94, align 4, !dbg !30
  %96 = addrspacecast ptr addrspace(1) %73 to ptr, !dbg !30
  %97 = load i32, ptr %96, align 4, !dbg !30
  %98 = addrspacecast ptr addrspace(1) %75 to ptr, !dbg !30
  %99 = load i32, ptr %98, align 4, !dbg !30
  %100 = addrspacecast ptr addrspace(1) %77 to ptr, !dbg !30
  %101 = load i32, ptr %100, align 16, !dbg !30
  %102 = getelementptr inbounds i8, ptr %100, i64 4, !dbg !30
  %103 = load i32, ptr %102, align 4, !dbg !30
  %104 = getelementptr inbounds i8, ptr %100, i64 8, !dbg !30
  %105 = load i32, ptr %104, align 8, !dbg !30
  %106 = getelementptr inbounds i8, ptr %100, i64 12, !dbg !30
  %107 = load i32, ptr %106, align 4, !dbg !30
  %108 = addrspacecast ptr addrspace(1) %79 to ptr, !dbg !30
  %109 = load i32, ptr %108, align 16, !dbg !30
  %110 = getelementptr inbounds i8, ptr %108, i64 4, !dbg !30
  %111 = load i32, ptr %110, align 4, !dbg !30
  %112 = getelementptr inbounds i8, ptr %108, i64 8, !dbg !30
  %113 = load i32, ptr %112, align 8, !dbg !30
  %114 = getelementptr inbounds i8, ptr %108, i64 12, !dbg !30
  %115 = load i32, ptr %114, align 4, !dbg !30
  %116 = addrspacecast ptr addrspace(1) %81 to ptr, !dbg !30
  %117 = load i32, ptr %116, align 16, !dbg !30
  %118 = getelementptr inbounds i8, ptr %116, i64 4, !dbg !30
  %119 = load i32, ptr %118, align 4, !dbg !30
  %120 = getelementptr inbounds i8, ptr %116, i64 8, !dbg !30
  %121 = load i32, ptr %120, align 8, !dbg !30
  %122 = getelementptr inbounds i8, ptr %116, i64 12, !dbg !30
  %123 = load i32, ptr %122, align 4, !dbg !30
  %124 = addrspacecast ptr addrspace(1) %83 to ptr, !dbg !30
  %125 = load i32, ptr %124, align 16, !dbg !30
  %126 = getelementptr inbounds i8, ptr %124, i64 4, !dbg !30
  %127 = load i32, ptr %126, align 4, !dbg !30
  %128 = getelementptr inbounds i8, ptr %124, i64 8, !dbg !30
  %129 = load i32, ptr %128, align 8, !dbg !30
  %130 = getelementptr inbounds i8, ptr %124, i64 12, !dbg !30
  %131 = load i32, ptr %130, align 4, !dbg !30
  %132 = addrspacecast ptr addrspace(1) %85 to ptr, !dbg !30
  %133 = load i32, ptr %132, align 16, !dbg !30
  %134 = getelementptr inbounds i8, ptr %132, i64 4, !dbg !30
  %135 = load i32, ptr %134, align 4, !dbg !30
  %136 = getelementptr inbounds i8, ptr %132, i64 8, !dbg !30
  %137 = load i32, ptr %136, align 8, !dbg !30
  %138 = getelementptr inbounds i8, ptr %132, i64 12, !dbg !30
  %139 = load i32, ptr %138, align 4, !dbg !30
  %140 = addrspacecast ptr addrspace(1) %87 to ptr, !dbg !30
  %141 = load i32, ptr %140, align 16, !dbg !30
  %142 = getelementptr inbounds i8, ptr %140, i64 4, !dbg !30
  %143 = load i32, ptr %142, align 4, !dbg !30
  %144 = getelementptr inbounds i8, ptr %140, i64 8, !dbg !30
  %145 = load i32, ptr %144, align 8, !dbg !30
  %146 = getelementptr inbounds i8, ptr %140, i64 12, !dbg !30
  %147 = load i32, ptr %146, align 4, !dbg !30
  %148 = addrspacecast ptr addrspace(1) %89 to ptr, !dbg !30
  %149 = load i32, ptr %148, align 16, !dbg !30
  %150 = getelementptr inbounds i8, ptr %148, i64 4, !dbg !30
  %151 = load i32, ptr %150, align 4, !dbg !30
  %152 = getelementptr inbounds i8, ptr %148, i64 8, !dbg !30
  %153 = load i32, ptr %152, align 8, !dbg !30
  %154 = getelementptr inbounds i8, ptr %148, i64 12, !dbg !30
  %155 = load i32, ptr %154, align 4, !dbg !30
  %156 = addrspacecast ptr addrspace(1) %91 to ptr, !dbg !30
  %157 = load i32, ptr %156, align 16, !dbg !30
  %158 = getelementptr inbounds i8, ptr %156, i64 4, !dbg !30
  %159 = load i32, ptr %158, align 4, !dbg !30
  %160 = getelementptr inbounds i8, ptr %156, i64 8, !dbg !30
  %161 = load i32, ptr %160, align 8, !dbg !30
  %162 = getelementptr inbounds i8, ptr %156, i64 12, !dbg !30
  %163 = load i32, ptr %162, align 4, !dbg !30
  %164 = icmp slt i32 %93, %12, !dbg !31
  %165 = icmp slt i32 %95, %12, !dbg !31
  %166 = icmp slt i32 %97, %12, !dbg !31
  %167 = icmp slt i32 %99, %12, !dbg !31
  %168 = insertelement <32 x i32> poison, i32 %157, i64 0, !dbg !31
  %169 = insertelement <32 x i32> %168, i32 %159, i64 1, !dbg !31
  %170 = insertelement <32 x i32> %169, i32 %161, i64 2, !dbg !31
  %171 = insertelement <32 x i32> %170, i32 %163, i64 3, !dbg !31
  %172 = insertelement <32 x i32> %171, i32 %149, i64 4, !dbg !31
  %173 = insertelement <32 x i32> %172, i32 %151, i64 5, !dbg !31
  %174 = insertelement <32 x i32> %173, i32 %153, i64 6, !dbg !31
  %175 = insertelement <32 x i32> %174, i32 %155, i64 7, !dbg !31
  %176 = insertelement <32 x i32> %175, i32 %141, i64 8, !dbg !31
  %177 = insertelement <32 x i32> %176, i32 %143, i64 9, !dbg !31
  %178 = insertelement <32 x i32> %177, i32 %145, i64 10, !dbg !31
  %179 = insertelement <32 x i32> %178, i32 %147, i64 11, !dbg !31
  %180 = insertelement <32 x i32> %179, i32 %133, i64 12, !dbg !31
  %181 = insertelement <32 x i32> %180, i32 %135, i64 13, !dbg !31
  %182 = insertelement <32 x i32> %181, i32 %137, i64 14, !dbg !31
  %183 = insertelement <32 x i32> %182, i32 %139, i64 15, !dbg !31
  %184 = insertelement <32 x i32> %183, i32 %125, i64 16, !dbg !31
  %185 = insertelement <32 x i32> %184, i32 %127, i64 17, !dbg !31
  %186 = insertelement <32 x i32> %185, i32 %129, i64 18, !dbg !31
  %187 = insertelement <32 x i32> %186, i32 %131, i64 19, !dbg !31
  %188 = insertelement <32 x i32> %187, i32 %117, i64 20, !dbg !31
  %189 = insertelement <32 x i32> %188, i32 %119, i64 21, !dbg !31
  %190 = insertelement <32 x i32> %189, i32 %121, i64 22, !dbg !31
  %191 = insertelement <32 x i32> %190, i32 %123, i64 23, !dbg !31
  %192 = insertelement <32 x i32> %191, i32 %109, i64 24, !dbg !31
  %193 = insertelement <32 x i32> %192, i32 %111, i64 25, !dbg !31
  %194 = insertelement <32 x i32> %193, i32 %113, i64 26, !dbg !31
  %195 = insertelement <32 x i32> %194, i32 %115, i64 27, !dbg !31
  %196 = insertelement <32 x i32> %195, i32 %101, i64 28, !dbg !31
  %197 = insertelement <32 x i32> %196, i32 %103, i64 29, !dbg !31
  %198 = insertelement <32 x i32> %197, i32 %105, i64 30, !dbg !31
  %199 = insertelement <32 x i32> %198, i32 %107, i64 31, !dbg !31
  %200 = insertelement <32 x i32> poison, i32 %12, i64 0, !dbg !31
  %201 = shufflevector <32 x i32> %200, <32 x i32> poison, <32 x i32> zeroinitializer, !dbg !31
  %202 = icmp slt <32 x i32> %199, %201, !dbg !31
  %203 = shl i32 %29, 8, !dbg !32
  %204 = or disjoint i32 %203, %43, !dbg !33
  %205 = or disjoint i32 %203, %44, !dbg !33
  %206 = or disjoint i32 %203, %45, !dbg !33
  %207 = or disjoint i32 %203, %46, !dbg !33
  %208 = or disjoint i32 %203, %55, !dbg !33
  %209 = or disjoint i32 %208, 64, !dbg !33
  %210 = or disjoint i32 %208, 128, !dbg !33
  %211 = or disjoint i32 %208, 192, !dbg !33
  %212 = srem i32 %204, %9, !dbg !34
  %213 = srem i32 %205, %9, !dbg !34
  %214 = srem i32 %206, %9, !dbg !34
  %215 = srem i32 %207, %9, !dbg !34
  %216 = sdiv i32 %93, 2, !dbg !35
  %217 = sdiv i32 %95, 2, !dbg !35
  %218 = sdiv i32 %97, 2, !dbg !35
  %219 = sdiv i32 %99, 2, !dbg !35
  %220 = mul i32 %216, %13, !dbg !36
  %221 = mul i32 %217, %13, !dbg !36
  %222 = mul i32 %218, %13, !dbg !36
  %223 = mul i32 %219, %13, !dbg !36
  %224 = shl i32 %37, 4, !dbg !37
  %225 = and i32 %224, 112, !dbg !37
  %226 = add i32 %220, %225, !dbg !38
  %227 = add i32 %221, %225, !dbg !38
  %228 = add i32 %222, %225, !dbg !38
  %229 = add i32 %223, %225, !dbg !38
  %230 = sext i32 %226 to i64, !dbg !39
  %231 = getelementptr i8, ptr addrspace(1) %0, i64 %230, !dbg !39
  %232 = sext i32 %227 to i64, !dbg !39
  %233 = getelementptr i8, ptr addrspace(1) %0, i64 %232, !dbg !39
  %234 = sext i32 %228 to i64, !dbg !39
  %235 = getelementptr i8, ptr addrspace(1) %0, i64 %234, !dbg !39
  %236 = sext i32 %229 to i64, !dbg !39
  %237 = getelementptr i8, ptr addrspace(1) %0, i64 %236, !dbg !39
  %238 = sext i32 %31 to i64, !dbg !40
  %239 = getelementptr i32, ptr addrspace(1) %7, i64 %238, !dbg !40
  %240 = addrspacecast ptr addrspace(1) %239 to ptr, !dbg !41
  %241 = load i32, ptr %240, align 4, !dbg !41
  %242 = mul i32 %241, %14, !dbg !42
  %243 = sext i32 %242 to i64, !dbg !43
  %244 = getelementptr i8, ptr addrspace(1) %1, i64 %243, !dbg !43
  %245 = mul i32 %212, %15, !dbg !44
  %246 = mul i32 %213, %15, !dbg !44
  %247 = mul i32 %214, %15, !dbg !44
  %248 = mul i32 %215, %15, !dbg !44
  %249 = add i32 %245, %225, !dbg !45
  %250 = add i32 %246, %225, !dbg !45
  %251 = add i32 %247, %225, !dbg !45
  %252 = add i32 %248, %225, !dbg !45
  %253 = sext i32 %249 to i64, !dbg !46
  %254 = getelementptr i8, ptr addrspace(1) %244, i64 %253, !dbg !46
  %255 = sext i32 %250 to i64, !dbg !46
  %256 = getelementptr i8, ptr addrspace(1) %244, i64 %255, !dbg !46
  %257 = sext i32 %251 to i64, !dbg !46
  %258 = getelementptr i8, ptr addrspace(1) %244, i64 %257, !dbg !46
  %259 = sext i32 %252 to i64, !dbg !46
  %260 = getelementptr i8, ptr addrspace(1) %244, i64 %259, !dbg !46
  %261 = addrspacecast ptr addrspace(1) %3 to ptr, !dbg !47
  %262 = load float, ptr %261, align 4, !dbg !47
  %263 = sext i32 %241 to i64, !dbg !48
  %264 = getelementptr float, ptr addrspace(1) %4, i64 %263, !dbg !48
  %265 = addrspacecast ptr addrspace(1) %264 to ptr, !dbg !49
  %266 = load float, ptr %265, align 4, !dbg !49
  %267 = add i32 %10, 127, !dbg !50
  %268 = sdiv i32 %267, 128, !dbg !52
  %269 = tail call i32 asm "v_cvt_pk_fp8_f32 $0, $1, $2", "=v,v,v"(float 0.000000e+00, float 0.000000e+00) #4, !dbg !53
  %270 = trunc i32 %269 to i8, !dbg !53
  %extelt.offset = lshr i32 %269, 8, !dbg !53
  %271 = trunc i32 %extelt.offset to i8, !dbg !53
  %272 = insertelement <16 x i8> <i8 poison, i8 poison, i8 poison, i8 poison, i8 poison, i8 poison, i8 poison, i8 poison, i8 poison, i8 poison, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, i8 %270, i64 0, !dbg !53
  %273 = insertelement <16 x i8> %272, i8 %271, i64 1, !dbg !53
  %274 = insertelement <16 x i8> %273, i8 %270, i64 2, !dbg !53
  %275 = insertelement <16 x i8> %274, i8 %271, i64 3, !dbg !53
  %276 = insertelement <16 x i8> %275, i8 %270, i64 4, !dbg !53
  %277 = insertelement <16 x i8> %276, i8 %271, i64 5, !dbg !53
  %278 = insertelement <16 x i8> %277, i8 %270, i64 6, !dbg !53
  %279 = insertelement <16 x i8> %278, i8 %271, i64 7, !dbg !53
  %280 = insertelement <16 x i8> %279, i8 %270, i64 8, !dbg !53
  %281 = insertelement <16 x i8> %280, i8 %271, i64 9, !dbg !53
  %282 = insertelement <16 x i8> %281, i8 %270, i64 10, !dbg !53
  %283 = insertelement <16 x i8> %282, i8 %271, i64 11, !dbg !53
  %284 = insertelement <16 x i8> %283, i8 %270, i64 12, !dbg !53
  %285 = insertelement <16 x i8> %284, i8 %271, i64 13, !dbg !53
  %286 = insertelement <16 x i8> %285, i8 %270, i64 14, !dbg !53
  %287 = insertelement <16 x i8> %286, i8 %271, i64 15, !dbg !53
  br i1 %164, label %288, label %291, !dbg !53

288:                                              ; preds = %36
  %289 = addrspacecast ptr addrspace(1) %231 to ptr, !dbg !53
  %290 = load <16 x i8>, ptr %289, align 16, !dbg !53
  br label %291, !dbg !53

291:                                              ; preds = %36, %288
  %292 = phi <16 x i8> [ %290, %288 ], [ %287, %36 ]
  br i1 %165, label %293, label %296, !dbg !53

293:                                              ; preds = %291
  %294 = addrspacecast ptr addrspace(1) %233 to ptr, !dbg !53
  %295 = load <16 x i8>, ptr %294, align 16, !dbg !53
  br label %296, !dbg !53

296:                                              ; preds = %291, %293
  %297 = phi <16 x i8> [ %295, %293 ], [ %287, %291 ]
  br i1 %166, label %298, label %301, !dbg !53

298:                                              ; preds = %296
  %299 = addrspacecast ptr addrspace(1) %235 to ptr, !dbg !53
  %300 = load <16 x i8>, ptr %299, align 16, !dbg !53
  br label %301, !dbg !53

301:                                              ; preds = %296, %298
  %302 = phi <16 x i8> [ %300, %298 ], [ %287, %296 ]
  br i1 %167, label %303, label %306, !dbg !53

303:                                              ; preds = %301
  %304 = addrspacecast ptr addrspace(1) %237 to ptr, !dbg !53
  %305 = load <16 x i8>, ptr %304, align 16, !dbg !53
  br label %306, !dbg !53

306:                                              ; preds = %301, %303
  %307 = phi <16 x i8> [ %305, %303 ], [ %287, %301 ]
  %308 = shl i32 %37, 1, !dbg !53
  %309 = xor i32 %308, %224, !dbg !53
  %310 = and i32 %309, 112, !dbg !53
  %311 = shl i32 %37, 4, !dbg !53
  %312 = and i32 %311, 8064, !dbg !53
  %313 = or disjoint i32 %312, %310, !dbg !53
  %314 = zext nneg i32 %313 to i64, !dbg !53
  %315 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i64 %314, !dbg !53
  store <16 x i8> %292, ptr addrspace(3) %315, align 16, !dbg !53
  %316 = or disjoint i32 %313, 8192, !dbg !53
  %317 = zext nneg i32 %316 to i64, !dbg !53
  %318 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i64 %317, !dbg !53
  store <16 x i8> %297, ptr addrspace(3) %318, align 16, !dbg !53
  %319 = or disjoint i32 %313, 16384, !dbg !53
  %320 = zext nneg i32 %319 to i64, !dbg !53
  %321 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i64 %320, !dbg !53
  store <16 x i8> %302, ptr addrspace(3) %321, align 16, !dbg !53
  %322 = or disjoint i32 %313, 24576, !dbg !53
  %323 = zext nneg i32 %322 to i64, !dbg !53
  %324 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i64 %323, !dbg !53
  store <16 x i8> %307, ptr addrspace(3) %324, align 16, !dbg !53
  %325 = addrspacecast ptr addrspace(1) %254 to ptr, !dbg !54
  %326 = load <16 x i8>, ptr %325, align 16, !dbg !54
  %327 = addrspacecast ptr addrspace(1) %256 to ptr, !dbg !54
  %328 = load <16 x i8>, ptr %327, align 16, !dbg !54
  %329 = addrspacecast ptr addrspace(1) %258 to ptr, !dbg !54
  %330 = load <16 x i8>, ptr %329, align 16, !dbg !54
  %331 = addrspacecast ptr addrspace(1) %260 to ptr, !dbg !54
  %332 = load <16 x i8>, ptr %331, align 16, !dbg !54
  %333 = getelementptr inbounds i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %314, !dbg !54
  store <16 x i8> %326, ptr addrspace(3) %333, align 16, !dbg !54
  %334 = getelementptr inbounds i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %317, !dbg !54
  store <16 x i8> %328, ptr addrspace(3) %334, align 16, !dbg !54
  %335 = getelementptr inbounds i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %320, !dbg !54
  store <16 x i8> %330, ptr addrspace(3) %335, align 16, !dbg !54
  %336 = getelementptr inbounds i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %323, !dbg !54
  store <16 x i8> %332, ptr addrspace(3) %336, align 16, !dbg !54
  %337 = add nsw i32 %268, -1, !dbg !55
  %338 = icmp sgt i32 %267, 255, !dbg !55
  %339 = or disjoint i32 %48, %54
  %340 = and i32 %37, 7
  %341 = xor i32 %49, %340
  %342 = shl nuw nsw i32 %341, 4
  %343 = shl nuw nsw i32 %339, 7
  %344 = or disjoint i32 %343, %342
  %345 = and i32 %47, 3
  %346 = or disjoint i32 %345, 4
  %347 = xor i32 %346, %340
  %348 = shl nuw nsw i32 %347, 4
  %349 = or disjoint i32 %348, %343
  %350 = or disjoint i32 %344, 4096
  %351 = or disjoint i32 %349, 4096
  %352 = or disjoint i32 %344, 8192
  %353 = or disjoint i32 %349, 8192
  %354 = or disjoint i32 %344, 12288
  %355 = or disjoint i32 %349, 12288
  %356 = or disjoint i32 %344, 16384
  %357 = or disjoint i32 %349, 16384
  %358 = or disjoint i32 %344, 20480
  %359 = or disjoint i32 %349, 20480
  %360 = or disjoint i32 %344, 24576
  %361 = or disjoint i32 %349, 24576
  %362 = or disjoint i32 %344, 28672
  %363 = or disjoint i32 %349, 28672
  %364 = zext nneg i32 %344 to i64
  br i1 %338, label %.lr.ph, label %.._crit_edge_crit_edge, !dbg !55

.._crit_edge_crit_edge:                           ; preds = %306
  %.pre522 = zext nneg i32 %349 to i64, !dbg !53
  %.pre524 = zext nneg i32 %350 to i64, !dbg !53
  %.pre526 = zext nneg i32 %351 to i64, !dbg !53
  %.pre528 = zext nneg i32 %352 to i64, !dbg !53
  %.pre530 = zext nneg i32 %353 to i64, !dbg !53
  %.pre532 = zext nneg i32 %354 to i64, !dbg !53
  %.pre534 = zext nneg i32 %355 to i64, !dbg !53
  %.pre536 = zext nneg i32 %356 to i64, !dbg !53
  %.pre538 = zext nneg i32 %357 to i64, !dbg !53
  %.pre540 = zext nneg i32 %358 to i64, !dbg !53
  %.pre542 = zext nneg i32 %359 to i64, !dbg !53
  %.pre544 = zext nneg i32 %360 to i64, !dbg !53
  %.pre546 = zext nneg i32 %361 to i64, !dbg !53
  %.pre548 = zext nneg i32 %362 to i64, !dbg !53
  %.pre550 = zext nneg i32 %363 to i64, !dbg !53
  %.pre552 = shl nuw nsw i32 %55, 7, !dbg !54
  %.pre554 = or disjoint i32 %.pre552, %342, !dbg !54
  %.pre556 = or disjoint i32 %348, %.pre552, !dbg !54
  %.pre558 = or disjoint i32 %.pre554, 8192, !dbg !54
  %.pre560 = or disjoint i32 %.pre556, 8192, !dbg !54
  %.pre562 = or disjoint i32 %.pre554, 16384, !dbg !54
  %.pre564 = or disjoint i32 %.pre556, 16384, !dbg !54
  %.pre566 = or disjoint i32 %.pre554, 24576, !dbg !54
  %.pre568 = or disjoint i32 %.pre556, 24576, !dbg !54
  %.pre570 = zext nneg i32 %.pre554 to i64, !dbg !54
  %.pre572 = zext nneg i32 %.pre556 to i64, !dbg !54
  %.pre574 = zext nneg i32 %.pre558 to i64, !dbg !54
  %.pre576 = zext nneg i32 %.pre560 to i64, !dbg !54
  %.pre578 = zext nneg i32 %.pre562 to i64, !dbg !54
  %.pre580 = zext nneg i32 %.pre564 to i64, !dbg !54
  %.pre582 = zext nneg i32 %.pre566 to i64, !dbg !54
  %.pre584 = zext nneg i32 %.pre568 to i64, !dbg !54
  br label %._crit_edge, !dbg !55

.lr.ph:                                           ; preds = %306
  %365 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %364
  %366 = zext nneg i32 %349 to i64
  %367 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %366
  %368 = zext nneg i32 %350 to i64
  %369 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %368
  %370 = zext nneg i32 %351 to i64
  %371 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %370
  %372 = zext nneg i32 %352 to i64
  %373 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %372
  %374 = zext nneg i32 %353 to i64
  %375 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %374
  %376 = zext nneg i32 %354 to i64
  %377 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %376
  %378 = zext nneg i32 %355 to i64
  %379 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %378
  %380 = zext nneg i32 %356 to i64
  %381 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %380
  %382 = zext nneg i32 %357 to i64
  %383 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %382
  %384 = zext nneg i32 %358 to i64
  %385 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %384
  %386 = zext nneg i32 %359 to i64
  %387 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %386
  %388 = zext nneg i32 %360 to i64
  %389 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %388
  %390 = zext nneg i32 %361 to i64
  %391 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %390
  %392 = zext nneg i32 %362 to i64
  %393 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %392
  %394 = zext nneg i32 %363 to i64
  %395 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %394
  %396 = shl nuw nsw i32 %55, 7
  %397 = or disjoint i32 %396, %342
  %398 = or disjoint i32 %348, %396
  %399 = or disjoint i32 %397, 8192
  %400 = or disjoint i32 %398, 8192
  %401 = or disjoint i32 %397, 16384
  %402 = or disjoint i32 %398, 16384
  %403 = or disjoint i32 %397, 24576
  %404 = or disjoint i32 %398, 24576
  %405 = zext nneg i32 %397 to i64
  %406 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %405
  %407 = zext nneg i32 %398 to i64
  %408 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %407
  %409 = zext nneg i32 %399 to i64
  %410 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %409
  %411 = zext nneg i32 %400 to i64
  %412 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %411
  %413 = zext nneg i32 %401 to i64
  %414 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %413
  %415 = zext nneg i32 %402 to i64
  %416 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %415
  %417 = zext nneg i32 %403 to i64
  %418 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %417
  %419 = zext nneg i32 %404 to i64
  %420 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %419
  br label %421, !dbg !55

421:                                              ; preds = %.lr.ph, %569
  %.pn = phi ptr addrspace(1) [ %231, %.lr.ph ], [ %.pn128463, %569 ]
  %.pn464 = phi ptr addrspace(1) [ %233, %.lr.ph ], [ %.pn96462, %569 ]
  %.pn465 = phi ptr addrspace(1) [ %235, %.lr.ph ], [ %.pn64461, %569 ]
  %.pn466 = phi ptr addrspace(1) [ %237, %.lr.ph ], [ %.pn32460, %569 ]
  %.pn467 = phi ptr addrspace(1) [ %254, %.lr.ph ], [ %.pn256459, %569 ]
  %.pn468 = phi ptr addrspace(1) [ %256, %.lr.ph ], [ %.pn224458, %569 ]
  %.pn469 = phi ptr addrspace(1) [ %258, %.lr.ph ], [ %.pn192457, %569 ]
  %.pn470 = phi ptr addrspace(1) [ %260, %.lr.ph ], [ %.pn160456, %569 ]
  %422 = phi float [ 0.000000e+00, %.lr.ph ], [ %611, %569 ]
  %423 = phi float [ 0.000000e+00, %.lr.ph ], [ %612, %569 ]
  %424 = phi float [ 0.000000e+00, %.lr.ph ], [ %613, %569 ]
  %425 = phi float [ 0.000000e+00, %.lr.ph ], [ %614, %569 ]
  %426 = phi float [ 0.000000e+00, %.lr.ph ], [ %623, %569 ]
  %427 = phi float [ 0.000000e+00, %.lr.ph ], [ %624, %569 ]
  %428 = phi float [ 0.000000e+00, %.lr.ph ], [ %625, %569 ]
  %429 = phi float [ 0.000000e+00, %.lr.ph ], [ %626, %569 ]
  %430 = phi float [ 0.000000e+00, %.lr.ph ], [ %635, %569 ]
  %431 = phi float [ 0.000000e+00, %.lr.ph ], [ %636, %569 ]
  %432 = phi float [ 0.000000e+00, %.lr.ph ], [ %637, %569 ]
  %433 = phi float [ 0.000000e+00, %.lr.ph ], [ %638, %569 ]
  %434 = phi float [ 0.000000e+00, %.lr.ph ], [ %647, %569 ]
  %435 = phi float [ 0.000000e+00, %.lr.ph ], [ %648, %569 ]
  %436 = phi float [ 0.000000e+00, %.lr.ph ], [ %649, %569 ]
  %437 = phi float [ 0.000000e+00, %.lr.ph ], [ %650, %569 ]
  %438 = phi float [ 0.000000e+00, %.lr.ph ], [ %659, %569 ]
  %439 = phi float [ 0.000000e+00, %.lr.ph ], [ %660, %569 ]
  %440 = phi float [ 0.000000e+00, %.lr.ph ], [ %661, %569 ]
  %441 = phi float [ 0.000000e+00, %.lr.ph ], [ %662, %569 ]
  %442 = phi float [ 0.000000e+00, %.lr.ph ], [ %671, %569 ]
  %443 = phi float [ 0.000000e+00, %.lr.ph ], [ %672, %569 ]
  %444 = phi float [ 0.000000e+00, %.lr.ph ], [ %673, %569 ]
  %445 = phi float [ 0.000000e+00, %.lr.ph ], [ %674, %569 ]
  %446 = phi float [ 0.000000e+00, %.lr.ph ], [ %683, %569 ]
  %447 = phi float [ 0.000000e+00, %.lr.ph ], [ %684, %569 ]
  %448 = phi float [ 0.000000e+00, %.lr.ph ], [ %685, %569 ]
  %449 = phi float [ 0.000000e+00, %.lr.ph ], [ %686, %569 ]
  %450 = phi float [ 0.000000e+00, %.lr.ph ], [ %695, %569 ]
  %451 = phi float [ 0.000000e+00, %.lr.ph ], [ %696, %569 ]
  %452 = phi float [ 0.000000e+00, %.lr.ph ], [ %697, %569 ]
  %453 = phi float [ 0.000000e+00, %.lr.ph ], [ %698, %569 ]
  %454 = phi float [ 0.000000e+00, %.lr.ph ], [ %707, %569 ]
  %455 = phi float [ 0.000000e+00, %.lr.ph ], [ %708, %569 ]
  %456 = phi float [ 0.000000e+00, %.lr.ph ], [ %709, %569 ]
  %457 = phi float [ 0.000000e+00, %.lr.ph ], [ %710, %569 ]
  %458 = phi float [ 0.000000e+00, %.lr.ph ], [ %719, %569 ]
  %459 = phi float [ 0.000000e+00, %.lr.ph ], [ %720, %569 ]
  %460 = phi float [ 0.000000e+00, %.lr.ph ], [ %721, %569 ]
  %461 = phi float [ 0.000000e+00, %.lr.ph ], [ %722, %569 ]
  %462 = phi float [ 0.000000e+00, %.lr.ph ], [ %731, %569 ]
  %463 = phi float [ 0.000000e+00, %.lr.ph ], [ %732, %569 ]
  %464 = phi float [ 0.000000e+00, %.lr.ph ], [ %733, %569 ]
  %465 = phi float [ 0.000000e+00, %.lr.ph ], [ %734, %569 ]
  %466 = phi float [ 0.000000e+00, %.lr.ph ], [ %743, %569 ]
  %467 = phi float [ 0.000000e+00, %.lr.ph ], [ %744, %569 ]
  %468 = phi float [ 0.000000e+00, %.lr.ph ], [ %745, %569 ]
  %469 = phi float [ 0.000000e+00, %.lr.ph ], [ %746, %569 ]
  %470 = phi float [ 0.000000e+00, %.lr.ph ], [ %755, %569 ]
  %471 = phi float [ 0.000000e+00, %.lr.ph ], [ %756, %569 ]
  %472 = phi float [ 0.000000e+00, %.lr.ph ], [ %757, %569 ]
  %473 = phi float [ 0.000000e+00, %.lr.ph ], [ %758, %569 ]
  %474 = phi float [ 0.000000e+00, %.lr.ph ], [ %767, %569 ]
  %475 = phi float [ 0.000000e+00, %.lr.ph ], [ %768, %569 ]
  %476 = phi float [ 0.000000e+00, %.lr.ph ], [ %769, %569 ]
  %477 = phi float [ 0.000000e+00, %.lr.ph ], [ %770, %569 ]
  %478 = phi float [ 0.000000e+00, %.lr.ph ], [ %779, %569 ]
  %479 = phi float [ 0.000000e+00, %.lr.ph ], [ %780, %569 ]
  %480 = phi float [ 0.000000e+00, %.lr.ph ], [ %781, %569 ]
  %481 = phi float [ 0.000000e+00, %.lr.ph ], [ %782, %569 ]
  %482 = phi float [ 0.000000e+00, %.lr.ph ], [ %791, %569 ]
  %483 = phi float [ 0.000000e+00, %.lr.ph ], [ %792, %569 ]
  %484 = phi float [ 0.000000e+00, %.lr.ph ], [ %793, %569 ]
  %485 = phi float [ 0.000000e+00, %.lr.ph ], [ %794, %569 ]
  %486 = phi float [ 0.000000e+00, %.lr.ph ], [ %803, %569 ]
  %487 = phi float [ 0.000000e+00, %.lr.ph ], [ %804, %569 ]
  %488 = phi float [ 0.000000e+00, %.lr.ph ], [ %805, %569 ]
  %489 = phi float [ 0.000000e+00, %.lr.ph ], [ %806, %569 ]
  %490 = phi float [ 0.000000e+00, %.lr.ph ], [ %815, %569 ]
  %491 = phi float [ 0.000000e+00, %.lr.ph ], [ %816, %569 ]
  %492 = phi float [ 0.000000e+00, %.lr.ph ], [ %817, %569 ]
  %493 = phi float [ 0.000000e+00, %.lr.ph ], [ %818, %569 ]
  %494 = phi float [ 0.000000e+00, %.lr.ph ], [ %827, %569 ]
  %495 = phi float [ 0.000000e+00, %.lr.ph ], [ %828, %569 ]
  %496 = phi float [ 0.000000e+00, %.lr.ph ], [ %829, %569 ]
  %497 = phi float [ 0.000000e+00, %.lr.ph ], [ %830, %569 ]
  %498 = phi float [ 0.000000e+00, %.lr.ph ], [ %839, %569 ]
  %499 = phi float [ 0.000000e+00, %.lr.ph ], [ %840, %569 ]
  %500 = phi float [ 0.000000e+00, %.lr.ph ], [ %841, %569 ]
  %501 = phi float [ 0.000000e+00, %.lr.ph ], [ %842, %569 ]
  %502 = phi float [ 0.000000e+00, %.lr.ph ], [ %851, %569 ]
  %503 = phi float [ 0.000000e+00, %.lr.ph ], [ %852, %569 ]
  %504 = phi float [ 0.000000e+00, %.lr.ph ], [ %853, %569 ]
  %505 = phi float [ 0.000000e+00, %.lr.ph ], [ %854, %569 ]
  %506 = phi float [ 0.000000e+00, %.lr.ph ], [ %863, %569 ]
  %507 = phi float [ 0.000000e+00, %.lr.ph ], [ %864, %569 ]
  %508 = phi float [ 0.000000e+00, %.lr.ph ], [ %865, %569 ]
  %509 = phi float [ 0.000000e+00, %.lr.ph ], [ %866, %569 ]
  %510 = phi float [ 0.000000e+00, %.lr.ph ], [ %875, %569 ]
  %511 = phi float [ 0.000000e+00, %.lr.ph ], [ %876, %569 ]
  %512 = phi float [ 0.000000e+00, %.lr.ph ], [ %877, %569 ]
  %513 = phi float [ 0.000000e+00, %.lr.ph ], [ %878, %569 ]
  %514 = phi float [ 0.000000e+00, %.lr.ph ], [ %887, %569 ]
  %515 = phi float [ 0.000000e+00, %.lr.ph ], [ %888, %569 ]
  %516 = phi float [ 0.000000e+00, %.lr.ph ], [ %889, %569 ]
  %517 = phi float [ 0.000000e+00, %.lr.ph ], [ %890, %569 ]
  %518 = phi float [ 0.000000e+00, %.lr.ph ], [ %899, %569 ]
  %519 = phi float [ 0.000000e+00, %.lr.ph ], [ %900, %569 ]
  %520 = phi float [ 0.000000e+00, %.lr.ph ], [ %901, %569 ]
  %521 = phi float [ 0.000000e+00, %.lr.ph ], [ %902, %569 ]
  %522 = phi float [ 0.000000e+00, %.lr.ph ], [ %911, %569 ]
  %523 = phi float [ 0.000000e+00, %.lr.ph ], [ %912, %569 ]
  %524 = phi float [ 0.000000e+00, %.lr.ph ], [ %913, %569 ]
  %525 = phi float [ 0.000000e+00, %.lr.ph ], [ %914, %569 ]
  %526 = phi float [ 0.000000e+00, %.lr.ph ], [ %923, %569 ]
  %527 = phi float [ 0.000000e+00, %.lr.ph ], [ %924, %569 ]
  %528 = phi float [ 0.000000e+00, %.lr.ph ], [ %925, %569 ]
  %529 = phi float [ 0.000000e+00, %.lr.ph ], [ %926, %569 ]
  %530 = phi float [ 0.000000e+00, %.lr.ph ], [ %935, %569 ]
  %531 = phi float [ 0.000000e+00, %.lr.ph ], [ %936, %569 ]
  %532 = phi float [ 0.000000e+00, %.lr.ph ], [ %937, %569 ]
  %533 = phi float [ 0.000000e+00, %.lr.ph ], [ %938, %569 ]
  %534 = phi float [ 0.000000e+00, %.lr.ph ], [ %947, %569 ]
  %535 = phi float [ 0.000000e+00, %.lr.ph ], [ %948, %569 ]
  %536 = phi float [ 0.000000e+00, %.lr.ph ], [ %949, %569 ]
  %537 = phi float [ 0.000000e+00, %.lr.ph ], [ %950, %569 ]
  %538 = phi float [ 0.000000e+00, %.lr.ph ], [ %959, %569 ]
  %539 = phi float [ 0.000000e+00, %.lr.ph ], [ %960, %569 ]
  %540 = phi float [ 0.000000e+00, %.lr.ph ], [ %961, %569 ]
  %541 = phi float [ 0.000000e+00, %.lr.ph ], [ %962, %569 ]
  %542 = phi float [ 0.000000e+00, %.lr.ph ], [ %971, %569 ]
  %543 = phi float [ 0.000000e+00, %.lr.ph ], [ %972, %569 ]
  %544 = phi float [ 0.000000e+00, %.lr.ph ], [ %973, %569 ]
  %545 = phi float [ 0.000000e+00, %.lr.ph ], [ %974, %569 ]
  %546 = phi float [ 0.000000e+00, %.lr.ph ], [ %983, %569 ]
  %547 = phi float [ 0.000000e+00, %.lr.ph ], [ %984, %569 ]
  %548 = phi float [ 0.000000e+00, %.lr.ph ], [ %985, %569 ]
  %549 = phi float [ 0.000000e+00, %.lr.ph ], [ %986, %569 ]
  %550 = phi i32 [ 0, %.lr.ph ], [ %987, %569 ]
  %.pn160456 = getelementptr i8, ptr addrspace(1) %.pn470, i64 128, !dbg !56
  %.pn192457 = getelementptr i8, ptr addrspace(1) %.pn469, i64 128, !dbg !56
  %.pn224458 = getelementptr i8, ptr addrspace(1) %.pn468, i64 128, !dbg !56
  %.pn256459 = getelementptr i8, ptr addrspace(1) %.pn467, i64 128, !dbg !56
  %.pn32460 = getelementptr i8, ptr addrspace(1) %.pn466, i64 128, !dbg !57
  %.pn64461 = getelementptr i8, ptr addrspace(1) %.pn465, i64 128, !dbg !57
  %.pn96462 = getelementptr i8, ptr addrspace(1) %.pn464, i64 128, !dbg !57
  %.pn128463 = getelementptr i8, ptr addrspace(1) %.pn, i64 128, !dbg !57
  br i1 %164, label %551, label %554, !dbg !53

551:                                              ; preds = %421
  %552 = addrspacecast ptr addrspace(1) %.pn128463 to ptr, !dbg !53
  %553 = load <16 x i8>, ptr %552, align 16, !dbg !53
  br label %554, !dbg !53

554:                                              ; preds = %421, %551
  %555 = phi <16 x i8> [ %553, %551 ], [ %287, %421 ]
  br i1 %165, label %556, label %559, !dbg !53

556:                                              ; preds = %554
  %557 = addrspacecast ptr addrspace(1) %.pn96462 to ptr, !dbg !53
  %558 = load <16 x i8>, ptr %557, align 16, !dbg !53
  br label %559, !dbg !53

559:                                              ; preds = %554, %556
  %560 = phi <16 x i8> [ %558, %556 ], [ %287, %554 ]
  br i1 %166, label %561, label %564, !dbg !53

561:                                              ; preds = %559
  %562 = addrspacecast ptr addrspace(1) %.pn64461 to ptr, !dbg !53
  %563 = load <16 x i8>, ptr %562, align 16, !dbg !53
  br label %564, !dbg !53

564:                                              ; preds = %559, %561
  %565 = phi <16 x i8> [ %563, %561 ], [ %287, %559 ]
  br i1 %167, label %566, label %569, !dbg !53

566:                                              ; preds = %564
  %567 = addrspacecast ptr addrspace(1) %.pn32460 to ptr, !dbg !53
  %568 = load <16 x i8>, ptr %567, align 16, !dbg !53
  br label %569, !dbg !53

569:                                              ; preds = %564, %566
  %570 = phi <16 x i8> [ %568, %566 ], [ %287, %564 ]
  %571 = addrspacecast ptr addrspace(1) %.pn256459 to ptr, !dbg !54
  %572 = load <16 x i8>, ptr %571, align 16, !dbg !54
  %573 = addrspacecast ptr addrspace(1) %.pn224458 to ptr, !dbg !54
  %574 = load <16 x i8>, ptr %573, align 16, !dbg !54
  %575 = addrspacecast ptr addrspace(1) %.pn192457 to ptr, !dbg !54
  %576 = load <16 x i8>, ptr %575, align 16, !dbg !54
  %577 = addrspacecast ptr addrspace(1) %.pn160456 to ptr, !dbg !54
  %578 = load <16 x i8>, ptr %577, align 16, !dbg !54
  fence syncscope("workgroup") release, !dbg !53
  tail call void @llvm.amdgcn.s.barrier(), !dbg !53
  fence syncscope("workgroup") acquire, !dbg !53
  %579 = load <2 x i64>, ptr addrspace(3) %365, align 16, !dbg !53
  %580 = load <2 x i64>, ptr addrspace(3) %367, align 16, !dbg !53
  %581 = load <2 x i64>, ptr addrspace(3) %369, align 16, !dbg !53
  %582 = load <2 x i64>, ptr addrspace(3) %371, align 16, !dbg !53
  %583 = load <2 x i64>, ptr addrspace(3) %373, align 16, !dbg !53
  %584 = load <2 x i64>, ptr addrspace(3) %375, align 16, !dbg !53
  %585 = load <2 x i64>, ptr addrspace(3) %377, align 16, !dbg !53
  %586 = load <2 x i64>, ptr addrspace(3) %379, align 16, !dbg !53
  %587 = load <2 x i64>, ptr addrspace(3) %381, align 16, !dbg !53
  %588 = load <2 x i64>, ptr addrspace(3) %383, align 16, !dbg !53
  %589 = load <2 x i64>, ptr addrspace(3) %385, align 16, !dbg !53
  %590 = load <2 x i64>, ptr addrspace(3) %387, align 16, !dbg !53
  %591 = load <2 x i64>, ptr addrspace(3) %389, align 16, !dbg !53
  %592 = load <2 x i64>, ptr addrspace(3) %391, align 16, !dbg !53
  %593 = load <2 x i64>, ptr addrspace(3) %393, align 16, !dbg !53
  %594 = load <2 x i64>, ptr addrspace(3) %395, align 16, !dbg !53
  %595 = load <2 x i64>, ptr addrspace(3) %406, align 16, !dbg !54
  %596 = load <2 x i64>, ptr addrspace(3) %408, align 16, !dbg !54
  %597 = load <2 x i64>, ptr addrspace(3) %410, align 16, !dbg !54
  %598 = load <2 x i64>, ptr addrspace(3) %412, align 16, !dbg !54
  %599 = load <2 x i64>, ptr addrspace(3) %414, align 16, !dbg !54
  %600 = load <2 x i64>, ptr addrspace(3) %416, align 16, !dbg !54
  %601 = load <2 x i64>, ptr addrspace(3) %418, align 16, !dbg !54
  %602 = load <2 x i64>, ptr addrspace(3) %420, align 16, !dbg !54
  %.extract352 = extractelement <2 x i64> %579, i64 0, !dbg !58
  %.extract354 = extractelement <2 x i64> %579, i64 1, !dbg !58
  %.extract356 = extractelement <2 x i64> %580, i64 0, !dbg !58
  %.extract358 = extractelement <2 x i64> %580, i64 1, !dbg !58
  %.extract360 = extractelement <2 x i64> %581, i64 0, !dbg !58
  %.extract362 = extractelement <2 x i64> %581, i64 1, !dbg !58
  %.extract364 = extractelement <2 x i64> %582, i64 0, !dbg !58
  %.extract366 = extractelement <2 x i64> %582, i64 1, !dbg !58
  %.extract368 = extractelement <2 x i64> %583, i64 0, !dbg !58
  %.extract370 = extractelement <2 x i64> %583, i64 1, !dbg !58
  %.extract372 = extractelement <2 x i64> %584, i64 0, !dbg !58
  %.extract374 = extractelement <2 x i64> %584, i64 1, !dbg !58
  %.extract376 = extractelement <2 x i64> %585, i64 0, !dbg !58
  %.extract378 = extractelement <2 x i64> %585, i64 1, !dbg !58
  %.extract380 = extractelement <2 x i64> %586, i64 0, !dbg !58
  %.extract382 = extractelement <2 x i64> %586, i64 1, !dbg !58
  %.extract384 = extractelement <2 x i64> %587, i64 0, !dbg !58
  %.extract386 = extractelement <2 x i64> %587, i64 1, !dbg !58
  %.extract388 = extractelement <2 x i64> %588, i64 0, !dbg !58
  %.extract390 = extractelement <2 x i64> %588, i64 1, !dbg !58
  %.extract392 = extractelement <2 x i64> %589, i64 0, !dbg !58
  %.extract394 = extractelement <2 x i64> %589, i64 1, !dbg !58
  %.extract396 = extractelement <2 x i64> %590, i64 0, !dbg !58
  %.extract398 = extractelement <2 x i64> %590, i64 1, !dbg !58
  %.extract400 = extractelement <2 x i64> %591, i64 0, !dbg !58
  %.extract402 = extractelement <2 x i64> %591, i64 1, !dbg !58
  %.extract404 = extractelement <2 x i64> %592, i64 0, !dbg !58
  %.extract406 = extractelement <2 x i64> %592, i64 1, !dbg !58
  %.extract408 = extractelement <2 x i64> %593, i64 0, !dbg !58
  %.extract410 = extractelement <2 x i64> %593, i64 1, !dbg !58
  %.extract412 = extractelement <2 x i64> %594, i64 0, !dbg !58
  %.extract414 = extractelement <2 x i64> %594, i64 1, !dbg !58
  %.extract416 = extractelement <2 x i64> %595, i64 0, !dbg !58
  %.extract418 = extractelement <2 x i64> %595, i64 1, !dbg !58
  %.extract420 = extractelement <2 x i64> %596, i64 0, !dbg !58
  %.extract422 = extractelement <2 x i64> %596, i64 1, !dbg !58
  %.extract424 = extractelement <2 x i64> %597, i64 0, !dbg !58
  %.extract426 = extractelement <2 x i64> %597, i64 1, !dbg !58
  %.extract428 = extractelement <2 x i64> %598, i64 0, !dbg !58
  %.extract430 = extractelement <2 x i64> %598, i64 1, !dbg !58
  %.extract432 = extractelement <2 x i64> %599, i64 0, !dbg !58
  %.extract434 = extractelement <2 x i64> %599, i64 1, !dbg !58
  %.extract436 = extractelement <2 x i64> %600, i64 0, !dbg !58
  %.extract438 = extractelement <2 x i64> %600, i64 1, !dbg !58
  %.extract440 = extractelement <2 x i64> %601, i64 0, !dbg !58
  %.extract442 = extractelement <2 x i64> %601, i64 1, !dbg !58
  %.extract444 = extractelement <2 x i64> %602, i64 0, !dbg !58
  %.extract446 = extractelement <2 x i64> %602, i64 1, !dbg !58
  %603 = insertelement <4 x float> poison, float %422, i64 0, !dbg !58
  %604 = insertelement <4 x float> %603, float %423, i64 1, !dbg !58
  %605 = insertelement <4 x float> %604, float %424, i64 2, !dbg !58
  %606 = insertelement <4 x float> %605, float %425, i64 3, !dbg !58
  %607 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract352, i64 %.extract416, <4 x float> %606, i32 0, i32 0, i32 0), !dbg !58
  %608 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract354, i64 %.extract418, <4 x float> %607, i32 0, i32 0, i32 0), !dbg !58
  %609 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract356, i64 %.extract420, <4 x float> %608, i32 0, i32 0, i32 0), !dbg !58
  %610 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract358, i64 %.extract422, <4 x float> %609, i32 0, i32 0, i32 0), !dbg !58
  %611 = extractelement <4 x float> %610, i64 0, !dbg !58
  %612 = extractelement <4 x float> %610, i64 1, !dbg !58
  %613 = extractelement <4 x float> %610, i64 2, !dbg !58
  %614 = extractelement <4 x float> %610, i64 3, !dbg !58
  %615 = insertelement <4 x float> poison, float %426, i64 0, !dbg !58
  %616 = insertelement <4 x float> %615, float %427, i64 1, !dbg !58
  %617 = insertelement <4 x float> %616, float %428, i64 2, !dbg !58
  %618 = insertelement <4 x float> %617, float %429, i64 3, !dbg !58
  %619 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract352, i64 %.extract424, <4 x float> %618, i32 0, i32 0, i32 0), !dbg !58
  %620 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract354, i64 %.extract426, <4 x float> %619, i32 0, i32 0, i32 0), !dbg !58
  %621 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract356, i64 %.extract428, <4 x float> %620, i32 0, i32 0, i32 0), !dbg !58
  %622 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract358, i64 %.extract430, <4 x float> %621, i32 0, i32 0, i32 0), !dbg !58
  %623 = extractelement <4 x float> %622, i64 0, !dbg !58
  %624 = extractelement <4 x float> %622, i64 1, !dbg !58
  %625 = extractelement <4 x float> %622, i64 2, !dbg !58
  %626 = extractelement <4 x float> %622, i64 3, !dbg !58
  %627 = insertelement <4 x float> poison, float %430, i64 0, !dbg !58
  %628 = insertelement <4 x float> %627, float %431, i64 1, !dbg !58
  %629 = insertelement <4 x float> %628, float %432, i64 2, !dbg !58
  %630 = insertelement <4 x float> %629, float %433, i64 3, !dbg !58
  %631 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract352, i64 %.extract432, <4 x float> %630, i32 0, i32 0, i32 0), !dbg !58
  %632 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract354, i64 %.extract434, <4 x float> %631, i32 0, i32 0, i32 0), !dbg !58
  %633 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract356, i64 %.extract436, <4 x float> %632, i32 0, i32 0, i32 0), !dbg !58
  %634 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract358, i64 %.extract438, <4 x float> %633, i32 0, i32 0, i32 0), !dbg !58
  %635 = extractelement <4 x float> %634, i64 0, !dbg !58
  %636 = extractelement <4 x float> %634, i64 1, !dbg !58
  %637 = extractelement <4 x float> %634, i64 2, !dbg !58
  %638 = extractelement <4 x float> %634, i64 3, !dbg !58
  %639 = insertelement <4 x float> poison, float %434, i64 0, !dbg !58
  %640 = insertelement <4 x float> %639, float %435, i64 1, !dbg !58
  %641 = insertelement <4 x float> %640, float %436, i64 2, !dbg !58
  %642 = insertelement <4 x float> %641, float %437, i64 3, !dbg !58
  %643 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract352, i64 %.extract440, <4 x float> %642, i32 0, i32 0, i32 0), !dbg !58
  %644 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract354, i64 %.extract442, <4 x float> %643, i32 0, i32 0, i32 0), !dbg !58
  %645 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract356, i64 %.extract444, <4 x float> %644, i32 0, i32 0, i32 0), !dbg !58
  %646 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract358, i64 %.extract446, <4 x float> %645, i32 0, i32 0, i32 0), !dbg !58
  %647 = extractelement <4 x float> %646, i64 0, !dbg !58
  %648 = extractelement <4 x float> %646, i64 1, !dbg !58
  %649 = extractelement <4 x float> %646, i64 2, !dbg !58
  %650 = extractelement <4 x float> %646, i64 3, !dbg !58
  %651 = insertelement <4 x float> poison, float %438, i64 0, !dbg !58
  %652 = insertelement <4 x float> %651, float %439, i64 1, !dbg !58
  %653 = insertelement <4 x float> %652, float %440, i64 2, !dbg !58
  %654 = insertelement <4 x float> %653, float %441, i64 3, !dbg !58
  %655 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract360, i64 %.extract416, <4 x float> %654, i32 0, i32 0, i32 0), !dbg !58
  %656 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract362, i64 %.extract418, <4 x float> %655, i32 0, i32 0, i32 0), !dbg !58
  %657 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract364, i64 %.extract420, <4 x float> %656, i32 0, i32 0, i32 0), !dbg !58
  %658 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract366, i64 %.extract422, <4 x float> %657, i32 0, i32 0, i32 0), !dbg !58
  %659 = extractelement <4 x float> %658, i64 0, !dbg !58
  %660 = extractelement <4 x float> %658, i64 1, !dbg !58
  %661 = extractelement <4 x float> %658, i64 2, !dbg !58
  %662 = extractelement <4 x float> %658, i64 3, !dbg !58
  %663 = insertelement <4 x float> poison, float %442, i64 0, !dbg !58
  %664 = insertelement <4 x float> %663, float %443, i64 1, !dbg !58
  %665 = insertelement <4 x float> %664, float %444, i64 2, !dbg !58
  %666 = insertelement <4 x float> %665, float %445, i64 3, !dbg !58
  %667 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract360, i64 %.extract424, <4 x float> %666, i32 0, i32 0, i32 0), !dbg !58
  %668 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract362, i64 %.extract426, <4 x float> %667, i32 0, i32 0, i32 0), !dbg !58
  %669 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract364, i64 %.extract428, <4 x float> %668, i32 0, i32 0, i32 0), !dbg !58
  %670 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract366, i64 %.extract430, <4 x float> %669, i32 0, i32 0, i32 0), !dbg !58
  %671 = extractelement <4 x float> %670, i64 0, !dbg !58
  %672 = extractelement <4 x float> %670, i64 1, !dbg !58
  %673 = extractelement <4 x float> %670, i64 2, !dbg !58
  %674 = extractelement <4 x float> %670, i64 3, !dbg !58
  %675 = insertelement <4 x float> poison, float %446, i64 0, !dbg !58
  %676 = insertelement <4 x float> %675, float %447, i64 1, !dbg !58
  %677 = insertelement <4 x float> %676, float %448, i64 2, !dbg !58
  %678 = insertelement <4 x float> %677, float %449, i64 3, !dbg !58
  %679 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract360, i64 %.extract432, <4 x float> %678, i32 0, i32 0, i32 0), !dbg !58
  %680 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract362, i64 %.extract434, <4 x float> %679, i32 0, i32 0, i32 0), !dbg !58
  %681 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract364, i64 %.extract436, <4 x float> %680, i32 0, i32 0, i32 0), !dbg !58
  %682 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract366, i64 %.extract438, <4 x float> %681, i32 0, i32 0, i32 0), !dbg !58
  %683 = extractelement <4 x float> %682, i64 0, !dbg !58
  %684 = extractelement <4 x float> %682, i64 1, !dbg !58
  %685 = extractelement <4 x float> %682, i64 2, !dbg !58
  %686 = extractelement <4 x float> %682, i64 3, !dbg !58
  %687 = insertelement <4 x float> poison, float %450, i64 0, !dbg !58
  %688 = insertelement <4 x float> %687, float %451, i64 1, !dbg !58
  %689 = insertelement <4 x float> %688, float %452, i64 2, !dbg !58
  %690 = insertelement <4 x float> %689, float %453, i64 3, !dbg !58
  %691 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract360, i64 %.extract440, <4 x float> %690, i32 0, i32 0, i32 0), !dbg !58
  %692 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract362, i64 %.extract442, <4 x float> %691, i32 0, i32 0, i32 0), !dbg !58
  %693 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract364, i64 %.extract444, <4 x float> %692, i32 0, i32 0, i32 0), !dbg !58
  %694 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract366, i64 %.extract446, <4 x float> %693, i32 0, i32 0, i32 0), !dbg !58
  %695 = extractelement <4 x float> %694, i64 0, !dbg !58
  %696 = extractelement <4 x float> %694, i64 1, !dbg !58
  %697 = extractelement <4 x float> %694, i64 2, !dbg !58
  %698 = extractelement <4 x float> %694, i64 3, !dbg !58
  %699 = insertelement <4 x float> poison, float %454, i64 0, !dbg !58
  %700 = insertelement <4 x float> %699, float %455, i64 1, !dbg !58
  %701 = insertelement <4 x float> %700, float %456, i64 2, !dbg !58
  %702 = insertelement <4 x float> %701, float %457, i64 3, !dbg !58
  %703 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract368, i64 %.extract416, <4 x float> %702, i32 0, i32 0, i32 0), !dbg !58
  %704 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract370, i64 %.extract418, <4 x float> %703, i32 0, i32 0, i32 0), !dbg !58
  %705 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract372, i64 %.extract420, <4 x float> %704, i32 0, i32 0, i32 0), !dbg !58
  %706 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract374, i64 %.extract422, <4 x float> %705, i32 0, i32 0, i32 0), !dbg !58
  %707 = extractelement <4 x float> %706, i64 0, !dbg !58
  %708 = extractelement <4 x float> %706, i64 1, !dbg !58
  %709 = extractelement <4 x float> %706, i64 2, !dbg !58
  %710 = extractelement <4 x float> %706, i64 3, !dbg !58
  %711 = insertelement <4 x float> poison, float %458, i64 0, !dbg !58
  %712 = insertelement <4 x float> %711, float %459, i64 1, !dbg !58
  %713 = insertelement <4 x float> %712, float %460, i64 2, !dbg !58
  %714 = insertelement <4 x float> %713, float %461, i64 3, !dbg !58
  %715 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract368, i64 %.extract424, <4 x float> %714, i32 0, i32 0, i32 0), !dbg !58
  %716 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract370, i64 %.extract426, <4 x float> %715, i32 0, i32 0, i32 0), !dbg !58
  %717 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract372, i64 %.extract428, <4 x float> %716, i32 0, i32 0, i32 0), !dbg !58
  %718 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract374, i64 %.extract430, <4 x float> %717, i32 0, i32 0, i32 0), !dbg !58
  %719 = extractelement <4 x float> %718, i64 0, !dbg !58
  %720 = extractelement <4 x float> %718, i64 1, !dbg !58
  %721 = extractelement <4 x float> %718, i64 2, !dbg !58
  %722 = extractelement <4 x float> %718, i64 3, !dbg !58
  %723 = insertelement <4 x float> poison, float %462, i64 0, !dbg !58
  %724 = insertelement <4 x float> %723, float %463, i64 1, !dbg !58
  %725 = insertelement <4 x float> %724, float %464, i64 2, !dbg !58
  %726 = insertelement <4 x float> %725, float %465, i64 3, !dbg !58
  %727 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract368, i64 %.extract432, <4 x float> %726, i32 0, i32 0, i32 0), !dbg !58
  %728 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract370, i64 %.extract434, <4 x float> %727, i32 0, i32 0, i32 0), !dbg !58
  %729 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract372, i64 %.extract436, <4 x float> %728, i32 0, i32 0, i32 0), !dbg !58
  %730 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract374, i64 %.extract438, <4 x float> %729, i32 0, i32 0, i32 0), !dbg !58
  %731 = extractelement <4 x float> %730, i64 0, !dbg !58
  %732 = extractelement <4 x float> %730, i64 1, !dbg !58
  %733 = extractelement <4 x float> %730, i64 2, !dbg !58
  %734 = extractelement <4 x float> %730, i64 3, !dbg !58
  %735 = insertelement <4 x float> poison, float %466, i64 0, !dbg !58
  %736 = insertelement <4 x float> %735, float %467, i64 1, !dbg !58
  %737 = insertelement <4 x float> %736, float %468, i64 2, !dbg !58
  %738 = insertelement <4 x float> %737, float %469, i64 3, !dbg !58
  %739 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract368, i64 %.extract440, <4 x float> %738, i32 0, i32 0, i32 0), !dbg !58
  %740 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract370, i64 %.extract442, <4 x float> %739, i32 0, i32 0, i32 0), !dbg !58
  %741 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract372, i64 %.extract444, <4 x float> %740, i32 0, i32 0, i32 0), !dbg !58
  %742 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract374, i64 %.extract446, <4 x float> %741, i32 0, i32 0, i32 0), !dbg !58
  %743 = extractelement <4 x float> %742, i64 0, !dbg !58
  %744 = extractelement <4 x float> %742, i64 1, !dbg !58
  %745 = extractelement <4 x float> %742, i64 2, !dbg !58
  %746 = extractelement <4 x float> %742, i64 3, !dbg !58
  %747 = insertelement <4 x float> poison, float %470, i64 0, !dbg !58
  %748 = insertelement <4 x float> %747, float %471, i64 1, !dbg !58
  %749 = insertelement <4 x float> %748, float %472, i64 2, !dbg !58
  %750 = insertelement <4 x float> %749, float %473, i64 3, !dbg !58
  %751 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract376, i64 %.extract416, <4 x float> %750, i32 0, i32 0, i32 0), !dbg !58
  %752 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract378, i64 %.extract418, <4 x float> %751, i32 0, i32 0, i32 0), !dbg !58
  %753 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract380, i64 %.extract420, <4 x float> %752, i32 0, i32 0, i32 0), !dbg !58
  %754 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract382, i64 %.extract422, <4 x float> %753, i32 0, i32 0, i32 0), !dbg !58
  %755 = extractelement <4 x float> %754, i64 0, !dbg !58
  %756 = extractelement <4 x float> %754, i64 1, !dbg !58
  %757 = extractelement <4 x float> %754, i64 2, !dbg !58
  %758 = extractelement <4 x float> %754, i64 3, !dbg !58
  %759 = insertelement <4 x float> poison, float %474, i64 0, !dbg !58
  %760 = insertelement <4 x float> %759, float %475, i64 1, !dbg !58
  %761 = insertelement <4 x float> %760, float %476, i64 2, !dbg !58
  %762 = insertelement <4 x float> %761, float %477, i64 3, !dbg !58
  %763 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract376, i64 %.extract424, <4 x float> %762, i32 0, i32 0, i32 0), !dbg !58
  %764 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract378, i64 %.extract426, <4 x float> %763, i32 0, i32 0, i32 0), !dbg !58
  %765 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract380, i64 %.extract428, <4 x float> %764, i32 0, i32 0, i32 0), !dbg !58
  %766 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract382, i64 %.extract430, <4 x float> %765, i32 0, i32 0, i32 0), !dbg !58
  %767 = extractelement <4 x float> %766, i64 0, !dbg !58
  %768 = extractelement <4 x float> %766, i64 1, !dbg !58
  %769 = extractelement <4 x float> %766, i64 2, !dbg !58
  %770 = extractelement <4 x float> %766, i64 3, !dbg !58
  %771 = insertelement <4 x float> poison, float %478, i64 0, !dbg !58
  %772 = insertelement <4 x float> %771, float %479, i64 1, !dbg !58
  %773 = insertelement <4 x float> %772, float %480, i64 2, !dbg !58
  %774 = insertelement <4 x float> %773, float %481, i64 3, !dbg !58
  %775 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract376, i64 %.extract432, <4 x float> %774, i32 0, i32 0, i32 0), !dbg !58
  %776 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract378, i64 %.extract434, <4 x float> %775, i32 0, i32 0, i32 0), !dbg !58
  %777 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract380, i64 %.extract436, <4 x float> %776, i32 0, i32 0, i32 0), !dbg !58
  %778 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract382, i64 %.extract438, <4 x float> %777, i32 0, i32 0, i32 0), !dbg !58
  %779 = extractelement <4 x float> %778, i64 0, !dbg !58
  %780 = extractelement <4 x float> %778, i64 1, !dbg !58
  %781 = extractelement <4 x float> %778, i64 2, !dbg !58
  %782 = extractelement <4 x float> %778, i64 3, !dbg !58
  %783 = insertelement <4 x float> poison, float %482, i64 0, !dbg !58
  %784 = insertelement <4 x float> %783, float %483, i64 1, !dbg !58
  %785 = insertelement <4 x float> %784, float %484, i64 2, !dbg !58
  %786 = insertelement <4 x float> %785, float %485, i64 3, !dbg !58
  %787 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract376, i64 %.extract440, <4 x float> %786, i32 0, i32 0, i32 0), !dbg !58
  %788 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract378, i64 %.extract442, <4 x float> %787, i32 0, i32 0, i32 0), !dbg !58
  %789 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract380, i64 %.extract444, <4 x float> %788, i32 0, i32 0, i32 0), !dbg !58
  %790 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract382, i64 %.extract446, <4 x float> %789, i32 0, i32 0, i32 0), !dbg !58
  %791 = extractelement <4 x float> %790, i64 0, !dbg !58
  %792 = extractelement <4 x float> %790, i64 1, !dbg !58
  %793 = extractelement <4 x float> %790, i64 2, !dbg !58
  %794 = extractelement <4 x float> %790, i64 3, !dbg !58
  %795 = insertelement <4 x float> poison, float %486, i64 0, !dbg !58
  %796 = insertelement <4 x float> %795, float %487, i64 1, !dbg !58
  %797 = insertelement <4 x float> %796, float %488, i64 2, !dbg !58
  %798 = insertelement <4 x float> %797, float %489, i64 3, !dbg !58
  %799 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract384, i64 %.extract416, <4 x float> %798, i32 0, i32 0, i32 0), !dbg !58
  %800 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract386, i64 %.extract418, <4 x float> %799, i32 0, i32 0, i32 0), !dbg !58
  %801 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract388, i64 %.extract420, <4 x float> %800, i32 0, i32 0, i32 0), !dbg !58
  %802 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract390, i64 %.extract422, <4 x float> %801, i32 0, i32 0, i32 0), !dbg !58
  %803 = extractelement <4 x float> %802, i64 0, !dbg !58
  %804 = extractelement <4 x float> %802, i64 1, !dbg !58
  %805 = extractelement <4 x float> %802, i64 2, !dbg !58
  %806 = extractelement <4 x float> %802, i64 3, !dbg !58
  %807 = insertelement <4 x float> poison, float %490, i64 0, !dbg !58
  %808 = insertelement <4 x float> %807, float %491, i64 1, !dbg !58
  %809 = insertelement <4 x float> %808, float %492, i64 2, !dbg !58
  %810 = insertelement <4 x float> %809, float %493, i64 3, !dbg !58
  %811 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract384, i64 %.extract424, <4 x float> %810, i32 0, i32 0, i32 0), !dbg !58
  %812 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract386, i64 %.extract426, <4 x float> %811, i32 0, i32 0, i32 0), !dbg !58
  %813 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract388, i64 %.extract428, <4 x float> %812, i32 0, i32 0, i32 0), !dbg !58
  %814 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract390, i64 %.extract430, <4 x float> %813, i32 0, i32 0, i32 0), !dbg !58
  %815 = extractelement <4 x float> %814, i64 0, !dbg !58
  %816 = extractelement <4 x float> %814, i64 1, !dbg !58
  %817 = extractelement <4 x float> %814, i64 2, !dbg !58
  %818 = extractelement <4 x float> %814, i64 3, !dbg !58
  %819 = insertelement <4 x float> poison, float %494, i64 0, !dbg !58
  %820 = insertelement <4 x float> %819, float %495, i64 1, !dbg !58
  %821 = insertelement <4 x float> %820, float %496, i64 2, !dbg !58
  %822 = insertelement <4 x float> %821, float %497, i64 3, !dbg !58
  %823 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract384, i64 %.extract432, <4 x float> %822, i32 0, i32 0, i32 0), !dbg !58
  %824 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract386, i64 %.extract434, <4 x float> %823, i32 0, i32 0, i32 0), !dbg !58
  %825 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract388, i64 %.extract436, <4 x float> %824, i32 0, i32 0, i32 0), !dbg !58
  %826 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract390, i64 %.extract438, <4 x float> %825, i32 0, i32 0, i32 0), !dbg !58
  %827 = extractelement <4 x float> %826, i64 0, !dbg !58
  %828 = extractelement <4 x float> %826, i64 1, !dbg !58
  %829 = extractelement <4 x float> %826, i64 2, !dbg !58
  %830 = extractelement <4 x float> %826, i64 3, !dbg !58
  %831 = insertelement <4 x float> poison, float %498, i64 0, !dbg !58
  %832 = insertelement <4 x float> %831, float %499, i64 1, !dbg !58
  %833 = insertelement <4 x float> %832, float %500, i64 2, !dbg !58
  %834 = insertelement <4 x float> %833, float %501, i64 3, !dbg !58
  %835 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract384, i64 %.extract440, <4 x float> %834, i32 0, i32 0, i32 0), !dbg !58
  %836 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract386, i64 %.extract442, <4 x float> %835, i32 0, i32 0, i32 0), !dbg !58
  %837 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract388, i64 %.extract444, <4 x float> %836, i32 0, i32 0, i32 0), !dbg !58
  %838 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract390, i64 %.extract446, <4 x float> %837, i32 0, i32 0, i32 0), !dbg !58
  %839 = extractelement <4 x float> %838, i64 0, !dbg !58
  %840 = extractelement <4 x float> %838, i64 1, !dbg !58
  %841 = extractelement <4 x float> %838, i64 2, !dbg !58
  %842 = extractelement <4 x float> %838, i64 3, !dbg !58
  %843 = insertelement <4 x float> poison, float %502, i64 0, !dbg !58
  %844 = insertelement <4 x float> %843, float %503, i64 1, !dbg !58
  %845 = insertelement <4 x float> %844, float %504, i64 2, !dbg !58
  %846 = insertelement <4 x float> %845, float %505, i64 3, !dbg !58
  %847 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract392, i64 %.extract416, <4 x float> %846, i32 0, i32 0, i32 0), !dbg !58
  %848 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract394, i64 %.extract418, <4 x float> %847, i32 0, i32 0, i32 0), !dbg !58
  %849 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract396, i64 %.extract420, <4 x float> %848, i32 0, i32 0, i32 0), !dbg !58
  %850 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract398, i64 %.extract422, <4 x float> %849, i32 0, i32 0, i32 0), !dbg !58
  %851 = extractelement <4 x float> %850, i64 0, !dbg !58
  %852 = extractelement <4 x float> %850, i64 1, !dbg !58
  %853 = extractelement <4 x float> %850, i64 2, !dbg !58
  %854 = extractelement <4 x float> %850, i64 3, !dbg !58
  %855 = insertelement <4 x float> poison, float %506, i64 0, !dbg !58
  %856 = insertelement <4 x float> %855, float %507, i64 1, !dbg !58
  %857 = insertelement <4 x float> %856, float %508, i64 2, !dbg !58
  %858 = insertelement <4 x float> %857, float %509, i64 3, !dbg !58
  %859 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract392, i64 %.extract424, <4 x float> %858, i32 0, i32 0, i32 0), !dbg !58
  %860 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract394, i64 %.extract426, <4 x float> %859, i32 0, i32 0, i32 0), !dbg !58
  %861 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract396, i64 %.extract428, <4 x float> %860, i32 0, i32 0, i32 0), !dbg !58
  %862 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract398, i64 %.extract430, <4 x float> %861, i32 0, i32 0, i32 0), !dbg !58
  %863 = extractelement <4 x float> %862, i64 0, !dbg !58
  %864 = extractelement <4 x float> %862, i64 1, !dbg !58
  %865 = extractelement <4 x float> %862, i64 2, !dbg !58
  %866 = extractelement <4 x float> %862, i64 3, !dbg !58
  %867 = insertelement <4 x float> poison, float %510, i64 0, !dbg !58
  %868 = insertelement <4 x float> %867, float %511, i64 1, !dbg !58
  %869 = insertelement <4 x float> %868, float %512, i64 2, !dbg !58
  %870 = insertelement <4 x float> %869, float %513, i64 3, !dbg !58
  %871 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract392, i64 %.extract432, <4 x float> %870, i32 0, i32 0, i32 0), !dbg !58
  %872 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract394, i64 %.extract434, <4 x float> %871, i32 0, i32 0, i32 0), !dbg !58
  %873 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract396, i64 %.extract436, <4 x float> %872, i32 0, i32 0, i32 0), !dbg !58
  %874 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract398, i64 %.extract438, <4 x float> %873, i32 0, i32 0, i32 0), !dbg !58
  %875 = extractelement <4 x float> %874, i64 0, !dbg !58
  %876 = extractelement <4 x float> %874, i64 1, !dbg !58
  %877 = extractelement <4 x float> %874, i64 2, !dbg !58
  %878 = extractelement <4 x float> %874, i64 3, !dbg !58
  %879 = insertelement <4 x float> poison, float %514, i64 0, !dbg !58
  %880 = insertelement <4 x float> %879, float %515, i64 1, !dbg !58
  %881 = insertelement <4 x float> %880, float %516, i64 2, !dbg !58
  %882 = insertelement <4 x float> %881, float %517, i64 3, !dbg !58
  %883 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract392, i64 %.extract440, <4 x float> %882, i32 0, i32 0, i32 0), !dbg !58
  %884 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract394, i64 %.extract442, <4 x float> %883, i32 0, i32 0, i32 0), !dbg !58
  %885 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract396, i64 %.extract444, <4 x float> %884, i32 0, i32 0, i32 0), !dbg !58
  %886 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract398, i64 %.extract446, <4 x float> %885, i32 0, i32 0, i32 0), !dbg !58
  %887 = extractelement <4 x float> %886, i64 0, !dbg !58
  %888 = extractelement <4 x float> %886, i64 1, !dbg !58
  %889 = extractelement <4 x float> %886, i64 2, !dbg !58
  %890 = extractelement <4 x float> %886, i64 3, !dbg !58
  %891 = insertelement <4 x float> poison, float %518, i64 0, !dbg !58
  %892 = insertelement <4 x float> %891, float %519, i64 1, !dbg !58
  %893 = insertelement <4 x float> %892, float %520, i64 2, !dbg !58
  %894 = insertelement <4 x float> %893, float %521, i64 3, !dbg !58
  %895 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract400, i64 %.extract416, <4 x float> %894, i32 0, i32 0, i32 0), !dbg !58
  %896 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract402, i64 %.extract418, <4 x float> %895, i32 0, i32 0, i32 0), !dbg !58
  %897 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract404, i64 %.extract420, <4 x float> %896, i32 0, i32 0, i32 0), !dbg !58
  %898 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract406, i64 %.extract422, <4 x float> %897, i32 0, i32 0, i32 0), !dbg !58
  %899 = extractelement <4 x float> %898, i64 0, !dbg !58
  %900 = extractelement <4 x float> %898, i64 1, !dbg !58
  %901 = extractelement <4 x float> %898, i64 2, !dbg !58
  %902 = extractelement <4 x float> %898, i64 3, !dbg !58
  %903 = insertelement <4 x float> poison, float %522, i64 0, !dbg !58
  %904 = insertelement <4 x float> %903, float %523, i64 1, !dbg !58
  %905 = insertelement <4 x float> %904, float %524, i64 2, !dbg !58
  %906 = insertelement <4 x float> %905, float %525, i64 3, !dbg !58
  %907 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract400, i64 %.extract424, <4 x float> %906, i32 0, i32 0, i32 0), !dbg !58
  %908 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract402, i64 %.extract426, <4 x float> %907, i32 0, i32 0, i32 0), !dbg !58
  %909 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract404, i64 %.extract428, <4 x float> %908, i32 0, i32 0, i32 0), !dbg !58
  %910 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract406, i64 %.extract430, <4 x float> %909, i32 0, i32 0, i32 0), !dbg !58
  %911 = extractelement <4 x float> %910, i64 0, !dbg !58
  %912 = extractelement <4 x float> %910, i64 1, !dbg !58
  %913 = extractelement <4 x float> %910, i64 2, !dbg !58
  %914 = extractelement <4 x float> %910, i64 3, !dbg !58
  %915 = insertelement <4 x float> poison, float %526, i64 0, !dbg !58
  %916 = insertelement <4 x float> %915, float %527, i64 1, !dbg !58
  %917 = insertelement <4 x float> %916, float %528, i64 2, !dbg !58
  %918 = insertelement <4 x float> %917, float %529, i64 3, !dbg !58
  %919 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract400, i64 %.extract432, <4 x float> %918, i32 0, i32 0, i32 0), !dbg !58
  %920 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract402, i64 %.extract434, <4 x float> %919, i32 0, i32 0, i32 0), !dbg !58
  %921 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract404, i64 %.extract436, <4 x float> %920, i32 0, i32 0, i32 0), !dbg !58
  %922 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract406, i64 %.extract438, <4 x float> %921, i32 0, i32 0, i32 0), !dbg !58
  %923 = extractelement <4 x float> %922, i64 0, !dbg !58
  %924 = extractelement <4 x float> %922, i64 1, !dbg !58
  %925 = extractelement <4 x float> %922, i64 2, !dbg !58
  %926 = extractelement <4 x float> %922, i64 3, !dbg !58
  %927 = insertelement <4 x float> poison, float %530, i64 0, !dbg !58
  %928 = insertelement <4 x float> %927, float %531, i64 1, !dbg !58
  %929 = insertelement <4 x float> %928, float %532, i64 2, !dbg !58
  %930 = insertelement <4 x float> %929, float %533, i64 3, !dbg !58
  %931 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract400, i64 %.extract440, <4 x float> %930, i32 0, i32 0, i32 0), !dbg !58
  %932 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract402, i64 %.extract442, <4 x float> %931, i32 0, i32 0, i32 0), !dbg !58
  %933 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract404, i64 %.extract444, <4 x float> %932, i32 0, i32 0, i32 0), !dbg !58
  %934 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract406, i64 %.extract446, <4 x float> %933, i32 0, i32 0, i32 0), !dbg !58
  %935 = extractelement <4 x float> %934, i64 0, !dbg !58
  %936 = extractelement <4 x float> %934, i64 1, !dbg !58
  %937 = extractelement <4 x float> %934, i64 2, !dbg !58
  %938 = extractelement <4 x float> %934, i64 3, !dbg !58
  %939 = insertelement <4 x float> poison, float %534, i64 0, !dbg !58
  %940 = insertelement <4 x float> %939, float %535, i64 1, !dbg !58
  %941 = insertelement <4 x float> %940, float %536, i64 2, !dbg !58
  %942 = insertelement <4 x float> %941, float %537, i64 3, !dbg !58
  %943 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract408, i64 %.extract416, <4 x float> %942, i32 0, i32 0, i32 0), !dbg !58
  %944 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract410, i64 %.extract418, <4 x float> %943, i32 0, i32 0, i32 0), !dbg !58
  %945 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract412, i64 %.extract420, <4 x float> %944, i32 0, i32 0, i32 0), !dbg !58
  %946 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract414, i64 %.extract422, <4 x float> %945, i32 0, i32 0, i32 0), !dbg !58
  %947 = extractelement <4 x float> %946, i64 0, !dbg !58
  %948 = extractelement <4 x float> %946, i64 1, !dbg !58
  %949 = extractelement <4 x float> %946, i64 2, !dbg !58
  %950 = extractelement <4 x float> %946, i64 3, !dbg !58
  %951 = insertelement <4 x float> poison, float %538, i64 0, !dbg !58
  %952 = insertelement <4 x float> %951, float %539, i64 1, !dbg !58
  %953 = insertelement <4 x float> %952, float %540, i64 2, !dbg !58
  %954 = insertelement <4 x float> %953, float %541, i64 3, !dbg !58
  %955 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract408, i64 %.extract424, <4 x float> %954, i32 0, i32 0, i32 0), !dbg !58
  %956 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract410, i64 %.extract426, <4 x float> %955, i32 0, i32 0, i32 0), !dbg !58
  %957 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract412, i64 %.extract428, <4 x float> %956, i32 0, i32 0, i32 0), !dbg !58
  %958 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract414, i64 %.extract430, <4 x float> %957, i32 0, i32 0, i32 0), !dbg !58
  %959 = extractelement <4 x float> %958, i64 0, !dbg !58
  %960 = extractelement <4 x float> %958, i64 1, !dbg !58
  %961 = extractelement <4 x float> %958, i64 2, !dbg !58
  %962 = extractelement <4 x float> %958, i64 3, !dbg !58
  %963 = insertelement <4 x float> poison, float %542, i64 0, !dbg !58
  %964 = insertelement <4 x float> %963, float %543, i64 1, !dbg !58
  %965 = insertelement <4 x float> %964, float %544, i64 2, !dbg !58
  %966 = insertelement <4 x float> %965, float %545, i64 3, !dbg !58
  %967 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract408, i64 %.extract432, <4 x float> %966, i32 0, i32 0, i32 0), !dbg !58
  %968 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract410, i64 %.extract434, <4 x float> %967, i32 0, i32 0, i32 0), !dbg !58
  %969 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract412, i64 %.extract436, <4 x float> %968, i32 0, i32 0, i32 0), !dbg !58
  %970 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract414, i64 %.extract438, <4 x float> %969, i32 0, i32 0, i32 0), !dbg !58
  %971 = extractelement <4 x float> %970, i64 0, !dbg !58
  %972 = extractelement <4 x float> %970, i64 1, !dbg !58
  %973 = extractelement <4 x float> %970, i64 2, !dbg !58
  %974 = extractelement <4 x float> %970, i64 3, !dbg !58
  %975 = insertelement <4 x float> poison, float %546, i64 0, !dbg !58
  %976 = insertelement <4 x float> %975, float %547, i64 1, !dbg !58
  %977 = insertelement <4 x float> %976, float %548, i64 2, !dbg !58
  %978 = insertelement <4 x float> %977, float %549, i64 3, !dbg !58
  %979 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract408, i64 %.extract440, <4 x float> %978, i32 0, i32 0, i32 0), !dbg !58
  %980 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract410, i64 %.extract442, <4 x float> %979, i32 0, i32 0, i32 0), !dbg !58
  %981 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract412, i64 %.extract444, <4 x float> %980, i32 0, i32 0, i32 0), !dbg !58
  %982 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract414, i64 %.extract446, <4 x float> %981, i32 0, i32 0, i32 0), !dbg !58
  %983 = extractelement <4 x float> %982, i64 0, !dbg !58
  %984 = extractelement <4 x float> %982, i64 1, !dbg !58
  %985 = extractelement <4 x float> %982, i64 2, !dbg !58
  %986 = extractelement <4 x float> %982, i64 3, !dbg !58
  fence syncscope("workgroup") release, !dbg !53
  tail call void @llvm.amdgcn.s.barrier(), !dbg !53
  fence syncscope("workgroup") acquire, !dbg !53
  store <16 x i8> %555, ptr addrspace(3) %315, align 16, !dbg !53
  store <16 x i8> %560, ptr addrspace(3) %318, align 16, !dbg !53
  store <16 x i8> %565, ptr addrspace(3) %321, align 16, !dbg !53
  store <16 x i8> %570, ptr addrspace(3) %324, align 16, !dbg !53
  store <16 x i8> %572, ptr addrspace(3) %333, align 16, !dbg !54
  store <16 x i8> %574, ptr addrspace(3) %334, align 16, !dbg !54
  store <16 x i8> %576, ptr addrspace(3) %335, align 16, !dbg !54
  store <16 x i8> %578, ptr addrspace(3) %336, align 16, !dbg !54
  %987 = add nuw nsw i32 %550, 1, !dbg !55
  %988 = icmp slt i32 %987, %337, !dbg !55
  br i1 %988, label %421, label %._crit_edge, !dbg !55

._crit_edge:                                      ; preds = %569, %.._crit_edge_crit_edge
  %.pre-phi585 = phi i64 [ %.pre584, %.._crit_edge_crit_edge ], [ %419, %569 ], !dbg !54
  %.pre-phi583 = phi i64 [ %.pre582, %.._crit_edge_crit_edge ], [ %417, %569 ], !dbg !54
  %.pre-phi581 = phi i64 [ %.pre580, %.._crit_edge_crit_edge ], [ %415, %569 ], !dbg !54
  %.pre-phi579 = phi i64 [ %.pre578, %.._crit_edge_crit_edge ], [ %413, %569 ], !dbg !54
  %.pre-phi577 = phi i64 [ %.pre576, %.._crit_edge_crit_edge ], [ %411, %569 ], !dbg !54
  %.pre-phi575 = phi i64 [ %.pre574, %.._crit_edge_crit_edge ], [ %409, %569 ], !dbg !54
  %.pre-phi573 = phi i64 [ %.pre572, %.._crit_edge_crit_edge ], [ %407, %569 ], !dbg !54
  %.pre-phi571 = phi i64 [ %.pre570, %.._crit_edge_crit_edge ], [ %405, %569 ], !dbg !54
  %.pre-phi551 = phi i64 [ %.pre550, %.._crit_edge_crit_edge ], [ %394, %569 ], !dbg !53
  %.pre-phi549 = phi i64 [ %.pre548, %.._crit_edge_crit_edge ], [ %392, %569 ], !dbg !53
  %.pre-phi547 = phi i64 [ %.pre546, %.._crit_edge_crit_edge ], [ %390, %569 ], !dbg !53
  %.pre-phi545 = phi i64 [ %.pre544, %.._crit_edge_crit_edge ], [ %388, %569 ], !dbg !53
  %.pre-phi543 = phi i64 [ %.pre542, %.._crit_edge_crit_edge ], [ %386, %569 ], !dbg !53
  %.pre-phi541 = phi i64 [ %.pre540, %.._crit_edge_crit_edge ], [ %384, %569 ], !dbg !53
  %.pre-phi539 = phi i64 [ %.pre538, %.._crit_edge_crit_edge ], [ %382, %569 ], !dbg !53
  %.pre-phi537 = phi i64 [ %.pre536, %.._crit_edge_crit_edge ], [ %380, %569 ], !dbg !53
  %.pre-phi535 = phi i64 [ %.pre534, %.._crit_edge_crit_edge ], [ %378, %569 ], !dbg !53
  %.pre-phi533 = phi i64 [ %.pre532, %.._crit_edge_crit_edge ], [ %376, %569 ], !dbg !53
  %.pre-phi531 = phi i64 [ %.pre530, %.._crit_edge_crit_edge ], [ %374, %569 ], !dbg !53
  %.pre-phi529 = phi i64 [ %.pre528, %.._crit_edge_crit_edge ], [ %372, %569 ], !dbg !53
  %.pre-phi527 = phi i64 [ %.pre526, %.._crit_edge_crit_edge ], [ %370, %569 ], !dbg !53
  %.pre-phi525 = phi i64 [ %.pre524, %.._crit_edge_crit_edge ], [ %368, %569 ], !dbg !53
  %.pre-phi523 = phi i64 [ %.pre522, %.._crit_edge_crit_edge ], [ %366, %569 ], !dbg !53
  %989 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %611, %569 ]
  %990 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %612, %569 ]
  %991 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %613, %569 ]
  %992 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %614, %569 ]
  %993 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %623, %569 ]
  %994 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %624, %569 ]
  %995 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %625, %569 ]
  %996 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %626, %569 ]
  %997 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %635, %569 ]
  %998 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %636, %569 ]
  %999 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %637, %569 ]
  %1000 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %638, %569 ]
  %1001 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %647, %569 ]
  %1002 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %648, %569 ]
  %1003 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %649, %569 ]
  %1004 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %650, %569 ]
  %1005 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %659, %569 ]
  %1006 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %660, %569 ]
  %1007 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %661, %569 ]
  %1008 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %662, %569 ]
  %1009 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %671, %569 ]
  %1010 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %672, %569 ]
  %1011 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %673, %569 ]
  %1012 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %674, %569 ]
  %1013 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %683, %569 ]
  %1014 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %684, %569 ]
  %1015 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %685, %569 ]
  %1016 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %686, %569 ]
  %1017 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %695, %569 ]
  %1018 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %696, %569 ]
  %1019 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %697, %569 ]
  %1020 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %698, %569 ]
  %1021 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %707, %569 ]
  %1022 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %708, %569 ]
  %1023 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %709, %569 ]
  %1024 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %710, %569 ]
  %1025 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %719, %569 ]
  %1026 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %720, %569 ]
  %1027 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %721, %569 ]
  %1028 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %722, %569 ]
  %1029 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %731, %569 ]
  %1030 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %732, %569 ]
  %1031 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %733, %569 ]
  %1032 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %734, %569 ]
  %1033 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %743, %569 ]
  %1034 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %744, %569 ]
  %1035 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %745, %569 ]
  %1036 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %746, %569 ]
  %1037 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %755, %569 ]
  %1038 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %756, %569 ]
  %1039 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %757, %569 ]
  %1040 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %758, %569 ]
  %1041 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %767, %569 ]
  %1042 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %768, %569 ]
  %1043 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %769, %569 ]
  %1044 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %770, %569 ]
  %1045 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %779, %569 ]
  %1046 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %780, %569 ]
  %1047 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %781, %569 ]
  %1048 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %782, %569 ]
  %1049 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %791, %569 ]
  %1050 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %792, %569 ]
  %1051 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %793, %569 ]
  %1052 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %794, %569 ]
  %1053 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %803, %569 ]
  %1054 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %804, %569 ]
  %1055 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %805, %569 ]
  %1056 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %806, %569 ]
  %1057 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %815, %569 ]
  %1058 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %816, %569 ]
  %1059 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %817, %569 ]
  %1060 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %818, %569 ]
  %1061 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %827, %569 ]
  %1062 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %828, %569 ]
  %1063 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %829, %569 ]
  %1064 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %830, %569 ]
  %1065 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %839, %569 ]
  %1066 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %840, %569 ]
  %1067 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %841, %569 ]
  %1068 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %842, %569 ]
  %1069 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %851, %569 ]
  %1070 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %852, %569 ]
  %1071 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %853, %569 ]
  %1072 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %854, %569 ]
  %1073 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %863, %569 ]
  %1074 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %864, %569 ]
  %1075 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %865, %569 ]
  %1076 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %866, %569 ]
  %1077 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %875, %569 ]
  %1078 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %876, %569 ]
  %1079 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %877, %569 ]
  %1080 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %878, %569 ]
  %1081 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %887, %569 ]
  %1082 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %888, %569 ]
  %1083 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %889, %569 ]
  %1084 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %890, %569 ]
  %1085 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %899, %569 ]
  %1086 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %900, %569 ]
  %1087 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %901, %569 ]
  %1088 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %902, %569 ]
  %1089 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %911, %569 ]
  %1090 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %912, %569 ]
  %1091 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %913, %569 ]
  %1092 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %914, %569 ]
  %1093 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %923, %569 ]
  %1094 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %924, %569 ]
  %1095 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %925, %569 ]
  %1096 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %926, %569 ]
  %1097 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %935, %569 ]
  %1098 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %936, %569 ]
  %1099 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %937, %569 ]
  %1100 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %938, %569 ]
  %1101 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %947, %569 ]
  %1102 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %948, %569 ]
  %1103 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %949, %569 ]
  %1104 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %950, %569 ]
  %1105 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %959, %569 ]
  %1106 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %960, %569 ]
  %1107 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %961, %569 ]
  %1108 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %962, %569 ]
  %1109 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %971, %569 ]
  %1110 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %972, %569 ]
  %1111 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %973, %569 ]
  %1112 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %974, %569 ]
  %1113 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %983, %569 ]
  %1114 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %984, %569 ]
  %1115 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %985, %569 ]
  %1116 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %986, %569 ]
  fence syncscope("workgroup") release, !dbg !53
  tail call void @llvm.amdgcn.s.barrier(), !dbg !53
  fence syncscope("workgroup") acquire, !dbg !53
  %1117 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %364, !dbg !53
  %1118 = load <2 x i64>, ptr addrspace(3) %1117, align 16, !dbg !53
  %1119 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi523, !dbg !53
  %1120 = load <2 x i64>, ptr addrspace(3) %1119, align 16, !dbg !53
  %1121 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi525, !dbg !53
  %1122 = load <2 x i64>, ptr addrspace(3) %1121, align 16, !dbg !53
  %1123 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi527, !dbg !53
  %1124 = load <2 x i64>, ptr addrspace(3) %1123, align 16, !dbg !53
  %1125 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi529, !dbg !53
  %1126 = load <2 x i64>, ptr addrspace(3) %1125, align 16, !dbg !53
  %1127 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi531, !dbg !53
  %1128 = load <2 x i64>, ptr addrspace(3) %1127, align 16, !dbg !53
  %1129 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi533, !dbg !53
  %1130 = load <2 x i64>, ptr addrspace(3) %1129, align 16, !dbg !53
  %1131 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi535, !dbg !53
  %1132 = load <2 x i64>, ptr addrspace(3) %1131, align 16, !dbg !53
  %1133 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi537, !dbg !53
  %1134 = load <2 x i64>, ptr addrspace(3) %1133, align 16, !dbg !53
  %1135 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi539, !dbg !53
  %1136 = load <2 x i64>, ptr addrspace(3) %1135, align 16, !dbg !53
  %1137 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi541, !dbg !53
  %1138 = load <2 x i64>, ptr addrspace(3) %1137, align 16, !dbg !53
  %1139 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi543, !dbg !53
  %1140 = load <2 x i64>, ptr addrspace(3) %1139, align 16, !dbg !53
  %1141 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi545, !dbg !53
  %1142 = load <2 x i64>, ptr addrspace(3) %1141, align 16, !dbg !53
  %1143 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi547, !dbg !53
  %1144 = load <2 x i64>, ptr addrspace(3) %1143, align 16, !dbg !53
  %1145 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi549, !dbg !53
  %1146 = load <2 x i64>, ptr addrspace(3) %1145, align 16, !dbg !53
  %1147 = getelementptr i8, ptr addrspace(3) @global_smem, i64 %.pre-phi551, !dbg !53
  %1148 = load <2 x i64>, ptr addrspace(3) %1147, align 16, !dbg !53
  %1149 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %.pre-phi571, !dbg !54
  %1150 = load <2 x i64>, ptr addrspace(3) %1149, align 16, !dbg !54
  %1151 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %.pre-phi573, !dbg !54
  %1152 = load <2 x i64>, ptr addrspace(3) %1151, align 16, !dbg !54
  %1153 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %.pre-phi575, !dbg !54
  %1154 = load <2 x i64>, ptr addrspace(3) %1153, align 16, !dbg !54
  %1155 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %.pre-phi577, !dbg !54
  %1156 = load <2 x i64>, ptr addrspace(3) %1155, align 16, !dbg !54
  %1157 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %.pre-phi579, !dbg !54
  %1158 = load <2 x i64>, ptr addrspace(3) %1157, align 16, !dbg !54
  %1159 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %.pre-phi581, !dbg !54
  %1160 = load <2 x i64>, ptr addrspace(3) %1159, align 16, !dbg !54
  %1161 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %.pre-phi583, !dbg !54
  %1162 = load <2 x i64>, ptr addrspace(3) %1161, align 16, !dbg !54
  %1163 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %.pre-phi585, !dbg !54
  %1164 = load <2 x i64>, ptr addrspace(3) %1163, align 16, !dbg !54
  %.extract = extractelement <2 x i64> %1118, i64 0, !dbg !58
  %.extract258 = extractelement <2 x i64> %1118, i64 1, !dbg !58
  %.extract260 = extractelement <2 x i64> %1120, i64 0, !dbg !58
  %.extract262 = extractelement <2 x i64> %1120, i64 1, !dbg !58
  %.extract264 = extractelement <2 x i64> %1122, i64 0, !dbg !58
  %.extract266 = extractelement <2 x i64> %1122, i64 1, !dbg !58
  %.extract268 = extractelement <2 x i64> %1124, i64 0, !dbg !58
  %.extract270 = extractelement <2 x i64> %1124, i64 1, !dbg !58
  %.extract272 = extractelement <2 x i64> %1126, i64 0, !dbg !58
  %.extract274 = extractelement <2 x i64> %1126, i64 1, !dbg !58
  %.extract276 = extractelement <2 x i64> %1128, i64 0, !dbg !58
  %.extract278 = extractelement <2 x i64> %1128, i64 1, !dbg !58
  %.extract280 = extractelement <2 x i64> %1130, i64 0, !dbg !58
  %.extract282 = extractelement <2 x i64> %1130, i64 1, !dbg !58
  %.extract284 = extractelement <2 x i64> %1132, i64 0, !dbg !58
  %.extract286 = extractelement <2 x i64> %1132, i64 1, !dbg !58
  %.extract288 = extractelement <2 x i64> %1134, i64 0, !dbg !58
  %.extract290 = extractelement <2 x i64> %1134, i64 1, !dbg !58
  %.extract292 = extractelement <2 x i64> %1136, i64 0, !dbg !58
  %.extract294 = extractelement <2 x i64> %1136, i64 1, !dbg !58
  %.extract296 = extractelement <2 x i64> %1138, i64 0, !dbg !58
  %.extract298 = extractelement <2 x i64> %1138, i64 1, !dbg !58
  %.extract300 = extractelement <2 x i64> %1140, i64 0, !dbg !58
  %.extract302 = extractelement <2 x i64> %1140, i64 1, !dbg !58
  %.extract304 = extractelement <2 x i64> %1142, i64 0, !dbg !58
  %.extract306 = extractelement <2 x i64> %1142, i64 1, !dbg !58
  %.extract308 = extractelement <2 x i64> %1144, i64 0, !dbg !58
  %.extract310 = extractelement <2 x i64> %1144, i64 1, !dbg !58
  %.extract312 = extractelement <2 x i64> %1146, i64 0, !dbg !58
  %.extract314 = extractelement <2 x i64> %1146, i64 1, !dbg !58
  %.extract316 = extractelement <2 x i64> %1148, i64 0, !dbg !58
  %.extract318 = extractelement <2 x i64> %1148, i64 1, !dbg !58
  %.extract320 = extractelement <2 x i64> %1150, i64 0, !dbg !58
  %.extract322 = extractelement <2 x i64> %1150, i64 1, !dbg !58
  %.extract324 = extractelement <2 x i64> %1152, i64 0, !dbg !58
  %.extract326 = extractelement <2 x i64> %1152, i64 1, !dbg !58
  %.extract328 = extractelement <2 x i64> %1154, i64 0, !dbg !58
  %.extract330 = extractelement <2 x i64> %1154, i64 1, !dbg !58
  %.extract332 = extractelement <2 x i64> %1156, i64 0, !dbg !58
  %.extract334 = extractelement <2 x i64> %1156, i64 1, !dbg !58
  %.extract336 = extractelement <2 x i64> %1158, i64 0, !dbg !58
  %.extract338 = extractelement <2 x i64> %1158, i64 1, !dbg !58
  %.extract340 = extractelement <2 x i64> %1160, i64 0, !dbg !58
  %.extract342 = extractelement <2 x i64> %1160, i64 1, !dbg !58
  %.extract344 = extractelement <2 x i64> %1162, i64 0, !dbg !58
  %.extract346 = extractelement <2 x i64> %1162, i64 1, !dbg !58
  %.extract348 = extractelement <2 x i64> %1164, i64 0, !dbg !58
  %.extract350 = extractelement <2 x i64> %1164, i64 1, !dbg !58
  %1165 = insertelement <4 x float> poison, float %989, i64 0, !dbg !58
  %1166 = insertelement <4 x float> %1165, float %990, i64 1, !dbg !58
  %1167 = insertelement <4 x float> %1166, float %991, i64 2, !dbg !58
  %1168 = insertelement <4 x float> %1167, float %992, i64 3, !dbg !58
  %1169 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract, i64 %.extract320, <4 x float> %1168, i32 0, i32 0, i32 0), !dbg !58
  %1170 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract258, i64 %.extract322, <4 x float> %1169, i32 0, i32 0, i32 0), !dbg !58
  %1171 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract260, i64 %.extract324, <4 x float> %1170, i32 0, i32 0, i32 0), !dbg !58
  %1172 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract262, i64 %.extract326, <4 x float> %1171, i32 0, i32 0, i32 0), !dbg !58
  %1173 = extractelement <4 x float> %1172, i64 1, !dbg !58
  %1174 = extractelement <4 x float> %1172, i64 2, !dbg !58
  %1175 = extractelement <4 x float> %1172, i64 3, !dbg !58
  %1176 = insertelement <4 x float> poison, float %993, i64 0, !dbg !58
  %1177 = insertelement <4 x float> %1176, float %994, i64 1, !dbg !58
  %1178 = insertelement <4 x float> %1177, float %995, i64 2, !dbg !58
  %1179 = insertelement <4 x float> %1178, float %996, i64 3, !dbg !58
  %1180 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract, i64 %.extract328, <4 x float> %1179, i32 0, i32 0, i32 0), !dbg !58
  %1181 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract258, i64 %.extract330, <4 x float> %1180, i32 0, i32 0, i32 0), !dbg !58
  %1182 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract260, i64 %.extract332, <4 x float> %1181, i32 0, i32 0, i32 0), !dbg !58
  %1183 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract262, i64 %.extract334, <4 x float> %1182, i32 0, i32 0, i32 0), !dbg !58
  %1184 = extractelement <4 x float> %1183, i64 0, !dbg !58
  %1185 = extractelement <4 x float> %1183, i64 1, !dbg !58
  %1186 = extractelement <4 x float> %1183, i64 2, !dbg !58
  %1187 = extractelement <4 x float> %1183, i64 3, !dbg !58
  %1188 = insertelement <4 x float> poison, float %997, i64 0, !dbg !58
  %1189 = insertelement <4 x float> %1188, float %998, i64 1, !dbg !58
  %1190 = insertelement <4 x float> %1189, float %999, i64 2, !dbg !58
  %1191 = insertelement <4 x float> %1190, float %1000, i64 3, !dbg !58
  %1192 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract, i64 %.extract336, <4 x float> %1191, i32 0, i32 0, i32 0), !dbg !58
  %1193 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract258, i64 %.extract338, <4 x float> %1192, i32 0, i32 0, i32 0), !dbg !58
  %1194 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract260, i64 %.extract340, <4 x float> %1193, i32 0, i32 0, i32 0), !dbg !58
  %1195 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract262, i64 %.extract342, <4 x float> %1194, i32 0, i32 0, i32 0), !dbg !58
  %1196 = extractelement <4 x float> %1195, i64 0, !dbg !58
  %1197 = extractelement <4 x float> %1195, i64 1, !dbg !58
  %1198 = extractelement <4 x float> %1195, i64 2, !dbg !58
  %1199 = extractelement <4 x float> %1195, i64 3, !dbg !58
  %1200 = insertelement <4 x float> poison, float %1001, i64 0, !dbg !58
  %1201 = insertelement <4 x float> %1200, float %1002, i64 1, !dbg !58
  %1202 = insertelement <4 x float> %1201, float %1003, i64 2, !dbg !58
  %1203 = insertelement <4 x float> %1202, float %1004, i64 3, !dbg !58
  %1204 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract, i64 %.extract344, <4 x float> %1203, i32 0, i32 0, i32 0), !dbg !58
  %1205 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract258, i64 %.extract346, <4 x float> %1204, i32 0, i32 0, i32 0), !dbg !58
  %1206 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract260, i64 %.extract348, <4 x float> %1205, i32 0, i32 0, i32 0), !dbg !58
  %1207 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract262, i64 %.extract350, <4 x float> %1206, i32 0, i32 0, i32 0), !dbg !58
  %1208 = extractelement <4 x float> %1207, i64 0, !dbg !58
  %1209 = extractelement <4 x float> %1207, i64 1, !dbg !58
  %1210 = extractelement <4 x float> %1207, i64 2, !dbg !58
  %1211 = extractelement <4 x float> %1207, i64 3, !dbg !58
  %1212 = insertelement <4 x float> poison, float %1005, i64 0, !dbg !58
  %1213 = insertelement <4 x float> %1212, float %1006, i64 1, !dbg !58
  %1214 = insertelement <4 x float> %1213, float %1007, i64 2, !dbg !58
  %1215 = insertelement <4 x float> %1214, float %1008, i64 3, !dbg !58
  %1216 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract264, i64 %.extract320, <4 x float> %1215, i32 0, i32 0, i32 0), !dbg !58
  %1217 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract266, i64 %.extract322, <4 x float> %1216, i32 0, i32 0, i32 0), !dbg !58
  %1218 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract268, i64 %.extract324, <4 x float> %1217, i32 0, i32 0, i32 0), !dbg !58
  %1219 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract270, i64 %.extract326, <4 x float> %1218, i32 0, i32 0, i32 0), !dbg !58
  %1220 = extractelement <4 x float> %1219, i64 0, !dbg !58
  %1221 = extractelement <4 x float> %1219, i64 1, !dbg !58
  %1222 = extractelement <4 x float> %1219, i64 2, !dbg !58
  %1223 = extractelement <4 x float> %1219, i64 3, !dbg !58
  %1224 = insertelement <4 x float> poison, float %1009, i64 0, !dbg !58
  %1225 = insertelement <4 x float> %1224, float %1010, i64 1, !dbg !58
  %1226 = insertelement <4 x float> %1225, float %1011, i64 2, !dbg !58
  %1227 = insertelement <4 x float> %1226, float %1012, i64 3, !dbg !58
  %1228 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract264, i64 %.extract328, <4 x float> %1227, i32 0, i32 0, i32 0), !dbg !58
  %1229 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract266, i64 %.extract330, <4 x float> %1228, i32 0, i32 0, i32 0), !dbg !58
  %1230 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract268, i64 %.extract332, <4 x float> %1229, i32 0, i32 0, i32 0), !dbg !58
  %1231 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract270, i64 %.extract334, <4 x float> %1230, i32 0, i32 0, i32 0), !dbg !58
  %1232 = extractelement <4 x float> %1231, i64 0, !dbg !58
  %1233 = extractelement <4 x float> %1231, i64 1, !dbg !58
  %1234 = extractelement <4 x float> %1231, i64 2, !dbg !58
  %1235 = extractelement <4 x float> %1231, i64 3, !dbg !58
  %1236 = insertelement <4 x float> poison, float %1013, i64 0, !dbg !58
  %1237 = insertelement <4 x float> %1236, float %1014, i64 1, !dbg !58
  %1238 = insertelement <4 x float> %1237, float %1015, i64 2, !dbg !58
  %1239 = insertelement <4 x float> %1238, float %1016, i64 3, !dbg !58
  %1240 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract264, i64 %.extract336, <4 x float> %1239, i32 0, i32 0, i32 0), !dbg !58
  %1241 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract266, i64 %.extract338, <4 x float> %1240, i32 0, i32 0, i32 0), !dbg !58
  %1242 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract268, i64 %.extract340, <4 x float> %1241, i32 0, i32 0, i32 0), !dbg !58
  %1243 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract270, i64 %.extract342, <4 x float> %1242, i32 0, i32 0, i32 0), !dbg !58
  %1244 = extractelement <4 x float> %1243, i64 0, !dbg !58
  %1245 = extractelement <4 x float> %1243, i64 1, !dbg !58
  %1246 = extractelement <4 x float> %1243, i64 2, !dbg !58
  %1247 = extractelement <4 x float> %1243, i64 3, !dbg !58
  %1248 = insertelement <4 x float> poison, float %1017, i64 0, !dbg !58
  %1249 = insertelement <4 x float> %1248, float %1018, i64 1, !dbg !58
  %1250 = insertelement <4 x float> %1249, float %1019, i64 2, !dbg !58
  %1251 = insertelement <4 x float> %1250, float %1020, i64 3, !dbg !58
  %1252 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract264, i64 %.extract344, <4 x float> %1251, i32 0, i32 0, i32 0), !dbg !58
  %1253 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract266, i64 %.extract346, <4 x float> %1252, i32 0, i32 0, i32 0), !dbg !58
  %1254 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract268, i64 %.extract348, <4 x float> %1253, i32 0, i32 0, i32 0), !dbg !58
  %1255 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract270, i64 %.extract350, <4 x float> %1254, i32 0, i32 0, i32 0), !dbg !58
  %1256 = extractelement <4 x float> %1255, i64 0, !dbg !58
  %1257 = extractelement <4 x float> %1255, i64 1, !dbg !58
  %1258 = extractelement <4 x float> %1255, i64 2, !dbg !58
  %1259 = extractelement <4 x float> %1255, i64 3, !dbg !58
  %1260 = insertelement <4 x float> poison, float %1021, i64 0, !dbg !58
  %1261 = insertelement <4 x float> %1260, float %1022, i64 1, !dbg !58
  %1262 = insertelement <4 x float> %1261, float %1023, i64 2, !dbg !58
  %1263 = insertelement <4 x float> %1262, float %1024, i64 3, !dbg !58
  %1264 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract272, i64 %.extract320, <4 x float> %1263, i32 0, i32 0, i32 0), !dbg !58
  %1265 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract274, i64 %.extract322, <4 x float> %1264, i32 0, i32 0, i32 0), !dbg !58
  %1266 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract276, i64 %.extract324, <4 x float> %1265, i32 0, i32 0, i32 0), !dbg !58
  %1267 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract278, i64 %.extract326, <4 x float> %1266, i32 0, i32 0, i32 0), !dbg !58
  %1268 = extractelement <4 x float> %1267, i64 0, !dbg !58
  %1269 = extractelement <4 x float> %1267, i64 1, !dbg !58
  %1270 = extractelement <4 x float> %1267, i64 2, !dbg !58
  %1271 = extractelement <4 x float> %1267, i64 3, !dbg !58
  %1272 = insertelement <4 x float> poison, float %1025, i64 0, !dbg !58
  %1273 = insertelement <4 x float> %1272, float %1026, i64 1, !dbg !58
  %1274 = insertelement <4 x float> %1273, float %1027, i64 2, !dbg !58
  %1275 = insertelement <4 x float> %1274, float %1028, i64 3, !dbg !58
  %1276 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract272, i64 %.extract328, <4 x float> %1275, i32 0, i32 0, i32 0), !dbg !58
  %1277 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract274, i64 %.extract330, <4 x float> %1276, i32 0, i32 0, i32 0), !dbg !58
  %1278 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract276, i64 %.extract332, <4 x float> %1277, i32 0, i32 0, i32 0), !dbg !58
  %1279 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract278, i64 %.extract334, <4 x float> %1278, i32 0, i32 0, i32 0), !dbg !58
  %1280 = extractelement <4 x float> %1279, i64 0, !dbg !58
  %1281 = extractelement <4 x float> %1279, i64 1, !dbg !58
  %1282 = extractelement <4 x float> %1279, i64 2, !dbg !58
  %1283 = extractelement <4 x float> %1279, i64 3, !dbg !58
  %1284 = insertelement <4 x float> poison, float %1029, i64 0, !dbg !58
  %1285 = insertelement <4 x float> %1284, float %1030, i64 1, !dbg !58
  %1286 = insertelement <4 x float> %1285, float %1031, i64 2, !dbg !58
  %1287 = insertelement <4 x float> %1286, float %1032, i64 3, !dbg !58
  %1288 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract272, i64 %.extract336, <4 x float> %1287, i32 0, i32 0, i32 0), !dbg !58
  %1289 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract274, i64 %.extract338, <4 x float> %1288, i32 0, i32 0, i32 0), !dbg !58
  %1290 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract276, i64 %.extract340, <4 x float> %1289, i32 0, i32 0, i32 0), !dbg !58
  %1291 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract278, i64 %.extract342, <4 x float> %1290, i32 0, i32 0, i32 0), !dbg !58
  %1292 = extractelement <4 x float> %1291, i64 0, !dbg !58
  %1293 = extractelement <4 x float> %1291, i64 1, !dbg !58
  %1294 = extractelement <4 x float> %1291, i64 2, !dbg !58
  %1295 = extractelement <4 x float> %1291, i64 3, !dbg !58
  %1296 = insertelement <4 x float> poison, float %1033, i64 0, !dbg !58
  %1297 = insertelement <4 x float> %1296, float %1034, i64 1, !dbg !58
  %1298 = insertelement <4 x float> %1297, float %1035, i64 2, !dbg !58
  %1299 = insertelement <4 x float> %1298, float %1036, i64 3, !dbg !58
  %1300 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract272, i64 %.extract344, <4 x float> %1299, i32 0, i32 0, i32 0), !dbg !58
  %1301 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract274, i64 %.extract346, <4 x float> %1300, i32 0, i32 0, i32 0), !dbg !58
  %1302 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract276, i64 %.extract348, <4 x float> %1301, i32 0, i32 0, i32 0), !dbg !58
  %1303 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract278, i64 %.extract350, <4 x float> %1302, i32 0, i32 0, i32 0), !dbg !58
  %1304 = extractelement <4 x float> %1303, i64 0, !dbg !58
  %1305 = extractelement <4 x float> %1303, i64 1, !dbg !58
  %1306 = extractelement <4 x float> %1303, i64 2, !dbg !58
  %1307 = extractelement <4 x float> %1303, i64 3, !dbg !58
  %1308 = insertelement <4 x float> poison, float %1037, i64 0, !dbg !58
  %1309 = insertelement <4 x float> %1308, float %1038, i64 1, !dbg !58
  %1310 = insertelement <4 x float> %1309, float %1039, i64 2, !dbg !58
  %1311 = insertelement <4 x float> %1310, float %1040, i64 3, !dbg !58
  %1312 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract280, i64 %.extract320, <4 x float> %1311, i32 0, i32 0, i32 0), !dbg !58
  %1313 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract282, i64 %.extract322, <4 x float> %1312, i32 0, i32 0, i32 0), !dbg !58
  %1314 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract284, i64 %.extract324, <4 x float> %1313, i32 0, i32 0, i32 0), !dbg !58
  %1315 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract286, i64 %.extract326, <4 x float> %1314, i32 0, i32 0, i32 0), !dbg !58
  %1316 = extractelement <4 x float> %1315, i64 0, !dbg !58
  %1317 = extractelement <4 x float> %1315, i64 1, !dbg !58
  %1318 = extractelement <4 x float> %1315, i64 2, !dbg !58
  %1319 = extractelement <4 x float> %1315, i64 3, !dbg !58
  %1320 = insertelement <4 x float> poison, float %1041, i64 0, !dbg !58
  %1321 = insertelement <4 x float> %1320, float %1042, i64 1, !dbg !58
  %1322 = insertelement <4 x float> %1321, float %1043, i64 2, !dbg !58
  %1323 = insertelement <4 x float> %1322, float %1044, i64 3, !dbg !58
  %1324 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract280, i64 %.extract328, <4 x float> %1323, i32 0, i32 0, i32 0), !dbg !58
  %1325 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract282, i64 %.extract330, <4 x float> %1324, i32 0, i32 0, i32 0), !dbg !58
  %1326 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract284, i64 %.extract332, <4 x float> %1325, i32 0, i32 0, i32 0), !dbg !58
  %1327 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract286, i64 %.extract334, <4 x float> %1326, i32 0, i32 0, i32 0), !dbg !58
  %1328 = extractelement <4 x float> %1327, i64 0, !dbg !58
  %1329 = extractelement <4 x float> %1327, i64 1, !dbg !58
  %1330 = extractelement <4 x float> %1327, i64 2, !dbg !58
  %1331 = extractelement <4 x float> %1327, i64 3, !dbg !58
  %1332 = insertelement <4 x float> poison, float %1045, i64 0, !dbg !58
  %1333 = insertelement <4 x float> %1332, float %1046, i64 1, !dbg !58
  %1334 = insertelement <4 x float> %1333, float %1047, i64 2, !dbg !58
  %1335 = insertelement <4 x float> %1334, float %1048, i64 3, !dbg !58
  %1336 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract280, i64 %.extract336, <4 x float> %1335, i32 0, i32 0, i32 0), !dbg !58
  %1337 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract282, i64 %.extract338, <4 x float> %1336, i32 0, i32 0, i32 0), !dbg !58
  %1338 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract284, i64 %.extract340, <4 x float> %1337, i32 0, i32 0, i32 0), !dbg !58
  %1339 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract286, i64 %.extract342, <4 x float> %1338, i32 0, i32 0, i32 0), !dbg !58
  %1340 = extractelement <4 x float> %1339, i64 0, !dbg !58
  %1341 = extractelement <4 x float> %1339, i64 1, !dbg !58
  %1342 = extractelement <4 x float> %1339, i64 2, !dbg !58
  %1343 = extractelement <4 x float> %1339, i64 3, !dbg !58
  %1344 = insertelement <4 x float> poison, float %1049, i64 0, !dbg !58
  %1345 = insertelement <4 x float> %1344, float %1050, i64 1, !dbg !58
  %1346 = insertelement <4 x float> %1345, float %1051, i64 2, !dbg !58
  %1347 = insertelement <4 x float> %1346, float %1052, i64 3, !dbg !58
  %1348 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract280, i64 %.extract344, <4 x float> %1347, i32 0, i32 0, i32 0), !dbg !58
  %1349 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract282, i64 %.extract346, <4 x float> %1348, i32 0, i32 0, i32 0), !dbg !58
  %1350 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract284, i64 %.extract348, <4 x float> %1349, i32 0, i32 0, i32 0), !dbg !58
  %1351 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract286, i64 %.extract350, <4 x float> %1350, i32 0, i32 0, i32 0), !dbg !58
  %1352 = extractelement <4 x float> %1351, i64 0, !dbg !58
  %1353 = extractelement <4 x float> %1351, i64 1, !dbg !58
  %1354 = extractelement <4 x float> %1351, i64 2, !dbg !58
  %1355 = extractelement <4 x float> %1351, i64 3, !dbg !58
  %1356 = insertelement <4 x float> poison, float %1053, i64 0, !dbg !58
  %1357 = insertelement <4 x float> %1356, float %1054, i64 1, !dbg !58
  %1358 = insertelement <4 x float> %1357, float %1055, i64 2, !dbg !58
  %1359 = insertelement <4 x float> %1358, float %1056, i64 3, !dbg !58
  %1360 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract288, i64 %.extract320, <4 x float> %1359, i32 0, i32 0, i32 0), !dbg !58
  %1361 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract290, i64 %.extract322, <4 x float> %1360, i32 0, i32 0, i32 0), !dbg !58
  %1362 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract292, i64 %.extract324, <4 x float> %1361, i32 0, i32 0, i32 0), !dbg !58
  %1363 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract294, i64 %.extract326, <4 x float> %1362, i32 0, i32 0, i32 0), !dbg !58
  %1364 = extractelement <4 x float> %1363, i64 0, !dbg !58
  %1365 = extractelement <4 x float> %1363, i64 1, !dbg !58
  %1366 = extractelement <4 x float> %1363, i64 2, !dbg !58
  %1367 = extractelement <4 x float> %1363, i64 3, !dbg !58
  %1368 = insertelement <4 x float> poison, float %1057, i64 0, !dbg !58
  %1369 = insertelement <4 x float> %1368, float %1058, i64 1, !dbg !58
  %1370 = insertelement <4 x float> %1369, float %1059, i64 2, !dbg !58
  %1371 = insertelement <4 x float> %1370, float %1060, i64 3, !dbg !58
  %1372 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract288, i64 %.extract328, <4 x float> %1371, i32 0, i32 0, i32 0), !dbg !58
  %1373 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract290, i64 %.extract330, <4 x float> %1372, i32 0, i32 0, i32 0), !dbg !58
  %1374 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract292, i64 %.extract332, <4 x float> %1373, i32 0, i32 0, i32 0), !dbg !58
  %1375 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract294, i64 %.extract334, <4 x float> %1374, i32 0, i32 0, i32 0), !dbg !58
  %1376 = extractelement <4 x float> %1375, i64 0, !dbg !58
  %1377 = extractelement <4 x float> %1375, i64 1, !dbg !58
  %1378 = extractelement <4 x float> %1375, i64 2, !dbg !58
  %1379 = extractelement <4 x float> %1375, i64 3, !dbg !58
  %1380 = insertelement <4 x float> poison, float %1061, i64 0, !dbg !58
  %1381 = insertelement <4 x float> %1380, float %1062, i64 1, !dbg !58
  %1382 = insertelement <4 x float> %1381, float %1063, i64 2, !dbg !58
  %1383 = insertelement <4 x float> %1382, float %1064, i64 3, !dbg !58
  %1384 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract288, i64 %.extract336, <4 x float> %1383, i32 0, i32 0, i32 0), !dbg !58
  %1385 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract290, i64 %.extract338, <4 x float> %1384, i32 0, i32 0, i32 0), !dbg !58
  %1386 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract292, i64 %.extract340, <4 x float> %1385, i32 0, i32 0, i32 0), !dbg !58
  %1387 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract294, i64 %.extract342, <4 x float> %1386, i32 0, i32 0, i32 0), !dbg !58
  %1388 = extractelement <4 x float> %1387, i64 0, !dbg !58
  %1389 = extractelement <4 x float> %1387, i64 1, !dbg !58
  %1390 = extractelement <4 x float> %1387, i64 2, !dbg !58
  %1391 = extractelement <4 x float> %1387, i64 3, !dbg !58
  %1392 = insertelement <4 x float> poison, float %1065, i64 0, !dbg !58
  %1393 = insertelement <4 x float> %1392, float %1066, i64 1, !dbg !58
  %1394 = insertelement <4 x float> %1393, float %1067, i64 2, !dbg !58
  %1395 = insertelement <4 x float> %1394, float %1068, i64 3, !dbg !58
  %1396 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract288, i64 %.extract344, <4 x float> %1395, i32 0, i32 0, i32 0), !dbg !58
  %1397 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract290, i64 %.extract346, <4 x float> %1396, i32 0, i32 0, i32 0), !dbg !58
  %1398 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract292, i64 %.extract348, <4 x float> %1397, i32 0, i32 0, i32 0), !dbg !58
  %1399 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract294, i64 %.extract350, <4 x float> %1398, i32 0, i32 0, i32 0), !dbg !58
  %1400 = extractelement <4 x float> %1399, i64 0, !dbg !58
  %1401 = extractelement <4 x float> %1399, i64 1, !dbg !58
  %1402 = extractelement <4 x float> %1399, i64 2, !dbg !58
  %1403 = extractelement <4 x float> %1399, i64 3, !dbg !58
  %1404 = insertelement <4 x float> poison, float %1069, i64 0, !dbg !58
  %1405 = insertelement <4 x float> %1404, float %1070, i64 1, !dbg !58
  %1406 = insertelement <4 x float> %1405, float %1071, i64 2, !dbg !58
  %1407 = insertelement <4 x float> %1406, float %1072, i64 3, !dbg !58
  %1408 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract296, i64 %.extract320, <4 x float> %1407, i32 0, i32 0, i32 0), !dbg !58
  %1409 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract298, i64 %.extract322, <4 x float> %1408, i32 0, i32 0, i32 0), !dbg !58
  %1410 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract300, i64 %.extract324, <4 x float> %1409, i32 0, i32 0, i32 0), !dbg !58
  %1411 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract302, i64 %.extract326, <4 x float> %1410, i32 0, i32 0, i32 0), !dbg !58
  %1412 = extractelement <4 x float> %1411, i64 0, !dbg !58
  %1413 = extractelement <4 x float> %1411, i64 1, !dbg !58
  %1414 = extractelement <4 x float> %1411, i64 2, !dbg !58
  %1415 = extractelement <4 x float> %1411, i64 3, !dbg !58
  %1416 = insertelement <4 x float> poison, float %1073, i64 0, !dbg !58
  %1417 = insertelement <4 x float> %1416, float %1074, i64 1, !dbg !58
  %1418 = insertelement <4 x float> %1417, float %1075, i64 2, !dbg !58
  %1419 = insertelement <4 x float> %1418, float %1076, i64 3, !dbg !58
  %1420 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract296, i64 %.extract328, <4 x float> %1419, i32 0, i32 0, i32 0), !dbg !58
  %1421 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract298, i64 %.extract330, <4 x float> %1420, i32 0, i32 0, i32 0), !dbg !58
  %1422 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract300, i64 %.extract332, <4 x float> %1421, i32 0, i32 0, i32 0), !dbg !58
  %1423 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract302, i64 %.extract334, <4 x float> %1422, i32 0, i32 0, i32 0), !dbg !58
  %1424 = extractelement <4 x float> %1423, i64 0, !dbg !58
  %1425 = extractelement <4 x float> %1423, i64 1, !dbg !58
  %1426 = extractelement <4 x float> %1423, i64 2, !dbg !58
  %1427 = extractelement <4 x float> %1423, i64 3, !dbg !58
  %1428 = insertelement <4 x float> poison, float %1077, i64 0, !dbg !58
  %1429 = insertelement <4 x float> %1428, float %1078, i64 1, !dbg !58
  %1430 = insertelement <4 x float> %1429, float %1079, i64 2, !dbg !58
  %1431 = insertelement <4 x float> %1430, float %1080, i64 3, !dbg !58
  %1432 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract296, i64 %.extract336, <4 x float> %1431, i32 0, i32 0, i32 0), !dbg !58
  %1433 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract298, i64 %.extract338, <4 x float> %1432, i32 0, i32 0, i32 0), !dbg !58
  %1434 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract300, i64 %.extract340, <4 x float> %1433, i32 0, i32 0, i32 0), !dbg !58
  %1435 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract302, i64 %.extract342, <4 x float> %1434, i32 0, i32 0, i32 0), !dbg !58
  %1436 = extractelement <4 x float> %1435, i64 0, !dbg !58
  %1437 = extractelement <4 x float> %1435, i64 1, !dbg !58
  %1438 = extractelement <4 x float> %1435, i64 2, !dbg !58
  %1439 = extractelement <4 x float> %1435, i64 3, !dbg !58
  %1440 = insertelement <4 x float> poison, float %1081, i64 0, !dbg !58
  %1441 = insertelement <4 x float> %1440, float %1082, i64 1, !dbg !58
  %1442 = insertelement <4 x float> %1441, float %1083, i64 2, !dbg !58
  %1443 = insertelement <4 x float> %1442, float %1084, i64 3, !dbg !58
  %1444 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract296, i64 %.extract344, <4 x float> %1443, i32 0, i32 0, i32 0), !dbg !58
  %1445 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract298, i64 %.extract346, <4 x float> %1444, i32 0, i32 0, i32 0), !dbg !58
  %1446 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract300, i64 %.extract348, <4 x float> %1445, i32 0, i32 0, i32 0), !dbg !58
  %1447 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract302, i64 %.extract350, <4 x float> %1446, i32 0, i32 0, i32 0), !dbg !58
  %1448 = extractelement <4 x float> %1447, i64 0, !dbg !58
  %1449 = extractelement <4 x float> %1447, i64 1, !dbg !58
  %1450 = extractelement <4 x float> %1447, i64 2, !dbg !58
  %1451 = extractelement <4 x float> %1447, i64 3, !dbg !58
  %1452 = insertelement <4 x float> poison, float %1085, i64 0, !dbg !58
  %1453 = insertelement <4 x float> %1452, float %1086, i64 1, !dbg !58
  %1454 = insertelement <4 x float> %1453, float %1087, i64 2, !dbg !58
  %1455 = insertelement <4 x float> %1454, float %1088, i64 3, !dbg !58
  %1456 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract304, i64 %.extract320, <4 x float> %1455, i32 0, i32 0, i32 0), !dbg !58
  %1457 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract306, i64 %.extract322, <4 x float> %1456, i32 0, i32 0, i32 0), !dbg !58
  %1458 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract308, i64 %.extract324, <4 x float> %1457, i32 0, i32 0, i32 0), !dbg !58
  %1459 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract310, i64 %.extract326, <4 x float> %1458, i32 0, i32 0, i32 0), !dbg !58
  %1460 = extractelement <4 x float> %1459, i64 0, !dbg !58
  %1461 = extractelement <4 x float> %1459, i64 1, !dbg !58
  %1462 = extractelement <4 x float> %1459, i64 2, !dbg !58
  %1463 = extractelement <4 x float> %1459, i64 3, !dbg !58
  %1464 = insertelement <4 x float> poison, float %1089, i64 0, !dbg !58
  %1465 = insertelement <4 x float> %1464, float %1090, i64 1, !dbg !58
  %1466 = insertelement <4 x float> %1465, float %1091, i64 2, !dbg !58
  %1467 = insertelement <4 x float> %1466, float %1092, i64 3, !dbg !58
  %1468 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract304, i64 %.extract328, <4 x float> %1467, i32 0, i32 0, i32 0), !dbg !58
  %1469 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract306, i64 %.extract330, <4 x float> %1468, i32 0, i32 0, i32 0), !dbg !58
  %1470 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract308, i64 %.extract332, <4 x float> %1469, i32 0, i32 0, i32 0), !dbg !58
  %1471 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract310, i64 %.extract334, <4 x float> %1470, i32 0, i32 0, i32 0), !dbg !58
  %1472 = extractelement <4 x float> %1471, i64 0, !dbg !58
  %1473 = extractelement <4 x float> %1471, i64 1, !dbg !58
  %1474 = extractelement <4 x float> %1471, i64 2, !dbg !58
  %1475 = extractelement <4 x float> %1471, i64 3, !dbg !58
  %1476 = insertelement <4 x float> poison, float %1093, i64 0, !dbg !58
  %1477 = insertelement <4 x float> %1476, float %1094, i64 1, !dbg !58
  %1478 = insertelement <4 x float> %1477, float %1095, i64 2, !dbg !58
  %1479 = insertelement <4 x float> %1478, float %1096, i64 3, !dbg !58
  %1480 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract304, i64 %.extract336, <4 x float> %1479, i32 0, i32 0, i32 0), !dbg !58
  %1481 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract306, i64 %.extract338, <4 x float> %1480, i32 0, i32 0, i32 0), !dbg !58
  %1482 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract308, i64 %.extract340, <4 x float> %1481, i32 0, i32 0, i32 0), !dbg !58
  %1483 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract310, i64 %.extract342, <4 x float> %1482, i32 0, i32 0, i32 0), !dbg !58
  %1484 = extractelement <4 x float> %1483, i64 0, !dbg !58
  %1485 = extractelement <4 x float> %1483, i64 1, !dbg !58
  %1486 = extractelement <4 x float> %1483, i64 2, !dbg !58
  %1487 = extractelement <4 x float> %1483, i64 3, !dbg !58
  %1488 = insertelement <4 x float> poison, float %1097, i64 0, !dbg !58
  %1489 = insertelement <4 x float> %1488, float %1098, i64 1, !dbg !58
  %1490 = insertelement <4 x float> %1489, float %1099, i64 2, !dbg !58
  %1491 = insertelement <4 x float> %1490, float %1100, i64 3, !dbg !58
  %1492 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract304, i64 %.extract344, <4 x float> %1491, i32 0, i32 0, i32 0), !dbg !58
  %1493 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract306, i64 %.extract346, <4 x float> %1492, i32 0, i32 0, i32 0), !dbg !58
  %1494 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract308, i64 %.extract348, <4 x float> %1493, i32 0, i32 0, i32 0), !dbg !58
  %1495 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract310, i64 %.extract350, <4 x float> %1494, i32 0, i32 0, i32 0), !dbg !58
  %1496 = extractelement <4 x float> %1495, i64 0, !dbg !58
  %1497 = extractelement <4 x float> %1495, i64 1, !dbg !58
  %1498 = extractelement <4 x float> %1495, i64 2, !dbg !58
  %1499 = extractelement <4 x float> %1495, i64 3, !dbg !58
  %1500 = insertelement <4 x float> poison, float %1101, i64 0, !dbg !58
  %1501 = insertelement <4 x float> %1500, float %1102, i64 1, !dbg !58
  %1502 = insertelement <4 x float> %1501, float %1103, i64 2, !dbg !58
  %1503 = insertelement <4 x float> %1502, float %1104, i64 3, !dbg !58
  %1504 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract312, i64 %.extract320, <4 x float> %1503, i32 0, i32 0, i32 0), !dbg !58
  %1505 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract314, i64 %.extract322, <4 x float> %1504, i32 0, i32 0, i32 0), !dbg !58
  %1506 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract316, i64 %.extract324, <4 x float> %1505, i32 0, i32 0, i32 0), !dbg !58
  %1507 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract318, i64 %.extract326, <4 x float> %1506, i32 0, i32 0, i32 0), !dbg !58
  %1508 = extractelement <4 x float> %1507, i64 0, !dbg !58
  %1509 = extractelement <4 x float> %1507, i64 1, !dbg !58
  %1510 = extractelement <4 x float> %1507, i64 2, !dbg !58
  %1511 = extractelement <4 x float> %1507, i64 3, !dbg !58
  %1512 = insertelement <4 x float> poison, float %1105, i64 0, !dbg !58
  %1513 = insertelement <4 x float> %1512, float %1106, i64 1, !dbg !58
  %1514 = insertelement <4 x float> %1513, float %1107, i64 2, !dbg !58
  %1515 = insertelement <4 x float> %1514, float %1108, i64 3, !dbg !58
  %1516 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract312, i64 %.extract328, <4 x float> %1515, i32 0, i32 0, i32 0), !dbg !58
  %1517 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract314, i64 %.extract330, <4 x float> %1516, i32 0, i32 0, i32 0), !dbg !58
  %1518 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract316, i64 %.extract332, <4 x float> %1517, i32 0, i32 0, i32 0), !dbg !58
  %1519 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract318, i64 %.extract334, <4 x float> %1518, i32 0, i32 0, i32 0), !dbg !58
  %1520 = extractelement <4 x float> %1519, i64 0, !dbg !58
  %1521 = extractelement <4 x float> %1519, i64 1, !dbg !58
  %1522 = extractelement <4 x float> %1519, i64 2, !dbg !58
  %1523 = extractelement <4 x float> %1519, i64 3, !dbg !58
  %1524 = insertelement <4 x float> poison, float %1109, i64 0, !dbg !58
  %1525 = insertelement <4 x float> %1524, float %1110, i64 1, !dbg !58
  %1526 = insertelement <4 x float> %1525, float %1111, i64 2, !dbg !58
  %1527 = insertelement <4 x float> %1526, float %1112, i64 3, !dbg !58
  %1528 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract312, i64 %.extract336, <4 x float> %1527, i32 0, i32 0, i32 0), !dbg !58
  %1529 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract314, i64 %.extract338, <4 x float> %1528, i32 0, i32 0, i32 0), !dbg !58
  %1530 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract316, i64 %.extract340, <4 x float> %1529, i32 0, i32 0, i32 0), !dbg !58
  %1531 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract318, i64 %.extract342, <4 x float> %1530, i32 0, i32 0, i32 0), !dbg !58
  %1532 = extractelement <4 x float> %1531, i64 0, !dbg !58
  %1533 = extractelement <4 x float> %1531, i64 1, !dbg !58
  %1534 = extractelement <4 x float> %1531, i64 2, !dbg !58
  %1535 = extractelement <4 x float> %1531, i64 3, !dbg !58
  %1536 = insertelement <4 x float> poison, float %1113, i64 0, !dbg !58
  %1537 = insertelement <4 x float> %1536, float %1114, i64 1, !dbg !58
  %1538 = insertelement <4 x float> %1537, float %1115, i64 2, !dbg !58
  %1539 = insertelement <4 x float> %1538, float %1116, i64 3, !dbg !58
  %1540 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract312, i64 %.extract344, <4 x float> %1539, i32 0, i32 0, i32 0), !dbg !58
  %1541 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract314, i64 %.extract346, <4 x float> %1540, i32 0, i32 0, i32 0), !dbg !58
  %1542 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract316, i64 %.extract348, <4 x float> %1541, i32 0, i32 0, i32 0), !dbg !58
  %1543 = tail call <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64 %.extract318, i64 %.extract350, <4 x float> %1542, i32 0, i32 0, i32 0), !dbg !58
  %1544 = extractelement <4 x float> %1543, i64 0, !dbg !58
  %1545 = extractelement <4 x float> %1543, i64 1, !dbg !58
  %1546 = extractelement <4 x float> %1543, i64 2, !dbg !58
  %1547 = extractelement <4 x float> %1543, i64 3, !dbg !58
  %1548 = fmul float %262, %1173, !dbg !59
  %1549 = fmul float %262, %1174, !dbg !59
  %1550 = fmul float %262, %1175, !dbg !59
  %1551 = fmul float %262, %1184, !dbg !59
  %1552 = fmul float %262, %1185, !dbg !59
  %1553 = fmul float %262, %1186, !dbg !59
  %1554 = fmul float %262, %1187, !dbg !59
  %1555 = fmul float %262, %1196, !dbg !59
  %1556 = fmul float %262, %1197, !dbg !59
  %1557 = fmul float %262, %1198, !dbg !59
  %1558 = fmul float %262, %1199, !dbg !59
  %1559 = fmul float %262, %1208, !dbg !59
  %1560 = fmul float %262, %1209, !dbg !59
  %1561 = fmul float %262, %1210, !dbg !59
  %1562 = fmul float %262, %1211, !dbg !59
  %1563 = fmul float %262, %1220, !dbg !59
  %1564 = fmul float %262, %1221, !dbg !59
  %1565 = fmul float %262, %1222, !dbg !59
  %1566 = fmul float %262, %1223, !dbg !59
  %1567 = fmul float %262, %1232, !dbg !59
  %1568 = fmul float %262, %1233, !dbg !59
  %1569 = fmul float %262, %1234, !dbg !59
  %1570 = fmul float %262, %1235, !dbg !59
  %1571 = fmul float %262, %1244, !dbg !59
  %1572 = fmul float %262, %1245, !dbg !59
  %1573 = fmul float %262, %1246, !dbg !59
  %1574 = fmul float %262, %1247, !dbg !59
  %1575 = fmul float %262, %1256, !dbg !59
  %1576 = fmul float %262, %1257, !dbg !59
  %1577 = fmul float %262, %1258, !dbg !59
  %1578 = fmul float %262, %1259, !dbg !59
  %1579 = fmul float %262, %1268, !dbg !59
  %1580 = fmul float %262, %1269, !dbg !59
  %1581 = fmul float %262, %1270, !dbg !59
  %1582 = fmul float %262, %1271, !dbg !59
  %1583 = fmul float %262, %1280, !dbg !59
  %1584 = fmul float %262, %1281, !dbg !59
  %1585 = fmul float %262, %1282, !dbg !59
  %1586 = fmul float %262, %1283, !dbg !59
  %1587 = fmul float %262, %1292, !dbg !59
  %1588 = fmul float %262, %1293, !dbg !59
  %1589 = fmul float %262, %1294, !dbg !59
  %1590 = fmul float %262, %1295, !dbg !59
  %1591 = fmul float %262, %1304, !dbg !59
  %1592 = fmul float %262, %1305, !dbg !59
  %1593 = fmul float %262, %1306, !dbg !59
  %1594 = fmul float %262, %1307, !dbg !59
  %1595 = fmul float %262, %1316, !dbg !59
  %1596 = fmul float %262, %1317, !dbg !59
  %1597 = fmul float %262, %1318, !dbg !59
  %1598 = fmul float %262, %1319, !dbg !59
  %1599 = fmul float %262, %1328, !dbg !59
  %1600 = fmul float %262, %1329, !dbg !59
  %1601 = fmul float %262, %1330, !dbg !59
  %1602 = fmul float %262, %1331, !dbg !59
  %1603 = fmul float %262, %1340, !dbg !59
  %1604 = fmul float %262, %1341, !dbg !59
  %1605 = fmul float %262, %1342, !dbg !59
  %1606 = fmul float %262, %1343, !dbg !59
  %1607 = fmul float %262, %1352, !dbg !59
  %1608 = fmul float %262, %1353, !dbg !59
  %1609 = fmul float %262, %1354, !dbg !59
  %1610 = fmul float %262, %1355, !dbg !59
  %1611 = fmul float %262, %1364, !dbg !59
  %1612 = fmul float %262, %1365, !dbg !59
  %1613 = fmul float %262, %1366, !dbg !59
  %1614 = fmul float %262, %1367, !dbg !59
  %1615 = fmul float %262, %1376, !dbg !59
  %1616 = fmul float %262, %1377, !dbg !59
  %1617 = fmul float %262, %1378, !dbg !59
  %1618 = fmul float %262, %1379, !dbg !59
  %1619 = fmul float %262, %1388, !dbg !59
  %1620 = fmul float %262, %1389, !dbg !59
  %1621 = fmul float %262, %1390, !dbg !59
  %1622 = fmul float %262, %1391, !dbg !59
  %1623 = fmul float %262, %1400, !dbg !59
  %1624 = fmul float %262, %1401, !dbg !59
  %1625 = fmul float %262, %1402, !dbg !59
  %1626 = fmul float %262, %1403, !dbg !59
  %1627 = fmul float %262, %1412, !dbg !59
  %1628 = fmul float %262, %1413, !dbg !59
  %1629 = fmul float %262, %1414, !dbg !59
  %1630 = fmul float %262, %1415, !dbg !59
  %1631 = fmul float %262, %1424, !dbg !59
  %1632 = fmul float %262, %1425, !dbg !59
  %1633 = fmul float %262, %1426, !dbg !59
  %1634 = fmul float %262, %1427, !dbg !59
  %1635 = fmul float %262, %1436, !dbg !59
  %1636 = fmul float %262, %1437, !dbg !59
  %1637 = fmul float %262, %1438, !dbg !59
  %1638 = fmul float %262, %1439, !dbg !59
  %1639 = fmul float %262, %1448, !dbg !59
  %1640 = fmul float %262, %1449, !dbg !59
  %1641 = fmul float %262, %1450, !dbg !59
  %1642 = fmul float %262, %1451, !dbg !59
  %1643 = fmul float %262, %1460, !dbg !59
  %1644 = fmul float %262, %1461, !dbg !59
  %1645 = fmul float %262, %1462, !dbg !59
  %1646 = fmul float %262, %1463, !dbg !59
  %1647 = fmul float %262, %1472, !dbg !59
  %1648 = fmul float %262, %1473, !dbg !59
  %1649 = fmul float %262, %1474, !dbg !59
  %1650 = fmul float %262, %1475, !dbg !59
  %1651 = fmul float %262, %1484, !dbg !59
  %1652 = fmul float %262, %1485, !dbg !59
  %1653 = fmul float %262, %1486, !dbg !59
  %1654 = fmul float %262, %1487, !dbg !59
  %1655 = fmul float %262, %1496, !dbg !59
  %1656 = fmul float %262, %1497, !dbg !59
  %1657 = fmul float %262, %1498, !dbg !59
  %1658 = fmul float %262, %1499, !dbg !59
  %1659 = fmul float %262, %1508, !dbg !59
  %1660 = fmul float %262, %1509, !dbg !59
  %1661 = fmul float %262, %1510, !dbg !59
  %1662 = fmul float %262, %1511, !dbg !59
  %1663 = fmul float %262, %1520, !dbg !59
  %1664 = fmul float %262, %1521, !dbg !59
  %1665 = fmul float %262, %1522, !dbg !59
  %1666 = fmul float %262, %1523, !dbg !59
  %1667 = fmul float %262, %1532, !dbg !59
  %1668 = fmul float %262, %1533, !dbg !59
  %1669 = fmul float %262, %1534, !dbg !59
  %1670 = fmul float %262, %1535, !dbg !59
  %1671 = fmul float %262, %1544, !dbg !59
  %1672 = fmul float %262, %1545, !dbg !59
  %1673 = fmul float %262, %1546, !dbg !59
  %1674 = fmul float %262, %1547, !dbg !59
  %1675 = fmul float %266, %1548, !dbg !60
  %1676 = fmul float %266, %1549, !dbg !60
  %1677 = fmul float %266, %1550, !dbg !60
  %1678 = fmul float %266, %1551, !dbg !60
  %1679 = fmul float %266, %1552, !dbg !60
  %1680 = fmul float %266, %1553, !dbg !60
  %1681 = fmul float %266, %1554, !dbg !60
  %1682 = fmul float %266, %1555, !dbg !60
  %1683 = fmul float %266, %1556, !dbg !60
  %1684 = fmul float %266, %1557, !dbg !60
  %1685 = fmul float %266, %1558, !dbg !60
  %1686 = fmul float %266, %1559, !dbg !60
  %1687 = fmul float %266, %1560, !dbg !60
  %1688 = fmul float %266, %1561, !dbg !60
  %1689 = fmul float %266, %1562, !dbg !60
  %1690 = fmul float %266, %1563, !dbg !60
  %1691 = fmul float %266, %1564, !dbg !60
  %1692 = fmul float %266, %1565, !dbg !60
  %1693 = fmul float %266, %1566, !dbg !60
  %1694 = fmul float %266, %1567, !dbg !60
  %1695 = fmul float %266, %1568, !dbg !60
  %1696 = fmul float %266, %1569, !dbg !60
  %1697 = fmul float %266, %1570, !dbg !60
  %1698 = fmul float %266, %1571, !dbg !60
  %1699 = fmul float %266, %1572, !dbg !60
  %1700 = fmul float %266, %1573, !dbg !60
  %1701 = fmul float %266, %1574, !dbg !60
  %1702 = fmul float %266, %1575, !dbg !60
  %1703 = fmul float %266, %1576, !dbg !60
  %1704 = fmul float %266, %1577, !dbg !60
  %1705 = fmul float %266, %1578, !dbg !60
  %1706 = fmul float %266, %1579, !dbg !60
  %1707 = fmul float %266, %1580, !dbg !60
  %1708 = fmul float %266, %1581, !dbg !60
  %1709 = fmul float %266, %1582, !dbg !60
  %1710 = fmul float %266, %1583, !dbg !60
  %1711 = fmul float %266, %1584, !dbg !60
  %1712 = fmul float %266, %1585, !dbg !60
  %1713 = fmul float %266, %1586, !dbg !60
  %1714 = fmul float %266, %1587, !dbg !60
  %1715 = fmul float %266, %1588, !dbg !60
  %1716 = fmul float %266, %1589, !dbg !60
  %1717 = fmul float %266, %1590, !dbg !60
  %1718 = fmul float %266, %1591, !dbg !60
  %1719 = fmul float %266, %1592, !dbg !60
  %1720 = fmul float %266, %1593, !dbg !60
  %1721 = fmul float %266, %1594, !dbg !60
  %1722 = fmul float %266, %1595, !dbg !60
  %1723 = fmul float %266, %1596, !dbg !60
  %1724 = fmul float %266, %1597, !dbg !60
  %1725 = fmul float %266, %1598, !dbg !60
  %1726 = fmul float %266, %1599, !dbg !60
  %1727 = fmul float %266, %1600, !dbg !60
  %1728 = fmul float %266, %1601, !dbg !60
  %1729 = fmul float %266, %1602, !dbg !60
  %1730 = fmul float %266, %1603, !dbg !60
  %1731 = fmul float %266, %1604, !dbg !60
  %1732 = fmul float %266, %1605, !dbg !60
  %1733 = fmul float %266, %1606, !dbg !60
  %1734 = fmul float %266, %1607, !dbg !60
  %1735 = fmul float %266, %1608, !dbg !60
  %1736 = fmul float %266, %1609, !dbg !60
  %1737 = fmul float %266, %1610, !dbg !60
  %1738 = fmul float %266, %1611, !dbg !60
  %1739 = fmul float %266, %1612, !dbg !60
  %1740 = fmul float %266, %1613, !dbg !60
  %1741 = fmul float %266, %1614, !dbg !60
  %1742 = fmul float %266, %1615, !dbg !60
  %1743 = fmul float %266, %1616, !dbg !60
  %1744 = fmul float %266, %1617, !dbg !60
  %1745 = fmul float %266, %1618, !dbg !60
  %1746 = fmul float %266, %1619, !dbg !60
  %1747 = fmul float %266, %1620, !dbg !60
  %1748 = fmul float %266, %1621, !dbg !60
  %1749 = fmul float %266, %1622, !dbg !60
  %1750 = fmul float %266, %1623, !dbg !60
  %1751 = fmul float %266, %1624, !dbg !60
  %1752 = fmul float %266, %1625, !dbg !60
  %1753 = fmul float %266, %1626, !dbg !60
  %1754 = fmul float %266, %1627, !dbg !60
  %1755 = fmul float %266, %1628, !dbg !60
  %1756 = fmul float %266, %1629, !dbg !60
  %1757 = fmul float %266, %1630, !dbg !60
  %1758 = fmul float %266, %1631, !dbg !60
  %1759 = fmul float %266, %1632, !dbg !60
  %1760 = fmul float %266, %1633, !dbg !60
  %1761 = fmul float %266, %1634, !dbg !60
  %1762 = fmul float %266, %1635, !dbg !60
  %1763 = fmul float %266, %1636, !dbg !60
  %1764 = fmul float %266, %1637, !dbg !60
  %1765 = fmul float %266, %1638, !dbg !60
  %1766 = fmul float %266, %1639, !dbg !60
  %1767 = fmul float %266, %1640, !dbg !60
  %1768 = fmul float %266, %1641, !dbg !60
  %1769 = fmul float %266, %1642, !dbg !60
  %1770 = fmul float %266, %1643, !dbg !60
  %1771 = fmul float %266, %1644, !dbg !60
  %1772 = fmul float %266, %1645, !dbg !60
  %1773 = fmul float %266, %1646, !dbg !60
  %1774 = fmul float %266, %1647, !dbg !60
  %1775 = fmul float %266, %1648, !dbg !60
  %1776 = fmul float %266, %1649, !dbg !60
  %1777 = fmul float %266, %1650, !dbg !60
  %1778 = fmul float %266, %1651, !dbg !60
  %1779 = fmul float %266, %1652, !dbg !60
  %1780 = fmul float %266, %1653, !dbg !60
  %1781 = fmul float %266, %1654, !dbg !60
  %1782 = fmul float %266, %1655, !dbg !60
  %1783 = fmul float %266, %1656, !dbg !60
  %1784 = fmul float %266, %1657, !dbg !60
  %1785 = fmul float %266, %1658, !dbg !60
  %1786 = fmul float %266, %1659, !dbg !60
  %1787 = fmul float %266, %1660, !dbg !60
  %1788 = fmul float %266, %1661, !dbg !60
  %1789 = fmul float %266, %1662, !dbg !60
  %1790 = fmul float %266, %1663, !dbg !60
  %1791 = fmul float %266, %1664, !dbg !60
  %1792 = fmul float %266, %1665, !dbg !60
  %1793 = fmul float %266, %1666, !dbg !60
  %1794 = fmul float %266, %1667, !dbg !60
  %1795 = fmul float %266, %1668, !dbg !60
  %1796 = fmul float %266, %1669, !dbg !60
  %1797 = fmul float %266, %1670, !dbg !60
  %1798 = fmul float %266, %1671, !dbg !60
  %1799 = fmul float %266, %1672, !dbg !60
  %1800 = fmul float %266, %1673, !dbg !60
  %1801 = fmul float %266, %1674, !dbg !60
  %1802 = fptrunc float %1675 to half, !dbg !61
  %1803 = fptrunc float %1676 to half, !dbg !61
  %1804 = fptrunc float %1677 to half, !dbg !61
  %1805 = fptrunc float %1678 to half, !dbg !61
  %1806 = fptrunc float %1679 to half, !dbg !61
  %1807 = fptrunc float %1680 to half, !dbg !61
  %1808 = fptrunc float %1681 to half, !dbg !61
  %1809 = fptrunc float %1682 to half, !dbg !61
  %1810 = fptrunc float %1683 to half, !dbg !61
  %1811 = fptrunc float %1684 to half, !dbg !61
  %1812 = fptrunc float %1685 to half, !dbg !61
  %1813 = fptrunc float %1686 to half, !dbg !61
  %1814 = fptrunc float %1687 to half, !dbg !61
  %1815 = fptrunc float %1688 to half, !dbg !61
  %1816 = fptrunc float %1689 to half, !dbg !61
  %1817 = fptrunc float %1690 to half, !dbg !61
  %1818 = fptrunc float %1691 to half, !dbg !61
  %1819 = fptrunc float %1692 to half, !dbg !61
  %1820 = fptrunc float %1693 to half, !dbg !61
  %1821 = fptrunc float %1694 to half, !dbg !61
  %1822 = fptrunc float %1695 to half, !dbg !61
  %1823 = fptrunc float %1696 to half, !dbg !61
  %1824 = fptrunc float %1697 to half, !dbg !61
  %1825 = fptrunc float %1698 to half, !dbg !61
  %1826 = fptrunc float %1699 to half, !dbg !61
  %1827 = fptrunc float %1700 to half, !dbg !61
  %1828 = fptrunc float %1701 to half, !dbg !61
  %1829 = fptrunc float %1702 to half, !dbg !61
  %1830 = fptrunc float %1703 to half, !dbg !61
  %1831 = fptrunc float %1704 to half, !dbg !61
  %1832 = fptrunc float %1705 to half, !dbg !61
  %1833 = fptrunc float %1706 to half, !dbg !61
  %1834 = fptrunc float %1707 to half, !dbg !61
  %1835 = fptrunc float %1708 to half, !dbg !61
  %1836 = fptrunc float %1709 to half, !dbg !61
  %1837 = fptrunc float %1710 to half, !dbg !61
  %1838 = fptrunc float %1711 to half, !dbg !61
  %1839 = fptrunc float %1712 to half, !dbg !61
  %1840 = fptrunc float %1713 to half, !dbg !61
  %1841 = fptrunc float %1714 to half, !dbg !61
  %1842 = fptrunc float %1715 to half, !dbg !61
  %1843 = fptrunc float %1716 to half, !dbg !61
  %1844 = fptrunc float %1717 to half, !dbg !61
  %1845 = fptrunc float %1718 to half, !dbg !61
  %1846 = fptrunc float %1719 to half, !dbg !61
  %1847 = fptrunc float %1720 to half, !dbg !61
  %1848 = fptrunc float %1721 to half, !dbg !61
  %1849 = fptrunc float %1722 to half, !dbg !61
  %1850 = fptrunc float %1723 to half, !dbg !61
  %1851 = fptrunc float %1724 to half, !dbg !61
  %1852 = fptrunc float %1725 to half, !dbg !61
  %1853 = fptrunc float %1726 to half, !dbg !61
  %1854 = fptrunc float %1727 to half, !dbg !61
  %1855 = fptrunc float %1728 to half, !dbg !61
  %1856 = fptrunc float %1729 to half, !dbg !61
  %1857 = fptrunc float %1730 to half, !dbg !61
  %1858 = fptrunc float %1731 to half, !dbg !61
  %1859 = fptrunc float %1732 to half, !dbg !61
  %1860 = fptrunc float %1733 to half, !dbg !61
  %1861 = fptrunc float %1734 to half, !dbg !61
  %1862 = fptrunc float %1735 to half, !dbg !61
  %1863 = fptrunc float %1736 to half, !dbg !61
  %1864 = fptrunc float %1737 to half, !dbg !61
  %1865 = fptrunc float %1738 to half, !dbg !61
  %1866 = fptrunc float %1739 to half, !dbg !61
  %1867 = fptrunc float %1740 to half, !dbg !61
  %1868 = fptrunc float %1741 to half, !dbg !61
  %1869 = fptrunc float %1742 to half, !dbg !61
  %1870 = fptrunc float %1743 to half, !dbg !61
  %1871 = fptrunc float %1744 to half, !dbg !61
  %1872 = fptrunc float %1745 to half, !dbg !61
  %1873 = fptrunc float %1746 to half, !dbg !61
  %1874 = fptrunc float %1747 to half, !dbg !61
  %1875 = fptrunc float %1748 to half, !dbg !61
  %1876 = fptrunc float %1749 to half, !dbg !61
  %1877 = fptrunc float %1750 to half, !dbg !61
  %1878 = fptrunc float %1751 to half, !dbg !61
  %1879 = fptrunc float %1752 to half, !dbg !61
  %1880 = fptrunc float %1753 to half, !dbg !61
  %1881 = fptrunc float %1754 to half, !dbg !61
  %1882 = fptrunc float %1755 to half, !dbg !61
  %1883 = fptrunc float %1756 to half, !dbg !61
  %1884 = fptrunc float %1757 to half, !dbg !61
  %1885 = fptrunc float %1758 to half, !dbg !61
  %1886 = fptrunc float %1759 to half, !dbg !61
  %1887 = fptrunc float %1760 to half, !dbg !61
  %1888 = fptrunc float %1761 to half, !dbg !61
  %1889 = fptrunc float %1762 to half, !dbg !61
  %1890 = fptrunc float %1763 to half, !dbg !61
  %1891 = fptrunc float %1764 to half, !dbg !61
  %1892 = fptrunc float %1765 to half, !dbg !61
  %1893 = fptrunc float %1766 to half, !dbg !61
  %1894 = fptrunc float %1767 to half, !dbg !61
  %1895 = fptrunc float %1768 to half, !dbg !61
  %1896 = fptrunc float %1769 to half, !dbg !61
  %1897 = fptrunc float %1770 to half, !dbg !61
  %1898 = fptrunc float %1771 to half, !dbg !61
  %1899 = fptrunc float %1772 to half, !dbg !61
  %1900 = fptrunc float %1773 to half, !dbg !61
  %1901 = fptrunc float %1774 to half, !dbg !61
  %1902 = fptrunc float %1775 to half, !dbg !61
  %1903 = fptrunc float %1776 to half, !dbg !61
  %1904 = fptrunc float %1777 to half, !dbg !61
  %1905 = fptrunc float %1778 to half, !dbg !61
  %1906 = fptrunc float %1779 to half, !dbg !61
  %1907 = fptrunc float %1780 to half, !dbg !61
  %1908 = fptrunc float %1781 to half, !dbg !61
  %1909 = fptrunc float %1782 to half, !dbg !61
  %1910 = fptrunc float %1783 to half, !dbg !61
  %1911 = fptrunc float %1784 to half, !dbg !61
  %1912 = fptrunc float %1785 to half, !dbg !61
  %1913 = fptrunc float %1786 to half, !dbg !61
  %1914 = fptrunc float %1787 to half, !dbg !61
  %1915 = fptrunc float %1788 to half, !dbg !61
  %1916 = fptrunc float %1789 to half, !dbg !61
  %1917 = fptrunc float %1790 to half, !dbg !61
  %1918 = fptrunc float %1791 to half, !dbg !61
  %1919 = fptrunc float %1792 to half, !dbg !61
  %1920 = fptrunc float %1793 to half, !dbg !61
  %1921 = fptrunc float %1794 to half, !dbg !61
  %1922 = fptrunc float %1795 to half, !dbg !61
  %1923 = fptrunc float %1796 to half, !dbg !61
  %1924 = fptrunc float %1797 to half, !dbg !61
  %1925 = fptrunc float %1798 to half, !dbg !61
  %1926 = fptrunc float %1799 to half, !dbg !61
  %1927 = fptrunc float %1800 to half, !dbg !61
  %1928 = fptrunc float %1801 to half, !dbg !61
  %1929 = mul i32 %101, %16, !dbg !62
  %1930 = mul i32 %103, %16, !dbg !62
  %1931 = mul i32 %105, %16, !dbg !62
  %1932 = mul i32 %107, %16, !dbg !62
  %1933 = mul i32 %109, %16, !dbg !62
  %1934 = mul i32 %111, %16, !dbg !62
  %1935 = mul i32 %113, %16, !dbg !62
  %1936 = mul i32 %115, %16, !dbg !62
  %1937 = mul i32 %117, %16, !dbg !62
  %1938 = mul i32 %119, %16, !dbg !62
  %1939 = mul i32 %121, %16, !dbg !62
  %1940 = mul i32 %123, %16, !dbg !62
  %1941 = mul i32 %125, %16, !dbg !62
  %1942 = mul i32 %127, %16, !dbg !62
  %1943 = mul i32 %129, %16, !dbg !62
  %1944 = mul i32 %131, %16, !dbg !62
  %1945 = mul i32 %133, %16, !dbg !62
  %1946 = mul i32 %135, %16, !dbg !62
  %1947 = mul i32 %137, %16, !dbg !62
  %1948 = mul i32 %139, %16, !dbg !62
  %1949 = mul i32 %141, %16, !dbg !62
  %1950 = mul i32 %143, %16, !dbg !62
  %1951 = mul i32 %145, %16, !dbg !62
  %1952 = mul i32 %147, %16, !dbg !62
  %1953 = mul i32 %149, %16, !dbg !62
  %1954 = mul i32 %151, %16, !dbg !62
  %1955 = mul i32 %153, %16, !dbg !62
  %1956 = mul i32 %155, %16, !dbg !62
  %1957 = mul i32 %157, %16, !dbg !62
  %1958 = mul i32 %159, %16, !dbg !62
  %1959 = mul i32 %161, %16, !dbg !62
  %1960 = mul i32 %163, %16, !dbg !62
  %1961 = sext i32 %1929 to i64, !dbg !63
  %1962 = getelementptr half, ptr addrspace(1) %2, i64 %1961, !dbg !63
  %1963 = sext i32 %1930 to i64, !dbg !63
  %1964 = getelementptr half, ptr addrspace(1) %2, i64 %1963, !dbg !63
  %1965 = sext i32 %1931 to i64, !dbg !63
  %1966 = getelementptr half, ptr addrspace(1) %2, i64 %1965, !dbg !63
  %1967 = sext i32 %1932 to i64, !dbg !63
  %1968 = getelementptr half, ptr addrspace(1) %2, i64 %1967, !dbg !63
  %1969 = sext i32 %1933 to i64, !dbg !63
  %1970 = getelementptr half, ptr addrspace(1) %2, i64 %1969, !dbg !63
  %1971 = sext i32 %1934 to i64, !dbg !63
  %1972 = getelementptr half, ptr addrspace(1) %2, i64 %1971, !dbg !63
  %1973 = sext i32 %1935 to i64, !dbg !63
  %1974 = getelementptr half, ptr addrspace(1) %2, i64 %1973, !dbg !63
  %1975 = sext i32 %1936 to i64, !dbg !63
  %1976 = getelementptr half, ptr addrspace(1) %2, i64 %1975, !dbg !63
  %1977 = sext i32 %1937 to i64, !dbg !63
  %1978 = getelementptr half, ptr addrspace(1) %2, i64 %1977, !dbg !63
  %1979 = sext i32 %1938 to i64, !dbg !63
  %1980 = getelementptr half, ptr addrspace(1) %2, i64 %1979, !dbg !63
  %1981 = sext i32 %1939 to i64, !dbg !63
  %1982 = getelementptr half, ptr addrspace(1) %2, i64 %1981, !dbg !63
  %1983 = sext i32 %1940 to i64, !dbg !63
  %1984 = getelementptr half, ptr addrspace(1) %2, i64 %1983, !dbg !63
  %1985 = sext i32 %1941 to i64, !dbg !63
  %1986 = getelementptr half, ptr addrspace(1) %2, i64 %1985, !dbg !63
  %1987 = sext i32 %1942 to i64, !dbg !63
  %1988 = getelementptr half, ptr addrspace(1) %2, i64 %1987, !dbg !63
  %1989 = sext i32 %1943 to i64, !dbg !63
  %1990 = getelementptr half, ptr addrspace(1) %2, i64 %1989, !dbg !63
  %1991 = sext i32 %1944 to i64, !dbg !63
  %1992 = getelementptr half, ptr addrspace(1) %2, i64 %1991, !dbg !63
  %1993 = sext i32 %1945 to i64, !dbg !63
  %1994 = getelementptr half, ptr addrspace(1) %2, i64 %1993, !dbg !63
  %1995 = sext i32 %1946 to i64, !dbg !63
  %1996 = getelementptr half, ptr addrspace(1) %2, i64 %1995, !dbg !63
  %1997 = sext i32 %1947 to i64, !dbg !63
  %1998 = getelementptr half, ptr addrspace(1) %2, i64 %1997, !dbg !63
  %1999 = sext i32 %1948 to i64, !dbg !63
  %2000 = getelementptr half, ptr addrspace(1) %2, i64 %1999, !dbg !63
  %2001 = sext i32 %1949 to i64, !dbg !63
  %2002 = getelementptr half, ptr addrspace(1) %2, i64 %2001, !dbg !63
  %2003 = sext i32 %1950 to i64, !dbg !63
  %2004 = getelementptr half, ptr addrspace(1) %2, i64 %2003, !dbg !63
  %2005 = sext i32 %1951 to i64, !dbg !63
  %2006 = getelementptr half, ptr addrspace(1) %2, i64 %2005, !dbg !63
  %2007 = sext i32 %1952 to i64, !dbg !63
  %2008 = getelementptr half, ptr addrspace(1) %2, i64 %2007, !dbg !63
  %2009 = sext i32 %1953 to i64, !dbg !63
  %2010 = getelementptr half, ptr addrspace(1) %2, i64 %2009, !dbg !63
  %2011 = sext i32 %1954 to i64, !dbg !63
  %2012 = getelementptr half, ptr addrspace(1) %2, i64 %2011, !dbg !63
  %2013 = sext i32 %1955 to i64, !dbg !63
  %2014 = getelementptr half, ptr addrspace(1) %2, i64 %2013, !dbg !63
  %2015 = sext i32 %1956 to i64, !dbg !63
  %2016 = getelementptr half, ptr addrspace(1) %2, i64 %2015, !dbg !63
  %2017 = sext i32 %1957 to i64, !dbg !63
  %2018 = getelementptr half, ptr addrspace(1) %2, i64 %2017, !dbg !63
  %2019 = sext i32 %1958 to i64, !dbg !63
  %2020 = getelementptr half, ptr addrspace(1) %2, i64 %2019, !dbg !63
  %2021 = sext i32 %1959 to i64, !dbg !63
  %2022 = getelementptr half, ptr addrspace(1) %2, i64 %2021, !dbg !63
  %2023 = sext i32 %1960 to i64, !dbg !63
  %2024 = getelementptr half, ptr addrspace(1) %2, i64 %2023, !dbg !63
  %2025 = sext i32 %208 to i64, !dbg !64
  %2026 = getelementptr half, ptr addrspace(1) %1964, i64 %2025, !dbg !64
  %2027 = getelementptr half, ptr addrspace(1) %1966, i64 %2025, !dbg !64
  %2028 = getelementptr half, ptr addrspace(1) %1968, i64 %2025, !dbg !64
  %2029 = sext i32 %209 to i64, !dbg !64
  %2030 = getelementptr half, ptr addrspace(1) %1962, i64 %2029, !dbg !64
  %2031 = getelementptr half, ptr addrspace(1) %1964, i64 %2029, !dbg !64
  %2032 = getelementptr half, ptr addrspace(1) %1966, i64 %2029, !dbg !64
  %2033 = getelementptr half, ptr addrspace(1) %1968, i64 %2029, !dbg !64
  %2034 = sext i32 %210 to i64, !dbg !64
  %2035 = getelementptr half, ptr addrspace(1) %1962, i64 %2034, !dbg !64
  %2036 = getelementptr half, ptr addrspace(1) %1964, i64 %2034, !dbg !64
  %2037 = getelementptr half, ptr addrspace(1) %1966, i64 %2034, !dbg !64
  %2038 = getelementptr half, ptr addrspace(1) %1968, i64 %2034, !dbg !64
  %2039 = sext i32 %211 to i64, !dbg !64
  %2040 = getelementptr half, ptr addrspace(1) %1962, i64 %2039, !dbg !64
  %2041 = getelementptr half, ptr addrspace(1) %1964, i64 %2039, !dbg !64
  %2042 = getelementptr half, ptr addrspace(1) %1966, i64 %2039, !dbg !64
  %2043 = getelementptr half, ptr addrspace(1) %1968, i64 %2039, !dbg !64
  %2044 = getelementptr half, ptr addrspace(1) %1970, i64 %2025, !dbg !64
  %2045 = getelementptr half, ptr addrspace(1) %1972, i64 %2025, !dbg !64
  %2046 = getelementptr half, ptr addrspace(1) %1974, i64 %2025, !dbg !64
  %2047 = getelementptr half, ptr addrspace(1) %1976, i64 %2025, !dbg !64
  %2048 = getelementptr half, ptr addrspace(1) %1970, i64 %2029, !dbg !64
  %2049 = getelementptr half, ptr addrspace(1) %1972, i64 %2029, !dbg !64
  %2050 = getelementptr half, ptr addrspace(1) %1974, i64 %2029, !dbg !64
  %2051 = getelementptr half, ptr addrspace(1) %1976, i64 %2029, !dbg !64
  %2052 = getelementptr half, ptr addrspace(1) %1970, i64 %2034, !dbg !64
  %2053 = getelementptr half, ptr addrspace(1) %1972, i64 %2034, !dbg !64
  %2054 = getelementptr half, ptr addrspace(1) %1974, i64 %2034, !dbg !64
  %2055 = getelementptr half, ptr addrspace(1) %1976, i64 %2034, !dbg !64
  %2056 = getelementptr half, ptr addrspace(1) %1970, i64 %2039, !dbg !64
  %2057 = getelementptr half, ptr addrspace(1) %1972, i64 %2039, !dbg !64
  %2058 = getelementptr half, ptr addrspace(1) %1974, i64 %2039, !dbg !64
  %2059 = getelementptr half, ptr addrspace(1) %1976, i64 %2039, !dbg !64
  %2060 = getelementptr half, ptr addrspace(1) %1978, i64 %2025, !dbg !64
  %2061 = getelementptr half, ptr addrspace(1) %1980, i64 %2025, !dbg !64
  %2062 = getelementptr half, ptr addrspace(1) %1982, i64 %2025, !dbg !64
  %2063 = getelementptr half, ptr addrspace(1) %1984, i64 %2025, !dbg !64
  %2064 = getelementptr half, ptr addrspace(1) %1978, i64 %2029, !dbg !64
  %2065 = getelementptr half, ptr addrspace(1) %1980, i64 %2029, !dbg !64
  %2066 = getelementptr half, ptr addrspace(1) %1982, i64 %2029, !dbg !64
  %2067 = getelementptr half, ptr addrspace(1) %1984, i64 %2029, !dbg !64
  %2068 = getelementptr half, ptr addrspace(1) %1978, i64 %2034, !dbg !64
  %2069 = getelementptr half, ptr addrspace(1) %1980, i64 %2034, !dbg !64
  %2070 = getelementptr half, ptr addrspace(1) %1982, i64 %2034, !dbg !64
  %2071 = getelementptr half, ptr addrspace(1) %1984, i64 %2034, !dbg !64
  %2072 = getelementptr half, ptr addrspace(1) %1978, i64 %2039, !dbg !64
  %2073 = getelementptr half, ptr addrspace(1) %1980, i64 %2039, !dbg !64
  %2074 = getelementptr half, ptr addrspace(1) %1982, i64 %2039, !dbg !64
  %2075 = getelementptr half, ptr addrspace(1) %1984, i64 %2039, !dbg !64
  %2076 = getelementptr half, ptr addrspace(1) %1986, i64 %2025, !dbg !64
  %2077 = getelementptr half, ptr addrspace(1) %1988, i64 %2025, !dbg !64
  %2078 = getelementptr half, ptr addrspace(1) %1990, i64 %2025, !dbg !64
  %2079 = getelementptr half, ptr addrspace(1) %1992, i64 %2025, !dbg !64
  %2080 = getelementptr half, ptr addrspace(1) %1986, i64 %2029, !dbg !64
  %2081 = getelementptr half, ptr addrspace(1) %1988, i64 %2029, !dbg !64
  %2082 = getelementptr half, ptr addrspace(1) %1990, i64 %2029, !dbg !64
  %2083 = getelementptr half, ptr addrspace(1) %1992, i64 %2029, !dbg !64
  %2084 = getelementptr half, ptr addrspace(1) %1986, i64 %2034, !dbg !64
  %2085 = getelementptr half, ptr addrspace(1) %1988, i64 %2034, !dbg !64
  %2086 = getelementptr half, ptr addrspace(1) %1990, i64 %2034, !dbg !64
  %2087 = getelementptr half, ptr addrspace(1) %1992, i64 %2034, !dbg !64
  %2088 = getelementptr half, ptr addrspace(1) %1986, i64 %2039, !dbg !64
  %2089 = getelementptr half, ptr addrspace(1) %1988, i64 %2039, !dbg !64
  %2090 = getelementptr half, ptr addrspace(1) %1990, i64 %2039, !dbg !64
  %2091 = getelementptr half, ptr addrspace(1) %1992, i64 %2039, !dbg !64
  %2092 = getelementptr half, ptr addrspace(1) %1994, i64 %2025, !dbg !64
  %2093 = getelementptr half, ptr addrspace(1) %1996, i64 %2025, !dbg !64
  %2094 = getelementptr half, ptr addrspace(1) %1998, i64 %2025, !dbg !64
  %2095 = getelementptr half, ptr addrspace(1) %2000, i64 %2025, !dbg !64
  %2096 = getelementptr half, ptr addrspace(1) %1994, i64 %2029, !dbg !64
  %2097 = getelementptr half, ptr addrspace(1) %1996, i64 %2029, !dbg !64
  %2098 = getelementptr half, ptr addrspace(1) %1998, i64 %2029, !dbg !64
  %2099 = getelementptr half, ptr addrspace(1) %2000, i64 %2029, !dbg !64
  %2100 = getelementptr half, ptr addrspace(1) %1994, i64 %2034, !dbg !64
  %2101 = getelementptr half, ptr addrspace(1) %1996, i64 %2034, !dbg !64
  %2102 = getelementptr half, ptr addrspace(1) %1998, i64 %2034, !dbg !64
  %2103 = getelementptr half, ptr addrspace(1) %2000, i64 %2034, !dbg !64
  %2104 = getelementptr half, ptr addrspace(1) %1994, i64 %2039, !dbg !64
  %2105 = getelementptr half, ptr addrspace(1) %1996, i64 %2039, !dbg !64
  %2106 = getelementptr half, ptr addrspace(1) %1998, i64 %2039, !dbg !64
  %2107 = getelementptr half, ptr addrspace(1) %2000, i64 %2039, !dbg !64
  %2108 = getelementptr half, ptr addrspace(1) %2002, i64 %2025, !dbg !64
  %2109 = getelementptr half, ptr addrspace(1) %2004, i64 %2025, !dbg !64
  %2110 = getelementptr half, ptr addrspace(1) %2006, i64 %2025, !dbg !64
  %2111 = getelementptr half, ptr addrspace(1) %2008, i64 %2025, !dbg !64
  %2112 = getelementptr half, ptr addrspace(1) %2002, i64 %2029, !dbg !64
  %2113 = getelementptr half, ptr addrspace(1) %2004, i64 %2029, !dbg !64
  %2114 = getelementptr half, ptr addrspace(1) %2006, i64 %2029, !dbg !64
  %2115 = getelementptr half, ptr addrspace(1) %2008, i64 %2029, !dbg !64
  %2116 = getelementptr half, ptr addrspace(1) %2002, i64 %2034, !dbg !64
  %2117 = getelementptr half, ptr addrspace(1) %2004, i64 %2034, !dbg !64
  %2118 = getelementptr half, ptr addrspace(1) %2006, i64 %2034, !dbg !64
  %2119 = getelementptr half, ptr addrspace(1) %2008, i64 %2034, !dbg !64
  %2120 = getelementptr half, ptr addrspace(1) %2002, i64 %2039, !dbg !64
  %2121 = getelementptr half, ptr addrspace(1) %2004, i64 %2039, !dbg !64
  %2122 = getelementptr half, ptr addrspace(1) %2006, i64 %2039, !dbg !64
  %2123 = getelementptr half, ptr addrspace(1) %2008, i64 %2039, !dbg !64
  %2124 = getelementptr half, ptr addrspace(1) %2010, i64 %2025, !dbg !64
  %2125 = getelementptr half, ptr addrspace(1) %2012, i64 %2025, !dbg !64
  %2126 = getelementptr half, ptr addrspace(1) %2014, i64 %2025, !dbg !64
  %2127 = getelementptr half, ptr addrspace(1) %2016, i64 %2025, !dbg !64
  %2128 = getelementptr half, ptr addrspace(1) %2010, i64 %2029, !dbg !64
  %2129 = getelementptr half, ptr addrspace(1) %2012, i64 %2029, !dbg !64
  %2130 = getelementptr half, ptr addrspace(1) %2014, i64 %2029, !dbg !64
  %2131 = getelementptr half, ptr addrspace(1) %2016, i64 %2029, !dbg !64
  %2132 = getelementptr half, ptr addrspace(1) %2010, i64 %2034, !dbg !64
  %2133 = getelementptr half, ptr addrspace(1) %2012, i64 %2034, !dbg !64
  %2134 = getelementptr half, ptr addrspace(1) %2014, i64 %2034, !dbg !64
  %2135 = getelementptr half, ptr addrspace(1) %2016, i64 %2034, !dbg !64
  %2136 = getelementptr half, ptr addrspace(1) %2010, i64 %2039, !dbg !64
  %2137 = getelementptr half, ptr addrspace(1) %2012, i64 %2039, !dbg !64
  %2138 = getelementptr half, ptr addrspace(1) %2014, i64 %2039, !dbg !64
  %2139 = getelementptr half, ptr addrspace(1) %2016, i64 %2039, !dbg !64
  %2140 = getelementptr half, ptr addrspace(1) %2018, i64 %2025, !dbg !64
  %2141 = getelementptr half, ptr addrspace(1) %2020, i64 %2025, !dbg !64
  %2142 = getelementptr half, ptr addrspace(1) %2022, i64 %2025, !dbg !64
  %2143 = getelementptr half, ptr addrspace(1) %2024, i64 %2025, !dbg !64
  %2144 = getelementptr half, ptr addrspace(1) %2018, i64 %2029, !dbg !64
  %2145 = getelementptr half, ptr addrspace(1) %2020, i64 %2029, !dbg !64
  %2146 = getelementptr half, ptr addrspace(1) %2022, i64 %2029, !dbg !64
  %2147 = getelementptr half, ptr addrspace(1) %2024, i64 %2029, !dbg !64
  %2148 = getelementptr half, ptr addrspace(1) %2018, i64 %2034, !dbg !64
  %2149 = getelementptr half, ptr addrspace(1) %2020, i64 %2034, !dbg !64
  %2150 = getelementptr half, ptr addrspace(1) %2022, i64 %2034, !dbg !64
  %2151 = getelementptr half, ptr addrspace(1) %2024, i64 %2034, !dbg !64
  %2152 = getelementptr half, ptr addrspace(1) %2018, i64 %2039, !dbg !64
  %2153 = getelementptr half, ptr addrspace(1) %2020, i64 %2039, !dbg !64
  %2154 = getelementptr half, ptr addrspace(1) %2022, i64 %2039, !dbg !64
  %2155 = getelementptr half, ptr addrspace(1) %2024, i64 %2039, !dbg !64
  %2156 = icmp slt i32 %208, %9, !dbg !65
  %2157 = icmp slt i32 %209, %9, !dbg !65
  %2158 = icmp slt i32 %210, %9, !dbg !65
  %2159 = icmp slt i32 %211, %9, !dbg !65
  %2160 = extractelement <32 x i1> %202, i64 28, !dbg !66
  %2161 = and i1 %2156, %2160, !dbg !66
  %2162 = extractelement <32 x i1> %202, i64 29, !dbg !66
  %2163 = and i1 %2156, %2162, !dbg !66
  %2164 = extractelement <32 x i1> %202, i64 30, !dbg !66
  %2165 = and i1 %2156, %2164, !dbg !66
  %2166 = extractelement <32 x i1> %202, i64 31, !dbg !66
  %2167 = and i1 %2156, %2166, !dbg !66
  %2168 = and i1 %2157, %2160, !dbg !66
  %2169 = and i1 %2157, %2162, !dbg !66
  %2170 = and i1 %2157, %2164, !dbg !66
  %2171 = and i1 %2157, %2166, !dbg !66
  %2172 = and i1 %2158, %2160, !dbg !66
  %2173 = and i1 %2158, %2162, !dbg !66
  %2174 = and i1 %2158, %2164, !dbg !66
  %2175 = and i1 %2158, %2166, !dbg !66
  %2176 = and i1 %2159, %2160, !dbg !66
  %2177 = and i1 %2159, %2162, !dbg !66
  %2178 = and i1 %2159, %2164, !dbg !66
  %2179 = and i1 %2159, %2166, !dbg !66
  %2180 = extractelement <32 x i1> %202, i64 24, !dbg !66
  %2181 = and i1 %2156, %2180, !dbg !66
  %2182 = extractelement <32 x i1> %202, i64 25, !dbg !66
  %2183 = and i1 %2156, %2182, !dbg !66
  %2184 = extractelement <32 x i1> %202, i64 26, !dbg !66
  %2185 = and i1 %2156, %2184, !dbg !66
  %2186 = extractelement <32 x i1> %202, i64 27, !dbg !66
  %2187 = and i1 %2156, %2186, !dbg !66
  %2188 = and i1 %2157, %2180, !dbg !66
  %2189 = and i1 %2157, %2182, !dbg !66
  %2190 = and i1 %2157, %2184, !dbg !66
  %2191 = and i1 %2157, %2186, !dbg !66
  %2192 = and i1 %2158, %2180, !dbg !66
  %2193 = and i1 %2158, %2182, !dbg !66
  %2194 = and i1 %2158, %2184, !dbg !66
  %2195 = and i1 %2158, %2186, !dbg !66
  %2196 = and i1 %2159, %2180, !dbg !66
  %2197 = and i1 %2159, %2182, !dbg !66
  %2198 = and i1 %2159, %2184, !dbg !66
  %2199 = and i1 %2159, %2186, !dbg !66
  %2200 = extractelement <32 x i1> %202, i64 20, !dbg !66
  %2201 = and i1 %2156, %2200, !dbg !66
  %2202 = extractelement <32 x i1> %202, i64 21, !dbg !66
  %2203 = and i1 %2156, %2202, !dbg !66
  %2204 = extractelement <32 x i1> %202, i64 22, !dbg !66
  %2205 = and i1 %2156, %2204, !dbg !66
  %2206 = extractelement <32 x i1> %202, i64 23, !dbg !66
  %2207 = and i1 %2156, %2206, !dbg !66
  %2208 = and i1 %2157, %2200, !dbg !66
  %2209 = and i1 %2157, %2202, !dbg !66
  %2210 = and i1 %2157, %2204, !dbg !66
  %2211 = and i1 %2157, %2206, !dbg !66
  %2212 = and i1 %2158, %2200, !dbg !66
  %2213 = and i1 %2158, %2202, !dbg !66
  %2214 = and i1 %2158, %2204, !dbg !66
  %2215 = and i1 %2158, %2206, !dbg !66
  %2216 = and i1 %2159, %2200, !dbg !66
  %2217 = and i1 %2159, %2202, !dbg !66
  %2218 = and i1 %2159, %2204, !dbg !66
  %2219 = and i1 %2159, %2206, !dbg !66
  %2220 = extractelement <32 x i1> %202, i64 16, !dbg !66
  %2221 = and i1 %2156, %2220, !dbg !66
  %2222 = extractelement <32 x i1> %202, i64 17, !dbg !66
  %2223 = and i1 %2156, %2222, !dbg !66
  %2224 = extractelement <32 x i1> %202, i64 18, !dbg !66
  %2225 = and i1 %2156, %2224, !dbg !66
  %2226 = extractelement <32 x i1> %202, i64 19, !dbg !66
  %2227 = and i1 %2156, %2226, !dbg !66
  %2228 = and i1 %2157, %2220, !dbg !66
  %2229 = and i1 %2157, %2222, !dbg !66
  %2230 = and i1 %2157, %2224, !dbg !66
  %2231 = and i1 %2157, %2226, !dbg !66
  %2232 = and i1 %2158, %2220, !dbg !66
  %2233 = and i1 %2158, %2222, !dbg !66
  %2234 = and i1 %2158, %2224, !dbg !66
  %2235 = and i1 %2158, %2226, !dbg !66
  %2236 = and i1 %2159, %2220, !dbg !66
  %2237 = and i1 %2159, %2222, !dbg !66
  %2238 = and i1 %2159, %2224, !dbg !66
  %2239 = and i1 %2159, %2226, !dbg !66
  %2240 = extractelement <32 x i1> %202, i64 12, !dbg !66
  %2241 = and i1 %2156, %2240, !dbg !66
  %2242 = extractelement <32 x i1> %202, i64 13, !dbg !66
  %2243 = and i1 %2156, %2242, !dbg !66
  %2244 = extractelement <32 x i1> %202, i64 14, !dbg !66
  %2245 = and i1 %2156, %2244, !dbg !66
  %2246 = extractelement <32 x i1> %202, i64 15, !dbg !66
  %2247 = and i1 %2156, %2246, !dbg !66
  %2248 = and i1 %2157, %2240, !dbg !66
  %2249 = and i1 %2157, %2242, !dbg !66
  %2250 = and i1 %2157, %2244, !dbg !66
  %2251 = and i1 %2157, %2246, !dbg !66
  %2252 = and i1 %2158, %2240, !dbg !66
  %2253 = and i1 %2158, %2242, !dbg !66
  %2254 = and i1 %2158, %2244, !dbg !66
  %2255 = and i1 %2158, %2246, !dbg !66
  %2256 = and i1 %2159, %2240, !dbg !66
  %2257 = and i1 %2159, %2242, !dbg !66
  %2258 = and i1 %2159, %2244, !dbg !66
  %2259 = and i1 %2159, %2246, !dbg !66
  %2260 = extractelement <32 x i1> %202, i64 8, !dbg !66
  %2261 = and i1 %2156, %2260, !dbg !66
  %2262 = extractelement <32 x i1> %202, i64 9, !dbg !66
  %2263 = and i1 %2156, %2262, !dbg !66
  %2264 = extractelement <32 x i1> %202, i64 10, !dbg !66
  %2265 = and i1 %2156, %2264, !dbg !66
  %2266 = extractelement <32 x i1> %202, i64 11, !dbg !66
  %2267 = and i1 %2156, %2266, !dbg !66
  %2268 = and i1 %2157, %2260, !dbg !66
  %2269 = and i1 %2157, %2262, !dbg !66
  %2270 = and i1 %2157, %2264, !dbg !66
  %2271 = and i1 %2157, %2266, !dbg !66
  %2272 = and i1 %2158, %2260, !dbg !66
  %2273 = and i1 %2158, %2262, !dbg !66
  %2274 = and i1 %2158, %2264, !dbg !66
  %2275 = and i1 %2158, %2266, !dbg !66
  %2276 = and i1 %2159, %2260, !dbg !66
  %2277 = and i1 %2159, %2262, !dbg !66
  %2278 = and i1 %2159, %2264, !dbg !66
  %2279 = and i1 %2159, %2266, !dbg !66
  %2280 = extractelement <32 x i1> %202, i64 4, !dbg !66
  %2281 = and i1 %2156, %2280, !dbg !66
  %2282 = extractelement <32 x i1> %202, i64 5, !dbg !66
  %2283 = and i1 %2156, %2282, !dbg !66
  %2284 = extractelement <32 x i1> %202, i64 6, !dbg !66
  %2285 = and i1 %2156, %2284, !dbg !66
  %2286 = extractelement <32 x i1> %202, i64 7, !dbg !66
  %2287 = and i1 %2156, %2286, !dbg !66
  %2288 = and i1 %2157, %2280, !dbg !66
  %2289 = and i1 %2157, %2282, !dbg !66
  %2290 = and i1 %2157, %2284, !dbg !66
  %2291 = and i1 %2157, %2286, !dbg !66
  %2292 = and i1 %2158, %2280, !dbg !66
  %2293 = and i1 %2158, %2282, !dbg !66
  %2294 = and i1 %2158, %2284, !dbg !66
  %2295 = and i1 %2158, %2286, !dbg !66
  %2296 = and i1 %2159, %2280, !dbg !66
  %2297 = and i1 %2159, %2282, !dbg !66
  %2298 = and i1 %2159, %2284, !dbg !66
  %2299 = and i1 %2159, %2286, !dbg !66
  %2300 = extractelement <32 x i1> %202, i64 0, !dbg !66
  %2301 = and i1 %2156, %2300, !dbg !66
  %2302 = extractelement <32 x i1> %202, i64 1, !dbg !66
  %2303 = and i1 %2156, %2302, !dbg !66
  %2304 = extractelement <32 x i1> %202, i64 2, !dbg !66
  %2305 = and i1 %2156, %2304, !dbg !66
  %2306 = extractelement <32 x i1> %202, i64 3, !dbg !66
  %2307 = and i1 %2156, %2306, !dbg !66
  %2308 = and i1 %2157, %2300, !dbg !66
  %2309 = and i1 %2157, %2302, !dbg !66
  %2310 = and i1 %2157, %2304, !dbg !66
  %2311 = and i1 %2157, %2306, !dbg !66
  %2312 = and i1 %2158, %2300, !dbg !66
  %2313 = and i1 %2158, %2302, !dbg !66
  %2314 = and i1 %2158, %2304, !dbg !66
  %2315 = and i1 %2158, %2306, !dbg !66
  %2316 = and i1 %2159, %2300, !dbg !66
  %2317 = and i1 %2159, %2302, !dbg !66
  %2318 = and i1 %2159, %2304, !dbg !66
  %2319 = and i1 %2159, %2306, !dbg !66
  br i1 %2161, label %2320, label %2326, !dbg !67

2320:                                             ; preds = %._crit_edge
  %2321 = extractelement <4 x float> %1172, i64 0, !dbg !58
  %2322 = fmul float %262, %2321, !dbg !59
  %2323 = fmul float %266, %2322, !dbg !60
  %2324 = fptrunc float %2323 to half, !dbg !61
  %2325 = getelementptr half, ptr addrspace(1) %1962, i64 %2025, !dbg !64
  store half %2324, ptr addrspace(1) %2325, align 2, !dbg !67
  br label %2326, !dbg !67

2326:                                             ; preds = %2320, %._crit_edge
  br i1 %2163, label %2327, label %2328, !dbg !67

2327:                                             ; preds = %2326
  store half %1802, ptr addrspace(1) %2026, align 2, !dbg !67
  br label %2328, !dbg !67

2328:                                             ; preds = %2327, %2326
  br i1 %2165, label %2329, label %2330, !dbg !67

2329:                                             ; preds = %2328
  store half %1803, ptr addrspace(1) %2027, align 2, !dbg !67
  br label %2330, !dbg !67

2330:                                             ; preds = %2329, %2328
  br i1 %2167, label %2331, label %2332, !dbg !67

2331:                                             ; preds = %2330
  store half %1804, ptr addrspace(1) %2028, align 2, !dbg !67
  br label %2332, !dbg !67

2332:                                             ; preds = %2331, %2330
  br i1 %2168, label %2333, label %2334, !dbg !67

2333:                                             ; preds = %2332
  store half %1805, ptr addrspace(1) %2030, align 2, !dbg !67
  br label %2334, !dbg !67

2334:                                             ; preds = %2333, %2332
  br i1 %2169, label %2335, label %2336, !dbg !67

2335:                                             ; preds = %2334
  store half %1806, ptr addrspace(1) %2031, align 2, !dbg !67
  br label %2336, !dbg !67

2336:                                             ; preds = %2335, %2334
  br i1 %2170, label %2337, label %2338, !dbg !67

2337:                                             ; preds = %2336
  store half %1807, ptr addrspace(1) %2032, align 2, !dbg !67
  br label %2338, !dbg !67

2338:                                             ; preds = %2337, %2336
  br i1 %2171, label %2339, label %2340, !dbg !67

2339:                                             ; preds = %2338
  store half %1808, ptr addrspace(1) %2033, align 2, !dbg !67
  br label %2340, !dbg !67

2340:                                             ; preds = %2339, %2338
  br i1 %2172, label %2341, label %2342, !dbg !67

2341:                                             ; preds = %2340
  store half %1809, ptr addrspace(1) %2035, align 2, !dbg !67
  br label %2342, !dbg !67

2342:                                             ; preds = %2341, %2340
  br i1 %2173, label %2343, label %2344, !dbg !67

2343:                                             ; preds = %2342
  store half %1810, ptr addrspace(1) %2036, align 2, !dbg !67
  br label %2344, !dbg !67

2344:                                             ; preds = %2343, %2342
  br i1 %2174, label %2345, label %2346, !dbg !67

2345:                                             ; preds = %2344
  store half %1811, ptr addrspace(1) %2037, align 2, !dbg !67
  br label %2346, !dbg !67

2346:                                             ; preds = %2345, %2344
  br i1 %2175, label %2347, label %2348, !dbg !67

2347:                                             ; preds = %2346
  store half %1812, ptr addrspace(1) %2038, align 2, !dbg !67
  br label %2348, !dbg !67

2348:                                             ; preds = %2347, %2346
  br i1 %2176, label %2349, label %2350, !dbg !67

2349:                                             ; preds = %2348
  store half %1813, ptr addrspace(1) %2040, align 2, !dbg !67
  br label %2350, !dbg !67

2350:                                             ; preds = %2349, %2348
  br i1 %2177, label %2351, label %2352, !dbg !67

2351:                                             ; preds = %2350
  store half %1814, ptr addrspace(1) %2041, align 2, !dbg !67
  br label %2352, !dbg !67

2352:                                             ; preds = %2351, %2350
  br i1 %2178, label %2353, label %2354, !dbg !67

2353:                                             ; preds = %2352
  store half %1815, ptr addrspace(1) %2042, align 2, !dbg !67
  br label %2354, !dbg !67

2354:                                             ; preds = %2353, %2352
  br i1 %2179, label %2355, label %2356, !dbg !67

2355:                                             ; preds = %2354
  store half %1816, ptr addrspace(1) %2043, align 2, !dbg !67
  br label %2356, !dbg !67

2356:                                             ; preds = %2355, %2354
  br i1 %2181, label %2357, label %2358, !dbg !67

2357:                                             ; preds = %2356
  store half %1817, ptr addrspace(1) %2044, align 2, !dbg !67
  br label %2358, !dbg !67

2358:                                             ; preds = %2357, %2356
  br i1 %2183, label %2359, label %2360, !dbg !67

2359:                                             ; preds = %2358
  store half %1818, ptr addrspace(1) %2045, align 2, !dbg !67
  br label %2360, !dbg !67

2360:                                             ; preds = %2359, %2358
  br i1 %2185, label %2361, label %2362, !dbg !67

2361:                                             ; preds = %2360
  store half %1819, ptr addrspace(1) %2046, align 2, !dbg !67
  br label %2362, !dbg !67

2362:                                             ; preds = %2361, %2360
  br i1 %2187, label %2363, label %2364, !dbg !67

2363:                                             ; preds = %2362
  store half %1820, ptr addrspace(1) %2047, align 2, !dbg !67
  br label %2364, !dbg !67

2364:                                             ; preds = %2363, %2362
  br i1 %2188, label %2365, label %2366, !dbg !67

2365:                                             ; preds = %2364
  store half %1821, ptr addrspace(1) %2048, align 2, !dbg !67
  br label %2366, !dbg !67

2366:                                             ; preds = %2365, %2364
  br i1 %2189, label %2367, label %2368, !dbg !67

2367:                                             ; preds = %2366
  store half %1822, ptr addrspace(1) %2049, align 2, !dbg !67
  br label %2368, !dbg !67

2368:                                             ; preds = %2367, %2366
  br i1 %2190, label %2369, label %2370, !dbg !67

2369:                                             ; preds = %2368
  store half %1823, ptr addrspace(1) %2050, align 2, !dbg !67
  br label %2370, !dbg !67

2370:                                             ; preds = %2369, %2368
  br i1 %2191, label %2371, label %2372, !dbg !67

2371:                                             ; preds = %2370
  store half %1824, ptr addrspace(1) %2051, align 2, !dbg !67
  br label %2372, !dbg !67

2372:                                             ; preds = %2371, %2370
  br i1 %2192, label %2373, label %2374, !dbg !67

2373:                                             ; preds = %2372
  store half %1825, ptr addrspace(1) %2052, align 2, !dbg !67
  br label %2374, !dbg !67

2374:                                             ; preds = %2373, %2372
  br i1 %2193, label %2375, label %2376, !dbg !67

2375:                                             ; preds = %2374
  store half %1826, ptr addrspace(1) %2053, align 2, !dbg !67
  br label %2376, !dbg !67

2376:                                             ; preds = %2375, %2374
  br i1 %2194, label %2377, label %2378, !dbg !67

2377:                                             ; preds = %2376
  store half %1827, ptr addrspace(1) %2054, align 2, !dbg !67
  br label %2378, !dbg !67

2378:                                             ; preds = %2377, %2376
  br i1 %2195, label %2379, label %2380, !dbg !67

2379:                                             ; preds = %2378
  store half %1828, ptr addrspace(1) %2055, align 2, !dbg !67
  br label %2380, !dbg !67

2380:                                             ; preds = %2379, %2378
  br i1 %2196, label %2381, label %2382, !dbg !67

2381:                                             ; preds = %2380
  store half %1829, ptr addrspace(1) %2056, align 2, !dbg !67
  br label %2382, !dbg !67

2382:                                             ; preds = %2381, %2380
  br i1 %2197, label %2383, label %2384, !dbg !67

2383:                                             ; preds = %2382
  store half %1830, ptr addrspace(1) %2057, align 2, !dbg !67
  br label %2384, !dbg !67

2384:                                             ; preds = %2383, %2382
  br i1 %2198, label %2385, label %2386, !dbg !67

2385:                                             ; preds = %2384
  store half %1831, ptr addrspace(1) %2058, align 2, !dbg !67
  br label %2386, !dbg !67

2386:                                             ; preds = %2385, %2384
  br i1 %2199, label %2387, label %2388, !dbg !67

2387:                                             ; preds = %2386
  store half %1832, ptr addrspace(1) %2059, align 2, !dbg !67
  br label %2388, !dbg !67

2388:                                             ; preds = %2387, %2386
  br i1 %2201, label %2389, label %2390, !dbg !67

2389:                                             ; preds = %2388
  store half %1833, ptr addrspace(1) %2060, align 2, !dbg !67
  br label %2390, !dbg !67

2390:                                             ; preds = %2389, %2388
  br i1 %2203, label %2391, label %2392, !dbg !67

2391:                                             ; preds = %2390
  store half %1834, ptr addrspace(1) %2061, align 2, !dbg !67
  br label %2392, !dbg !67

2392:                                             ; preds = %2391, %2390
  br i1 %2205, label %2393, label %2394, !dbg !67

2393:                                             ; preds = %2392
  store half %1835, ptr addrspace(1) %2062, align 2, !dbg !67
  br label %2394, !dbg !67

2394:                                             ; preds = %2393, %2392
  br i1 %2207, label %2395, label %2396, !dbg !67

2395:                                             ; preds = %2394
  store half %1836, ptr addrspace(1) %2063, align 2, !dbg !67
  br label %2396, !dbg !67

2396:                                             ; preds = %2395, %2394
  br i1 %2208, label %2397, label %2398, !dbg !67

2397:                                             ; preds = %2396
  store half %1837, ptr addrspace(1) %2064, align 2, !dbg !67
  br label %2398, !dbg !67

2398:                                             ; preds = %2397, %2396
  br i1 %2209, label %2399, label %2400, !dbg !67

2399:                                             ; preds = %2398
  store half %1838, ptr addrspace(1) %2065, align 2, !dbg !67
  br label %2400, !dbg !67

2400:                                             ; preds = %2399, %2398
  br i1 %2210, label %2401, label %2402, !dbg !67

2401:                                             ; preds = %2400
  store half %1839, ptr addrspace(1) %2066, align 2, !dbg !67
  br label %2402, !dbg !67

2402:                                             ; preds = %2401, %2400
  br i1 %2211, label %2403, label %2404, !dbg !67

2403:                                             ; preds = %2402
  store half %1840, ptr addrspace(1) %2067, align 2, !dbg !67
  br label %2404, !dbg !67

2404:                                             ; preds = %2403, %2402
  br i1 %2212, label %2405, label %2406, !dbg !67

2405:                                             ; preds = %2404
  store half %1841, ptr addrspace(1) %2068, align 2, !dbg !67
  br label %2406, !dbg !67

2406:                                             ; preds = %2405, %2404
  br i1 %2213, label %2407, label %2408, !dbg !67

2407:                                             ; preds = %2406
  store half %1842, ptr addrspace(1) %2069, align 2, !dbg !67
  br label %2408, !dbg !67

2408:                                             ; preds = %2407, %2406
  br i1 %2214, label %2409, label %2410, !dbg !67

2409:                                             ; preds = %2408
  store half %1843, ptr addrspace(1) %2070, align 2, !dbg !67
  br label %2410, !dbg !67

2410:                                             ; preds = %2409, %2408
  br i1 %2215, label %2411, label %2412, !dbg !67

2411:                                             ; preds = %2410
  store half %1844, ptr addrspace(1) %2071, align 2, !dbg !67
  br label %2412, !dbg !67

2412:                                             ; preds = %2411, %2410
  br i1 %2216, label %2413, label %2414, !dbg !67

2413:                                             ; preds = %2412
  store half %1845, ptr addrspace(1) %2072, align 2, !dbg !67
  br label %2414, !dbg !67

2414:                                             ; preds = %2413, %2412
  br i1 %2217, label %2415, label %2416, !dbg !67

2415:                                             ; preds = %2414
  store half %1846, ptr addrspace(1) %2073, align 2, !dbg !67
  br label %2416, !dbg !67

2416:                                             ; preds = %2415, %2414
  br i1 %2218, label %2417, label %2418, !dbg !67

2417:                                             ; preds = %2416
  store half %1847, ptr addrspace(1) %2074, align 2, !dbg !67
  br label %2418, !dbg !67

2418:                                             ; preds = %2417, %2416
  br i1 %2219, label %2419, label %2420, !dbg !67

2419:                                             ; preds = %2418
  store half %1848, ptr addrspace(1) %2075, align 2, !dbg !67
  br label %2420, !dbg !67

2420:                                             ; preds = %2419, %2418
  br i1 %2221, label %2421, label %2422, !dbg !67

2421:                                             ; preds = %2420
  store half %1849, ptr addrspace(1) %2076, align 2, !dbg !67
  br label %2422, !dbg !67

2422:                                             ; preds = %2421, %2420
  br i1 %2223, label %2423, label %2424, !dbg !67

2423:                                             ; preds = %2422
  store half %1850, ptr addrspace(1) %2077, align 2, !dbg !67
  br label %2424, !dbg !67

2424:                                             ; preds = %2423, %2422
  br i1 %2225, label %2425, label %2426, !dbg !67

2425:                                             ; preds = %2424
  store half %1851, ptr addrspace(1) %2078, align 2, !dbg !67
  br label %2426, !dbg !67

2426:                                             ; preds = %2425, %2424
  br i1 %2227, label %2427, label %2428, !dbg !67

2427:                                             ; preds = %2426
  store half %1852, ptr addrspace(1) %2079, align 2, !dbg !67
  br label %2428, !dbg !67

2428:                                             ; preds = %2427, %2426
  br i1 %2228, label %2429, label %2430, !dbg !67

2429:                                             ; preds = %2428
  store half %1853, ptr addrspace(1) %2080, align 2, !dbg !67
  br label %2430, !dbg !67

2430:                                             ; preds = %2429, %2428
  br i1 %2229, label %2431, label %2432, !dbg !67

2431:                                             ; preds = %2430
  store half %1854, ptr addrspace(1) %2081, align 2, !dbg !67
  br label %2432, !dbg !67

2432:                                             ; preds = %2431, %2430
  br i1 %2230, label %2433, label %2434, !dbg !67

2433:                                             ; preds = %2432
  store half %1855, ptr addrspace(1) %2082, align 2, !dbg !67
  br label %2434, !dbg !67

2434:                                             ; preds = %2433, %2432
  br i1 %2231, label %2435, label %2436, !dbg !67

2435:                                             ; preds = %2434
  store half %1856, ptr addrspace(1) %2083, align 2, !dbg !67
  br label %2436, !dbg !67

2436:                                             ; preds = %2435, %2434
  br i1 %2232, label %2437, label %2438, !dbg !67

2437:                                             ; preds = %2436
  store half %1857, ptr addrspace(1) %2084, align 2, !dbg !67
  br label %2438, !dbg !67

2438:                                             ; preds = %2437, %2436
  br i1 %2233, label %2439, label %2440, !dbg !67

2439:                                             ; preds = %2438
  store half %1858, ptr addrspace(1) %2085, align 2, !dbg !67
  br label %2440, !dbg !67

2440:                                             ; preds = %2439, %2438
  br i1 %2234, label %2441, label %2442, !dbg !67

2441:                                             ; preds = %2440
  store half %1859, ptr addrspace(1) %2086, align 2, !dbg !67
  br label %2442, !dbg !67

2442:                                             ; preds = %2441, %2440
  br i1 %2235, label %2443, label %2444, !dbg !67

2443:                                             ; preds = %2442
  store half %1860, ptr addrspace(1) %2087, align 2, !dbg !67
  br label %2444, !dbg !67

2444:                                             ; preds = %2443, %2442
  br i1 %2236, label %2445, label %2446, !dbg !67

2445:                                             ; preds = %2444
  store half %1861, ptr addrspace(1) %2088, align 2, !dbg !67
  br label %2446, !dbg !67

2446:                                             ; preds = %2445, %2444
  br i1 %2237, label %2447, label %2448, !dbg !67

2447:                                             ; preds = %2446
  store half %1862, ptr addrspace(1) %2089, align 2, !dbg !67
  br label %2448, !dbg !67

2448:                                             ; preds = %2447, %2446
  br i1 %2238, label %2449, label %2450, !dbg !67

2449:                                             ; preds = %2448
  store half %1863, ptr addrspace(1) %2090, align 2, !dbg !67
  br label %2450, !dbg !67

2450:                                             ; preds = %2449, %2448
  br i1 %2239, label %2451, label %2452, !dbg !67

2451:                                             ; preds = %2450
  store half %1864, ptr addrspace(1) %2091, align 2, !dbg !67
  br label %2452, !dbg !67

2452:                                             ; preds = %2451, %2450
  br i1 %2241, label %2453, label %2454, !dbg !67

2453:                                             ; preds = %2452
  store half %1865, ptr addrspace(1) %2092, align 2, !dbg !67
  br label %2454, !dbg !67

2454:                                             ; preds = %2453, %2452
  br i1 %2243, label %2455, label %2456, !dbg !67

2455:                                             ; preds = %2454
  store half %1866, ptr addrspace(1) %2093, align 2, !dbg !67
  br label %2456, !dbg !67

2456:                                             ; preds = %2455, %2454
  br i1 %2245, label %2457, label %2458, !dbg !67

2457:                                             ; preds = %2456
  store half %1867, ptr addrspace(1) %2094, align 2, !dbg !67
  br label %2458, !dbg !67

2458:                                             ; preds = %2457, %2456
  br i1 %2247, label %2459, label %2460, !dbg !67

2459:                                             ; preds = %2458
  store half %1868, ptr addrspace(1) %2095, align 2, !dbg !67
  br label %2460, !dbg !67

2460:                                             ; preds = %2459, %2458
  br i1 %2248, label %2461, label %2462, !dbg !67

2461:                                             ; preds = %2460
  store half %1869, ptr addrspace(1) %2096, align 2, !dbg !67
  br label %2462, !dbg !67

2462:                                             ; preds = %2461, %2460
  br i1 %2249, label %2463, label %2464, !dbg !67

2463:                                             ; preds = %2462
  store half %1870, ptr addrspace(1) %2097, align 2, !dbg !67
  br label %2464, !dbg !67

2464:                                             ; preds = %2463, %2462
  br i1 %2250, label %2465, label %2466, !dbg !67

2465:                                             ; preds = %2464
  store half %1871, ptr addrspace(1) %2098, align 2, !dbg !67
  br label %2466, !dbg !67

2466:                                             ; preds = %2465, %2464
  br i1 %2251, label %2467, label %2468, !dbg !67

2467:                                             ; preds = %2466
  store half %1872, ptr addrspace(1) %2099, align 2, !dbg !67
  br label %2468, !dbg !67

2468:                                             ; preds = %2467, %2466
  br i1 %2252, label %2469, label %2470, !dbg !67

2469:                                             ; preds = %2468
  store half %1873, ptr addrspace(1) %2100, align 2, !dbg !67
  br label %2470, !dbg !67

2470:                                             ; preds = %2469, %2468
  br i1 %2253, label %2471, label %2472, !dbg !67

2471:                                             ; preds = %2470
  store half %1874, ptr addrspace(1) %2101, align 2, !dbg !67
  br label %2472, !dbg !67

2472:                                             ; preds = %2471, %2470
  br i1 %2254, label %2473, label %2474, !dbg !67

2473:                                             ; preds = %2472
  store half %1875, ptr addrspace(1) %2102, align 2, !dbg !67
  br label %2474, !dbg !67

2474:                                             ; preds = %2473, %2472
  br i1 %2255, label %2475, label %2476, !dbg !67

2475:                                             ; preds = %2474
  store half %1876, ptr addrspace(1) %2103, align 2, !dbg !67
  br label %2476, !dbg !67

2476:                                             ; preds = %2475, %2474
  br i1 %2256, label %2477, label %2478, !dbg !67

2477:                                             ; preds = %2476
  store half %1877, ptr addrspace(1) %2104, align 2, !dbg !67
  br label %2478, !dbg !67

2478:                                             ; preds = %2477, %2476
  br i1 %2257, label %2479, label %2480, !dbg !67

2479:                                             ; preds = %2478
  store half %1878, ptr addrspace(1) %2105, align 2, !dbg !67
  br label %2480, !dbg !67

2480:                                             ; preds = %2479, %2478
  br i1 %2258, label %2481, label %2482, !dbg !67

2481:                                             ; preds = %2480
  store half %1879, ptr addrspace(1) %2106, align 2, !dbg !67
  br label %2482, !dbg !67

2482:                                             ; preds = %2481, %2480
  br i1 %2259, label %2483, label %2484, !dbg !67

2483:                                             ; preds = %2482
  store half %1880, ptr addrspace(1) %2107, align 2, !dbg !67
  br label %2484, !dbg !67

2484:                                             ; preds = %2483, %2482
  br i1 %2261, label %2485, label %2486, !dbg !67

2485:                                             ; preds = %2484
  store half %1881, ptr addrspace(1) %2108, align 2, !dbg !67
  br label %2486, !dbg !67

2486:                                             ; preds = %2485, %2484
  br i1 %2263, label %2487, label %2488, !dbg !67

2487:                                             ; preds = %2486
  store half %1882, ptr addrspace(1) %2109, align 2, !dbg !67
  br label %2488, !dbg !67

2488:                                             ; preds = %2487, %2486
  br i1 %2265, label %2489, label %2490, !dbg !67

2489:                                             ; preds = %2488
  store half %1883, ptr addrspace(1) %2110, align 2, !dbg !67
  br label %2490, !dbg !67

2490:                                             ; preds = %2489, %2488
  br i1 %2267, label %2491, label %2492, !dbg !67

2491:                                             ; preds = %2490
  store half %1884, ptr addrspace(1) %2111, align 2, !dbg !67
  br label %2492, !dbg !67

2492:                                             ; preds = %2491, %2490
  br i1 %2268, label %2493, label %2494, !dbg !67

2493:                                             ; preds = %2492
  store half %1885, ptr addrspace(1) %2112, align 2, !dbg !67
  br label %2494, !dbg !67

2494:                                             ; preds = %2493, %2492
  br i1 %2269, label %2495, label %2496, !dbg !67

2495:                                             ; preds = %2494
  store half %1886, ptr addrspace(1) %2113, align 2, !dbg !67
  br label %2496, !dbg !67

2496:                                             ; preds = %2495, %2494
  br i1 %2270, label %2497, label %2498, !dbg !67

2497:                                             ; preds = %2496
  store half %1887, ptr addrspace(1) %2114, align 2, !dbg !67
  br label %2498, !dbg !67

2498:                                             ; preds = %2497, %2496
  br i1 %2271, label %2499, label %2500, !dbg !67

2499:                                             ; preds = %2498
  store half %1888, ptr addrspace(1) %2115, align 2, !dbg !67
  br label %2500, !dbg !67

2500:                                             ; preds = %2499, %2498
  br i1 %2272, label %2501, label %2502, !dbg !67

2501:                                             ; preds = %2500
  store half %1889, ptr addrspace(1) %2116, align 2, !dbg !67
  br label %2502, !dbg !67

2502:                                             ; preds = %2501, %2500
  br i1 %2273, label %2503, label %2504, !dbg !67

2503:                                             ; preds = %2502
  store half %1890, ptr addrspace(1) %2117, align 2, !dbg !67
  br label %2504, !dbg !67

2504:                                             ; preds = %2503, %2502
  br i1 %2274, label %2505, label %2506, !dbg !67

2505:                                             ; preds = %2504
  store half %1891, ptr addrspace(1) %2118, align 2, !dbg !67
  br label %2506, !dbg !67

2506:                                             ; preds = %2505, %2504
  br i1 %2275, label %2507, label %2508, !dbg !67

2507:                                             ; preds = %2506
  store half %1892, ptr addrspace(1) %2119, align 2, !dbg !67
  br label %2508, !dbg !67

2508:                                             ; preds = %2507, %2506
  br i1 %2276, label %2509, label %2510, !dbg !67

2509:                                             ; preds = %2508
  store half %1893, ptr addrspace(1) %2120, align 2, !dbg !67
  br label %2510, !dbg !67

2510:                                             ; preds = %2509, %2508
  br i1 %2277, label %2511, label %2512, !dbg !67

2511:                                             ; preds = %2510
  store half %1894, ptr addrspace(1) %2121, align 2, !dbg !67
  br label %2512, !dbg !67

2512:                                             ; preds = %2511, %2510
  br i1 %2278, label %2513, label %2514, !dbg !67

2513:                                             ; preds = %2512
  store half %1895, ptr addrspace(1) %2122, align 2, !dbg !67
  br label %2514, !dbg !67

2514:                                             ; preds = %2513, %2512
  br i1 %2279, label %2515, label %2516, !dbg !67

2515:                                             ; preds = %2514
  store half %1896, ptr addrspace(1) %2123, align 2, !dbg !67
  br label %2516, !dbg !67

2516:                                             ; preds = %2515, %2514
  br i1 %2281, label %2517, label %2518, !dbg !67

2517:                                             ; preds = %2516
  store half %1897, ptr addrspace(1) %2124, align 2, !dbg !67
  br label %2518, !dbg !67

2518:                                             ; preds = %2517, %2516
  br i1 %2283, label %2519, label %2520, !dbg !67

2519:                                             ; preds = %2518
  store half %1898, ptr addrspace(1) %2125, align 2, !dbg !67
  br label %2520, !dbg !67

2520:                                             ; preds = %2519, %2518
  br i1 %2285, label %2521, label %2522, !dbg !67

2521:                                             ; preds = %2520
  store half %1899, ptr addrspace(1) %2126, align 2, !dbg !67
  br label %2522, !dbg !67

2522:                                             ; preds = %2521, %2520
  br i1 %2287, label %2523, label %2524, !dbg !67

2523:                                             ; preds = %2522
  store half %1900, ptr addrspace(1) %2127, align 2, !dbg !67
  br label %2524, !dbg !67

2524:                                             ; preds = %2523, %2522
  br i1 %2288, label %2525, label %2526, !dbg !67

2525:                                             ; preds = %2524
  store half %1901, ptr addrspace(1) %2128, align 2, !dbg !67
  br label %2526, !dbg !67

2526:                                             ; preds = %2525, %2524
  br i1 %2289, label %2527, label %2528, !dbg !67

2527:                                             ; preds = %2526
  store half %1902, ptr addrspace(1) %2129, align 2, !dbg !67
  br label %2528, !dbg !67

2528:                                             ; preds = %2527, %2526
  br i1 %2290, label %2529, label %2530, !dbg !67

2529:                                             ; preds = %2528
  store half %1903, ptr addrspace(1) %2130, align 2, !dbg !67
  br label %2530, !dbg !67

2530:                                             ; preds = %2529, %2528
  br i1 %2291, label %2531, label %2532, !dbg !67

2531:                                             ; preds = %2530
  store half %1904, ptr addrspace(1) %2131, align 2, !dbg !67
  br label %2532, !dbg !67

2532:                                             ; preds = %2531, %2530
  br i1 %2292, label %2533, label %2534, !dbg !67

2533:                                             ; preds = %2532
  store half %1905, ptr addrspace(1) %2132, align 2, !dbg !67
  br label %2534, !dbg !67

2534:                                             ; preds = %2533, %2532
  br i1 %2293, label %2535, label %2536, !dbg !67

2535:                                             ; preds = %2534
  store half %1906, ptr addrspace(1) %2133, align 2, !dbg !67
  br label %2536, !dbg !67

2536:                                             ; preds = %2535, %2534
  br i1 %2294, label %2537, label %2538, !dbg !67

2537:                                             ; preds = %2536
  store half %1907, ptr addrspace(1) %2134, align 2, !dbg !67
  br label %2538, !dbg !67

2538:                                             ; preds = %2537, %2536
  br i1 %2295, label %2539, label %2540, !dbg !67

2539:                                             ; preds = %2538
  store half %1908, ptr addrspace(1) %2135, align 2, !dbg !67
  br label %2540, !dbg !67

2540:                                             ; preds = %2539, %2538
  br i1 %2296, label %2541, label %2542, !dbg !67

2541:                                             ; preds = %2540
  store half %1909, ptr addrspace(1) %2136, align 2, !dbg !67
  br label %2542, !dbg !67

2542:                                             ; preds = %2541, %2540
  br i1 %2297, label %2543, label %2544, !dbg !67

2543:                                             ; preds = %2542
  store half %1910, ptr addrspace(1) %2137, align 2, !dbg !67
  br label %2544, !dbg !67

2544:                                             ; preds = %2543, %2542
  br i1 %2298, label %2545, label %2546, !dbg !67

2545:                                             ; preds = %2544
  store half %1911, ptr addrspace(1) %2138, align 2, !dbg !67
  br label %2546, !dbg !67

2546:                                             ; preds = %2545, %2544
  br i1 %2299, label %2547, label %2548, !dbg !67

2547:                                             ; preds = %2546
  store half %1912, ptr addrspace(1) %2139, align 2, !dbg !67
  br label %2548, !dbg !67

2548:                                             ; preds = %2547, %2546
  br i1 %2301, label %2549, label %2550, !dbg !67

2549:                                             ; preds = %2548
  store half %1913, ptr addrspace(1) %2140, align 2, !dbg !67
  br label %2550, !dbg !67

2550:                                             ; preds = %2549, %2548
  br i1 %2303, label %2551, label %2552, !dbg !67

2551:                                             ; preds = %2550
  store half %1914, ptr addrspace(1) %2141, align 2, !dbg !67
  br label %2552, !dbg !67

2552:                                             ; preds = %2551, %2550
  br i1 %2305, label %2553, label %2554, !dbg !67

2553:                                             ; preds = %2552
  store half %1915, ptr addrspace(1) %2142, align 2, !dbg !67
  br label %2554, !dbg !67

2554:                                             ; preds = %2553, %2552
  br i1 %2307, label %2555, label %2556, !dbg !67

2555:                                             ; preds = %2554
  store half %1916, ptr addrspace(1) %2143, align 2, !dbg !67
  br label %2556, !dbg !67

2556:                                             ; preds = %2555, %2554
  br i1 %2308, label %2557, label %2558, !dbg !67

2557:                                             ; preds = %2556
  store half %1917, ptr addrspace(1) %2144, align 2, !dbg !67
  br label %2558, !dbg !67

2558:                                             ; preds = %2557, %2556
  br i1 %2309, label %2559, label %2560, !dbg !67

2559:                                             ; preds = %2558
  store half %1918, ptr addrspace(1) %2145, align 2, !dbg !67
  br label %2560, !dbg !67

2560:                                             ; preds = %2559, %2558
  br i1 %2310, label %2561, label %2562, !dbg !67

2561:                                             ; preds = %2560
  store half %1919, ptr addrspace(1) %2146, align 2, !dbg !67
  br label %2562, !dbg !67

2562:                                             ; preds = %2561, %2560
  br i1 %2311, label %2563, label %2564, !dbg !67

2563:                                             ; preds = %2562
  store half %1920, ptr addrspace(1) %2147, align 2, !dbg !67
  br label %2564, !dbg !67

2564:                                             ; preds = %2563, %2562
  br i1 %2312, label %2565, label %2566, !dbg !67

2565:                                             ; preds = %2564
  store half %1921, ptr addrspace(1) %2148, align 2, !dbg !67
  br label %2566, !dbg !67

2566:                                             ; preds = %2565, %2564
  br i1 %2313, label %2567, label %2568, !dbg !67

2567:                                             ; preds = %2566
  store half %1922, ptr addrspace(1) %2149, align 2, !dbg !67
  br label %2568, !dbg !67

2568:                                             ; preds = %2567, %2566
  br i1 %2314, label %2569, label %2570, !dbg !67

2569:                                             ; preds = %2568
  store half %1923, ptr addrspace(1) %2150, align 2, !dbg !67
  br label %2570, !dbg !67

2570:                                             ; preds = %2569, %2568
  br i1 %2315, label %2571, label %2572, !dbg !67

2571:                                             ; preds = %2570
  store half %1924, ptr addrspace(1) %2151, align 2, !dbg !67
  br label %2572, !dbg !67

2572:                                             ; preds = %2571, %2570
  br i1 %2316, label %2573, label %2574, !dbg !67

2573:                                             ; preds = %2572
  store half %1925, ptr addrspace(1) %2152, align 2, !dbg !67
  br label %2574, !dbg !67

2574:                                             ; preds = %2573, %2572
  br i1 %2317, label %2575, label %2576, !dbg !67

2575:                                             ; preds = %2574
  store half %1926, ptr addrspace(1) %2153, align 2, !dbg !67
  br label %2576, !dbg !67

2576:                                             ; preds = %2575, %2574
  br i1 %2318, label %2577, label %2578, !dbg !67

2577:                                             ; preds = %2576
  store half %1927, ptr addrspace(1) %2154, align 2, !dbg !67
  br label %2578, !dbg !67

2578:                                             ; preds = %2577, %2576
  br i1 %2319, label %2579, label %35, !dbg !67

2579:                                             ; preds = %2578
  store half %1928, ptr addrspace(1) %2155, align 2, !dbg !67
  br label %35, !dbg !67
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #2

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <4 x float> @llvm.amdgcn.mfma.f32.16x16x32.fp8.fp8(i64, i64, <4 x float>, i32 immarg, i32 immarg, i32 immarg) #3

attributes #0 = { "amdgpu-flat-work-group-size"="1,512" "amdgpu-waves-per-eu"="0" "denormal-fp-math-f32"="ieee" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #3 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"amdhsa_code_object_version", i32 400}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "fused_moe.py", directory: "/sglang/python/sglang/srt/layers/fused_moe")
!4 = distinct !DISubprogram(name: "fused_moe_kernel", linkageName: "fused_moe_kernel", scope: !3, file: !3, line: 20, type: !5, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = !DILocation(line: 86, column: 24, scope: !4)
!8 = !DILocation(line: 40, column: 22, scope: !9, inlinedAt: !11)
!9 = distinct !DILexicalBlockFile(scope: !4, file: !10, discriminator: 0)
!10 = !DIFile(filename: "standard.py", directory: "/triton/python/triton/language")
!11 = !DILocation(line: 87, column: 28, scope: !4)
!12 = !DILocation(line: 40, column: 28, scope: !9, inlinedAt: !11)
!13 = !DILocation(line: 40, column: 22, scope: !9, inlinedAt: !14)
!14 = !DILocation(line: 88, column: 27, scope: !4)
!15 = !DILocation(line: 40, column: 28, scope: !9, inlinedAt: !14)
!16 = !DILocation(line: 89, column: 38, scope: !4)
!17 = !DILocation(line: 90, column: 22, scope: !4)
!18 = !DILocation(line: 91, column: 29, scope: !4)
!19 = !DILocation(line: 92, column: 35, scope: !4)
!20 = !DILocation(line: 92, column: 48, scope: !4)
!21 = !DILocation(line: 94, column: 40, scope: !4)
!22 = !DILocation(line: 93, column: 27, scope: !4)
!23 = !DILocation(line: 102, column: 37, scope: !4)
!24 = !DILocation(line: 103, column: 15, scope: !4)
!25 = !DILocation(line: 103, column: 31, scope: !4)
!26 = !DILocation(line: 104, column: 8, scope: !4)
!27 = !DILocation(line: 105, column: 56, scope: !4)
!28 = !DILocation(line: 105, column: 43, scope: !4)
!29 = !DILocation(line: 106, column: 48, scope: !4)
!30 = !DILocation(line: 106, column: 25, scope: !4)
!31 = !DILocation(line: 107, column: 30, scope: !4)
!32 = !DILocation(line: 109, column: 23, scope: !4)
!33 = !DILocation(line: 109, column: 38, scope: !4)
!34 = !DILocation(line: 109, column: 68, scope: !4)
!35 = !DILocation(line: 112, column: 31, scope: !4)
!36 = !DILocation(line: 112, column: 39, scope: !4)
!37 = !DILocation(line: 112, column: 58, scope: !4)
!38 = !DILocation(line: 112, column: 51, scope: !4)
!39 = !DILocation(line: 112, column: 8, scope: !4)
!40 = !DILocation(line: 115, column: 43, scope: !4)
!41 = !DILocation(line: 115, column: 26, scope: !4)
!42 = !DILocation(line: 118, column: 24, scope: !4)
!43 = !DILocation(line: 118, column: 10, scope: !4)
!44 = !DILocation(line: 119, column: 60, scope: !4)
!45 = !DILocation(line: 119, column: 41, scope: !4)
!46 = !DILocation(line: 119, column: 11, scope: !4)
!47 = !DILocation(line: 123, column: 26, scope: !4)
!48 = !DILocation(line: 124, column: 40, scope: !4)
!49 = !DILocation(line: 124, column: 26, scope: !4)
!50 = !DILocation(line: 40, column: 22, scope: !9, inlinedAt: !51)
!51 = !DILocation(line: 133, column: 33, scope: !4)
!52 = !DILocation(line: 40, column: 28, scope: !9, inlinedAt: !51)
!53 = !DILocation(line: 137, column: 12, scope: !4)
!54 = !DILocation(line: 141, column: 20, scope: !4)
!55 = !DILocation(line: 133, column: 22, scope: !4)
!56 = !DILocation(line: 149, column: 18, scope: !4)
!57 = !DILocation(line: 148, column: 18, scope: !4)
!58 = !DILocation(line: 144, column: 36, scope: !4)
!59 = !DILocation(line: 156, column: 37, scope: !4)
!60 = !DILocation(line: 156, column: 47, scope: !4)
!61 = !DILocation(line: 156, column: 59, scope: !4)
!62 = !DILocation(line: 162, column: 33, scope: !4)
!63 = !DILocation(line: 162, column: 21, scope: !4)
!64 = !DILocation(line: 162, column: 55, scope: !4)
!65 = !DILocation(line: 163, column: 55, scope: !4)
!66 = !DILocation(line: 163, column: 36, scope: !4)
!67 = !DILocation(line: 164, column: 21, scope: !4)
